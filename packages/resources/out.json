{
	"id": 0,
	"name": "@serverless-stack/resources",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 85,
					"name": "Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Api construct is a higher level CDK construct that makes it easy to create an API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains.",
						"tags": [
							{
								"tag": "example",
								"text": "\nThe `Api` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Using the minimal config\n\n```ts\nimport { Api } from \"@serverless-stack/resources\";\n\nnew Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n    \"POST   /notes\": \"src/create.main\",\n    \"GET    /notes/{id}\": \"src/get.main\",\n    \"PUT    /notes/{id}\": \"src/update.main\",\n    \"DELETE /notes/{id}\": \"src/delete.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 89,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 430,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 90,
									"name": "new Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 91,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 92,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 93,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 94,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3,
												"typeArguments": [
													{
														"type": "reference",
														"id": 91,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 91,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 85,
										"typeArguments": [
											{
												"type": "reference",
												"id": 91,
												"name": "Authorizers"
											}
										],
										"name": "Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 102,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 423,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 107,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 427,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IHttpRouteAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "IHttpRouteAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 95,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 404,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 96,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 98,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 412,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 100,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 420,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 99,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 416,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 97,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 408,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												98,
												100,
												99,
												97
											]
										}
									]
								}
							}
						},
						{
							"id": 190,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 108,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 428,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 101,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 422,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"typeArguments": [
									{
										"type": "reference",
										"id": 91,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 91,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiProps"
							}
						},
						{
							"id": 103,
							"name": "routesData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 424,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 104,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 105,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 106,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"name": "Fn"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"qualifiedName": "IApplicationListener",
													"package": "aws-cdk-lib",
													"name": "elb.IApplicationListener"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 111,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 112,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 115,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 472,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 116,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 113,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 114,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 109,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 447,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 110,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 150,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 686,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 151,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 152,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 91,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 153,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 766,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 154,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 155,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 156,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 157,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 25,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 91,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 117,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 489,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 118,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created. Specify an object with the key being the route as a string and the value is either a [`FunctionDefinition`](Function.md#functiondefinition) or the [`ApiFunctionRouteProps`](#apifunctionrouteprops).",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 119,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 120,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 25,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 91,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 124,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 531,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 125,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js {10}\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET /notes\": \"src/list.main\",\n  },\n});\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 126,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 127,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 553,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 128,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {11}\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 176,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 985,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 177,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 178,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 27,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 91,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiFunctionRouteProps"
													},
													{
														"type": "reference",
														"id": 34,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 91,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiHttpRouteProps"
													},
													{
														"type": "reference",
														"id": 43,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 91,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiAlbRouteProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 179,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 182,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 180,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"none\""
														},
														{
															"id": 181,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "HttpNoneAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "HttpNoneAuthorizer"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																182,
																180,
																181
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 183,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 186,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 184,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "user_pool"
																	},
																	{
																		"type": "literal",
																		"value": "jwt"
																	},
																	{
																		"type": "literal",
																		"value": "lambda"
																	}
																]
															}
														},
														{
															"id": 185,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "IHttpRouteAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "IHttpRouteAuthorizer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																186,
																184,
																185
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 164,
							"name": "createAlbIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 899,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 165,
									"name": "createAlbIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 166,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 167,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 168,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 43,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 91,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiAlbRouteProps"
											}
										},
										{
											"id": 169,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 170,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 920,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 171,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 172,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 173,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 174,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 27,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 91,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 175,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 148,
							"name": "createHttpApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 585,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 149,
									"name": "createHttpApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 158,
							"name": "createHttpIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 878,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 159,
									"name": "createHttpIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 160,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 161,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 162,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 34,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 91,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiHttpRouteProps"
											}
										},
										{
											"id": 163,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 131,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 567,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 132,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 133,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 135,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 136,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 140,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 137,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "false"
																},
																{
																	"id": 139,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 141,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 142,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 144,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 145,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 146,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 147,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													146,
																													147
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 143,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							144,
																							143
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 138,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		140,
																		137,
																		139,
																		141,
																		138
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 134,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														135,
														134
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 121,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 512,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 123,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 187,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 1020,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 191,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 192,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 86,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 88,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								89
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								102,
								107,
								95,
								190,
								108,
								101,
								103
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								111,
								115,
								113,
								109
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								150,
								153,
								117,
								124,
								127,
								176,
								164,
								170,
								148,
								158,
								131,
								121,
								187,
								191,
								86
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 398,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 193,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 43,
					"name": "ApiAlbRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to an ALB",
						"tags": [
							{
								"tag": "example",
								"text": "\nDOCTODO: Need to complete example\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"alb\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 50,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 49,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 51,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 51,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 45,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 317,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 46,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 47,
											"name": "albListener",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The listener to the application load balancer used for the integration."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 321,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IApplicationListener",
												"package": "aws-cdk-lib",
												"name": "IApplicationListener"
											}
										},
										{
											"id": 48,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 322,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpAlbIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpAlbIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												47,
												48
											]
										}
									]
								}
							}
						},
						{
							"id": 44,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 316,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "alb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								50,
								49,
								45,
								44
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 314,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 51,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 51,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 27,
					"name": "ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 32,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 31,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 33,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 33,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 29,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition used to create the function for this route."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 30,
							"name": "payloadFormatVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The payload format version for the route.",
								"tags": [
									{
										"tag": "default",
										"text": "\"2.0\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 266,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "1.0"
									},
									{
										"type": "literal",
										"value": "2.0"
									}
								]
							}
						},
						{
							"id": 28,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 256,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								32,
								31,
								29,
								30,
								28
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 254,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 33,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 33,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 34,
					"name": "ApiHttpRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to another URL",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"url\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 41,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 40,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 42,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 42,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 37,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 292,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 39,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Override the underlying CDK integration"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 296,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUrlIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpUrlIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												39
											]
										}
									]
								}
							}
						},
						{
							"id": 35,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is a constant"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 287,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "url"
							}
						},
						{
							"id": 36,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL to forward to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								41,
								40,
								37,
								35,
								36
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 282,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 42,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 42,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 64,
					"name": "ApiJwtAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 70,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 356,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 71,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 72,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpJwtAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpJwtAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												72
											]
										}
									]
								}
							}
						},
						{
							"id": 74,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 66,
							"name": "jwt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 352,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 67,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 69,
											"name": "audience",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 354,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 68,
											"name": "issuer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 353,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												69,
												68
											]
										}
									]
								}
							}
						},
						{
							"id": 73,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 65,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 351,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "jwt"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								70,
								74,
								66,
								73,
								65
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 350,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 75,
					"name": "ApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 80,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 367,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 81,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 82,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 368,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												82
											]
										}
									]
								}
							}
						},
						{
							"id": 77,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 364,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 84,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 83,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 78,
							"name": "responseTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 365,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "SIMPLE"
										},
										{
											"type": "literal",
											"value": "IAM"
										}
									]
								}
							}
						},
						{
							"id": 79,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 366,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							}
						},
						{
							"id": 76,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 363,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								80,
								77,
								84,
								83,
								78,
								79,
								76
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 362,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 3,
					"name": "ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 10,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 12,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 23,
								"name": "Authorizers"
							}
						},
						{
							"id": 4,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 6,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 7,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												6,
												7
											]
										}
									]
								}
							}
						},
						{
							"id": 9,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							}
						},
						{
							"id": 11,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 13,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure various defaults to be applied accross all routes"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 17,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 185,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 24,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 24,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 15,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n  routes: {\n    \"GET  /notes\": \"src/list.main\",\n    \"POST /notes\": \"src/create.main\",\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 174,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										},
										{
											"id": 18,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 190,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 19,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 191,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 20,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 21,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 206,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 22,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 221,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																21,
																22
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17,
												16,
												15,
												18,
												19
											]
										}
									]
								}
							}
						},
						{
							"id": 8,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\n{\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 25,
										"typeArguments": [
											{
												"type": "reference",
												"id": 24,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								10,
								12,
								4,
								9,
								11,
								13,
								8
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 35,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 23,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 24,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 23,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 52,
					"name": "ApiUserPoolAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 59,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 344,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 61,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 345,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUserPoolAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpUserPoolAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												61
											]
										}
									]
								}
							}
						},
						{
							"id": 63,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 62,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 53,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 338,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pool"
							}
						},
						{
							"id": 54,
							"name": "userPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 339,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 57,
											"name": "clientIds",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 341,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 56,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 340,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58,
											"name": "region",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												57,
												56,
												58
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								59,
								63,
								62,
								53,
								54
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 337,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 2,
					"name": "ApiPayloadFormatVersion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "PayloadFormatVersions"
							}
						}
					}
				},
				{
					"id": 25,
					"name": "ApiRouteProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 226,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 26,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "FunctionInlineDefinition"
							},
							{
								"type": "reference",
								"id": 27,
								"typeArguments": [
									{
										"type": "reference",
										"id": 26,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiFunctionRouteProps"
							},
							{
								"type": "reference",
								"id": 34,
								"typeArguments": [
									{
										"type": "reference",
										"id": 26,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiHttpRouteProps"
							},
							{
								"type": "reference",
								"id": 43,
								"typeArguments": [
									{
										"type": "reference",
										"id": 26,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiAlbRouteProps"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						85
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						43,
						27,
						34,
						64,
						75,
						3,
						52
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2,
						25
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 347,
			"name": "Auth",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 410,
					"name": "Auth",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Auth` construct is a higher level CDK construct that makes it easy to configure a [Cognito User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [Cognito Identity Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html). Also, allows setting up Auth0, Facebook, Google, Twitter, Apple, and Amazon as authentication providers."
					},
					"children": [
						{
							"id": 414,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 121,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 415,
									"name": "new Auth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 416,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 417,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 418,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 348,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 410,
										"name": "Auth"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 419,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 110,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 420,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 424,
											"name": "authRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 114,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 423,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										},
										{
											"id": 425,
											"name": "unauthRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 115,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 421,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPool",
												"package": "aws-cdk-lib",
												"name": "IUserPool"
											}
										},
										{
											"id": 422,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPoolClient",
												"package": "aws-cdk-lib",
												"name": "IUserPoolClient"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												424,
												423,
												425,
												421,
												422
											]
										}
									]
								}
							}
						},
						{
							"id": 427,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 118,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 428,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 429,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 430,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 483,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 431,
							"name": "permissionsAttachedForAllTriggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 426,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 348,
								"name": "AuthProps"
							}
						},
						{
							"id": 432,
							"name": "cognitoIdentityPoolId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 317,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 433,
									"name": "cognitoIdentityPoolId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 471,
							"name": "addTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 411,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 472,
									"name": "addTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 473,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 474,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 371,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 475,
											"name": "triggerValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 476,
											"name": "functionProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 468,
							"name": "addTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 469,
									"name": "addTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 470,
											"name": "cognitoProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 361,
												"name": "AuthCognitoProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 434,
							"name": "attachPermissionsForAuthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 321,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 435,
									"name": "attachPermissionsForAuthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 436,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 443,
							"name": "attachPermissionsForTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 336,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 444,
									"name": "attachPermissionsForTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 445,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 371,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 446,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 440,
							"name": "attachPermissionsForTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 329,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 441,
									"name": "attachPermissionsForTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 442,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 437,
							"name": "attachPermissionsForUnauthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 325,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 438,
									"name": "attachPermissionsForUnauthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 439,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 465,
							"name": "checkDeprecatedProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 368,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 466,
									"name": "checkDeprecatedProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 467,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 348,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 477,
							"name": "createAuthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "createAuthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 479,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 480,
							"name": "createUnauthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 481,
									"name": "createUnauthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 482,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 450,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 354,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 451,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 452,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 454,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 455,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 456,
																	"name": "identityPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 458,
																	"name": "triggers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 459,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 461,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 462,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 463,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 464,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													463,
																													464
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 460,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							461,
																							460
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 457,
																	"name": "userPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		456,
																		458,
																		457
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 453,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Auth"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														454,
														453
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 447,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 448,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 449,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 371,
													"name": "AuthUserPoolTriggers"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 484,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 485,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 411,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 412,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 413,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								414
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								419,
								427,
								483,
								431,
								426
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								432
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								471,
								468,
								434,
								443,
								440,
								437,
								465,
								477,
								480,
								450,
								447,
								484,
								411
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 109,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 387,
					"name": "AuthAmazonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 388,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								388
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 76,
							"character": 17
						}
					]
				},
				{
					"id": 389,
					"name": "AuthAppleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 390,
							"name": "servicesId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								390
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 80,
							"character": 17
						}
					]
				},
				{
					"id": 384,
					"name": "AuthAuth0Props",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 386,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 385,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								386,
								385
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 71,
							"character": 17
						}
					]
				},
				{
					"id": 398,
					"name": "AuthCdkCfnIdentityPoolProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 400,
							"name": "allowClassicFlow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enables the Basic (Classic) authentication flow.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowClassicFlow"
							}
						},
						{
							"id": 399,
							"name": "allowUnauthenticatedIdentities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 401,
							"name": "cognitoEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The events to configure.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoEvents"
							}
						},
						{
							"id": 402,
							"name": "cognitoIdentityProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Cognito user pools and their client IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"qualifiedName": "IResolvable",
													"package": "aws-cdk-lib",
													"name": "IResolvable"
												},
												{
													"type": "reference",
													"qualifiedName": "CfnIdentityPool.CognitoIdentityProviderProperty",
													"package": "aws-cdk-lib",
													"name": "CognitoIdentityProviderProperty"
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoIdentityProviders"
							}
						},
						{
							"id": 403,
							"name": "cognitoStreams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Configuration options for configuring Amazon Cognito streams.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.CognitoStreamsProperty",
										"package": "aws-cdk-lib",
										"name": "CognitoStreamsProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoStreams"
							}
						},
						{
							"id": 404,
							"name": "developerProviderName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The \"domain\" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 100\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.developerProviderName"
							}
						},
						{
							"id": 405,
							"name": "identityPoolName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of your Amazon Cognito identity pool.",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.identityPoolName"
							}
						},
						{
							"id": 406,
							"name": "openIdConnectProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the OpenID connect providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.openIdConnectProviderArns"
							}
						},
						{
							"id": 407,
							"name": "pushSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The configuration options to be applied to the identity pool.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.PushSyncProperty",
										"package": "aws-cdk-lib",
										"name": "PushSyncProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.pushSync"
							}
						},
						{
							"id": 408,
							"name": "samlProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.samlProviderArns"
							}
						},
						{
							"id": 409,
							"name": "supportedLoginProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that map provider names to provider app IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 88,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.supportedLoginProviders"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								400,
								399,
								401,
								402,
								403,
								404,
								405,
								406,
								407,
								408,
								409
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 97,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "CfnIdentityPoolProps",
									"package": "aws-cdk-lib",
									"name": "cognito.CfnIdentityPoolProps"
								},
								{
									"type": "literal",
									"value": "allowUnauthenticatedIdentities"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 361,
					"name": "AuthCognitoProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 362,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 363,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 364,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPool",
														"package": "aws-cdk-lib",
														"name": "IUserPool"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolProps",
														"package": "aws-cdk-lib",
														"name": "UserPoolProps"
													}
												]
											}
										},
										{
											"id": 365,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 46,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPoolClient",
														"package": "aws-cdk-lib",
														"name": "IUserPoolClient"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolClientOptions",
														"package": "aws-cdk-lib",
														"name": "UserPoolClientOptions"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												364,
												365
											]
										}
									]
								}
							}
						},
						{
							"id": 366,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 367,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 368,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 49,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												368
											]
										}
									]
								}
							}
						},
						{
							"id": 370,
							"name": "signInAliases",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SignInAliases",
								"package": "aws-cdk-lib",
								"name": "SignInAliases"
							}
						},
						{
							"id": 369,
							"name": "triggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 371,
								"name": "AuthUserPoolTriggers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								362,
								366,
								370,
								369
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 391,
					"name": "AuthFacebookProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 392,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								392
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 84,
							"character": 17
						}
					]
				},
				{
					"id": 393,
					"name": "AuthGoogleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 394,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								394
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 88,
							"character": 17
						}
					]
				},
				{
					"id": 348,
					"name": "AuthProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 351,
							"name": "amazon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"name": "AuthAmazonProps"
							}
						},
						{
							"id": 352,
							"name": "apple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 389,
								"name": "AuthAppleProps"
							}
						},
						{
							"id": 350,
							"name": "auth0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 384,
								"name": "AuthAuth0Props"
							}
						},
						{
							"id": 356,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 357,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 358,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 36,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 398,
												"name": "AuthCdkCfnIdentityPoolProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												358
											]
										}
									]
								}
							}
						},
						{
							"id": 349,
							"name": "cognito",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 361,
										"name": "AuthCognitoProps"
									}
								]
							}
						},
						{
							"id": 359,
							"name": "cognitoUserPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPool",
								"package": "aws-cdk-lib",
								"name": "IUserPool"
							}
						},
						{
							"id": 360,
							"name": "cognitoUserPoolClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPoolClient",
								"package": "aws-cdk-lib",
								"name": "IUserPoolClient"
							}
						},
						{
							"id": 353,
							"name": "facebook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 391,
								"name": "AuthFacebookProps"
							}
						},
						{
							"id": 354,
							"name": "google",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 393,
								"name": "AuthGoogleProps"
							}
						},
						{
							"id": 355,
							"name": "twitter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 395,
								"name": "AuthTwitterProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								351,
								352,
								350,
								356,
								349,
								359,
								360,
								353,
								354,
								355
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 395,
					"name": "AuthTwitterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 396,
							"name": "consumerKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 397,
							"name": "consumerSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 94,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								396,
								397
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 92,
							"character": 17
						}
					]
				},
				{
					"id": 371,
					"name": "AuthUserPoolTriggers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 372,
							"name": "createAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 373,
							"name": "customEmailSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 374,
							"name": "customMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 375,
							"name": "customSmsSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 376,
							"name": "defineAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 377,
							"name": "postAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 378,
							"name": "postConfirmation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 379,
							"name": "preAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 380,
							"name": "preSignUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 381,
							"name": "preTokenGeneration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 382,
							"name": "userMigration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 383,
							"name": "verifyAuthChallengeResponse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								372,
								373,
								374,
								375,
								376,
								377,
								378,
								379,
								380,
								381,
								382,
								383
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 56,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						410
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						387,
						389,
						384,
						398,
						361,
						391,
						393,
						348,
						395,
						371
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Auth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 780,
			"name": "Bucket",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 804,
					"name": "Bucket",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Bucket` construct is a higher level CDK construct that makes it easy to create an S3 Bucket and to define its notifications. It also internally connects the notifications and bucket together.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Bucket } from \"@serverless-stack/resources\";\n\nnew Bucket(this, \"Bucket\");\n```\n\n### Removing the S3 Bucket\n\nOnly empty S3 buckets can be deleted. However, you can configure the bucket to automatically delete all objects upon removal.\n\n```js\nimport * as cdk from \"aws-cdk-lib\";\n\nnew Bucket(this, \"Bucket\", {\n  s3Bucket: {\n    autoDeleteObjects: true,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 808,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 198,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 809,
									"name": "new Bucket",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 810,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 811,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 812,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 781,
												"name": "BucketProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 804,
										"name": "Bucket"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 813,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 188,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 814,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 815,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												815
											]
										}
									]
								}
							}
						},
						{
							"id": 865,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 816,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 194,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 741,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 628,
											"name": "Topic"
										}
									]
								}
							}
						},
						{
							"id": 817,
							"name": "permissionsAttachedForAllNotifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 195,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 818,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 196,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 781,
								"name": "BucketProps"
							}
						},
						{
							"id": 819,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 820,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 821,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 822,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 823,
							"name": "notificationFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 227,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 824,
									"name": "notificationFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created functions for the notifications."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 861,
							"name": "addFunctionNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 425,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 862,
									"name": "addFunctionNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 863,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 864,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 792,
														"name": "BucketFunctionNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 849,
							"name": "addNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 325,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 850,
									"name": "addNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 851,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 852,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 741,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 628,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 792,
														"name": "BucketFunctionNotificationProps"
													},
													{
														"type": "reference",
														"id": 796,
														"name": "BucketQueueNotificationProps"
													},
													{
														"type": "reference",
														"id": 800,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 825,
							"name": "addNotifications",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 826,
									"name": "addNotifications",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add notification subscriptions after the bucket has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst bucket = new Bucket(this, \"Bucket\");\nbucket.addNotifications(this, [\"src/notification.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 827,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 828,
											"name": "notifications",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 741,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 628,
															"name": "Topic"
														},
														{
															"type": "reference",
															"id": 792,
															"name": "BucketFunctionNotificationProps"
														},
														{
															"type": "reference",
															"id": 796,
															"name": "BucketQueueNotificationProps"
														},
														{
															"type": "reference",
															"id": 800,
															"name": "BucketTopicNotificationProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 853,
							"name": "addQueueNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 355,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 854,
									"name": "addQueueNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 855,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 856,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 741,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 796,
														"name": "BucketQueueNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 857,
							"name": "addTopicNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 390,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 858,
									"name": "addTopicNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 859,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 860,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 628,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 800,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 829,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 271,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 830,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to all bucket notifications",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nimport { EventType } from \"aws-cdk-lib/aws-s3\";\n\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 831,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 832,
							"name": "attachPermissionsToNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 290,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 833,
									"name": "attachPermissionsToNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to a specific bucket notification",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 834,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 835,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 847,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 313,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 848,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 836,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 303,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 837,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 838,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 840,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 841,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 842,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 843,
																	"name": "notifications",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 844,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {},
																						"children": [
																							{
																								"id": 845,
																								"name": "node",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "fn.node.addr"
																							},
																							{
																								"id": 846,
																								"name": "stack",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "..."
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"kind": 1024,
																								"children": [
																									845,
																									846
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		842,
																		843
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 839,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Bucket"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														840,
														839
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 866,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 867,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 805,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 806,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 807,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								808
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								813,
								865,
								816,
								817,
								818
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								819,
								821,
								823
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								861,
								849,
								825,
								853,
								857,
								829,
								832,
								847,
								836,
								866,
								805
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 187,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 789,
					"name": "BucketFilter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 790,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key starts with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 791,
							"name": "suffix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key ends with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								790,
								791
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 85,
							"character": 17
						}
					]
				},
				{
					"id": 792,
					"name": "BucketFunctionNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [{\n    function: \"src/notification.main\",\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 794,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 795,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 789,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 793,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								794,
								795,
								793
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 108,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 781,
					"name": "BucketProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 786,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 787,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 788,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Allows you to override default settings this construct uses internally to ceate the bucket",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  cdk: {\n    bucket: {\n      bucketName: \"my-bucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Bucket",
														"package": "aws-cdk-lib",
														"name": "Bucket"
													},
													{
														"type": "reference",
														"qualifiedName": "BucketProps",
														"package": "aws-cdk-lib",
														"name": "BucketProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												788
											]
										}
									]
								}
							}
						},
						{
							"id": 782,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 783,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 784,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												784
											]
										}
									]
								}
							}
						},
						{
							"id": 785,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create notifications for various bucket events",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [\"src/notification.main\"],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 741,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 628,
											"name": "Topic"
										},
										{
											"type": "reference",
											"id": 792,
											"name": "BucketFunctionNotificationProps"
										},
										{
											"type": "reference",
											"id": 796,
											"name": "BucketQueueNotificationProps"
										},
										{
											"type": "reference",
											"id": 800,
											"name": "BucketTopicNotificationProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								786,
								782,
								785
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 796,
					"name": "BucketQueueNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Queue(props.stack, \"Queue\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 798,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 799,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 789,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 797,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 741,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								798,
								799,
								797
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 128,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 800,
					"name": "BucketTopicNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a topic listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Topic(props.stack, \"Topic\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 802,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 803,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 789,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 801,
							"name": "topic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The topic to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 628,
								"name": "Topic"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								802,
								803,
								801
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 148,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						804
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						789,
						792,
						781,
						796,
						800
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Bucket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 194,
			"name": "Cron",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 207,
					"name": "Cron",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Cron` construct is a higher level CDK construct that makes it easy to create a cron job. You can create a cron job by handler function and specifying the schedule it needs to run on. Internally this construct uses a [EventBridge Rule](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_events.Rule.html)."
					},
					"children": [
						{
							"id": 211,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 135,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 212,
									"name": "new Cron",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 213,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 195,
												"name": "CronProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 207,
										"name": "Cron"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 123,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 217,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 218,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK EventBridge Rule instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 127,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												218
											]
										}
									]
								}
							}
						},
						{
							"id": 219,
							"name": "jobFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created Function instance that'll be run on schedule."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 240,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 220,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 195,
								"name": "CronProps"
							}
						},
						{
							"id": 221,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 151,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 222,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of [permissions](../util/Permissions.md) to the `jobFunction`. This allows the function to access other AWS resources.",
										"text": "Internally calls [`Function.attachPermissions`](Function.md#attachpermissions).\n\n"
									},
									"parameters": [
										{
											"id": 223,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 236,
							"name": "createEventsRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 167,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 237,
									"name": "createEventsRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 238,
							"name": "createRuleTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 197,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "createRuleTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 224,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 155,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 225,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 226,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 228,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 229,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 232,
																	"name": "job",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 233,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 234,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 235,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								234,
																								235
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 231,
																	"name": "ruleName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 230,
																	"name": "schedule",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "cfnRule.scheduleExpression"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		232,
																		231,
																		230
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 227,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Cron"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														228,
														227
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 241,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 208,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 209,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 210,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								211
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216,
								219,
								240,
								220
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								221,
								236,
								238,
								224,
								241,
								208
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 122,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 202,
					"name": "CronJobProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 204,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 205,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 206,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												206
											]
										}
									]
								}
							}
						},
						{
							"id": 203,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function that will be executed when the job runs.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\n  new Cron(this, \"Cron\", {\n    job: {\n      function: \"src/lambda.main\",\n    },\n  });\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								204,
								203
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 93,
							"character": 17
						}
					]
				},
				{
					"id": 195,
					"name": "CronProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 196,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 197,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 199,
											"name": "cronOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created cron expression."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 23,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CronOptions",
												"package": "aws-cdk-lib",
												"name": "CronOptions"
											}
										},
										{
											"id": 198,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RuleProps",
												"package": "aws-cdk-lib",
												"name": "RuleProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												199,
												198
											]
										}
									]
								}
							}
						},
						{
							"id": 200,
							"name": "job",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The definition of the function to be executed",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Cron(this, \"Cron\", {\n  function : \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 202,
										"name": "CronJobProps"
									}
								]
							}
						},
						{
							"id": 201,
							"name": "schedule",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The schedule for the cron job. The string format takes a [rate expression](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents-expressions.html).",
								"text": "```\n\"rate(_Value Unit_)\"\n\n// For example, every 5 minutes\n\"rate(5 minutes)\"\n```\n\n```\n\"cron(Minutes Hours Day-of-month Month Day-of-week Year)\"\n\n// For example, 10:15 AM (UTC) every day\n\"cron(15 10 * * ? *)\"\n```\n\n```txt\n// Repeat every 5 minutes\n\n\"5 minutes\"\n\n// The equivalent rate expression\n\"rate(5 minutes)\"\n```\n\n```txt\n// 10:15 AM (UTC) every day\n\n// As cdk.aws-events.CronOptions\n{ minute: \"15\", hour: \"10\" }\n\n// The equivalent cron expression\n\"cron(15 10 * * ? *)\"\n```\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Cron } from \"@serverless-stack/resources\";\n\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"rate(1 minute)\",\n});\n```\n\n```js\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"cron(15 10 * * ? *)\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "rate(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "cron(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								196,
								200,
								201
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						207
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						202,
						195
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Cron.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 730,
			"name": "Queue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 741,
					"name": "Queue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Queue` construct is a higher level CDK construct that makes it easy to create a [SQS Queues](https://aws.amazon.com/sqs/). You can create a queue by specifying a consumer function. And then publish to the queue from any part of your serverless app.",
						"text": "This construct makes it easier to define a queue and a consumer. It also internally connects the consumer and queue together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Queue } from \"@serverless-stack/resources\";\n\nnew Queue(this, \"Queue\", {\n  consumer: \"src/queueConsumer.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 745,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 746,
									"name": "new Queue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 747,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 748,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 749,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 731,
												"name": "QueueProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 741,
										"name": "Queue"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 750,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 109,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 751,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 752,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IQueue",
												"package": "aws-cdk-lib",
												"name": "IQueue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												752
											]
										}
									]
								}
							}
						},
						{
							"id": 753,
							"name": "consumerFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internally created consumer `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 777,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 754,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 755,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 731,
								"name": "QueueProps"
							}
						},
						{
							"id": 756,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 145,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 757,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a consumer after creating the queue. Note only one consumer can be added to a queue",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst queue = new Queue(props.stack, \"Queue\");\nqueue.addConsumer(props.stack, \"src/function.handler\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 758,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 759,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 736,
														"name": "QueueConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 760,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 194,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 761,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to the consumer function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst queue = new Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n});\nqueue.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 762,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 775,
							"name": "createQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 213,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 776,
									"name": "createQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 763,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 202,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 764,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 765,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 767,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 768,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 771,
																	"name": "consumer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 772,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 773,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 774,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								773,
																								774
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 769,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 770,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		771,
																		769,
																		770
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 766,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Queue"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														767,
														766
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 778,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 779,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 742,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 743,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 744,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								745
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								750,
								753,
								777,
								754,
								755
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								756,
								760,
								775,
								763,
								778,
								742
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 108,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 736,
					"name": "QueueConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the consumer for the queue and invocation details"
					},
					"children": [
						{
							"id": 738,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 739,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 740,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the consumer.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: {\n    function: \"test/lambda.handler\",\n    cdk: {\n      eventSource: {\n        batchSize: 5,\n      },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 84,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "SqsEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												740
											]
										}
									]
								}
							}
						},
						{
							"id": 737,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: {\n    function: {\n      handler: \"src/function.handler\",\n      timeout: 10,\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								738,
								737
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 49,
							"character": 17
						}
					]
				},
				{
					"id": 731,
					"name": "QueueProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 732,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 733,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 734,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the queue.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n  cdk: {\n    queue: {\n      fifo: true,\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IQueue",
														"package": "aws-cdk-lib",
														"name": "IQueue"
													},
													{
														"type": "reference",
														"qualifiedName": "QueueProps",
														"package": "aws-cdk-lib",
														"name": "QueueProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												734
											]
										}
									]
								}
							}
						},
						{
							"id": 735,
							"name": "consumer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create the consumer for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 736,
										"name": "QueueConsumerProps"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								732,
								735
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						741
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						736,
						731
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Queue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 243,
			"name": "RDS",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 270,
					"name": "RDS",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `RDS` construct is a higher level CDK construct that makes it easy to create an [RDS Serverless Cluster](https://aws.amazon.com/rds/). It uses the following defaults:",
						"text": "- Defaults to using the [Serverless v1 On-Demand autoscaling configuration](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) to make it serverless.\n- Provides a built-in interface for running schema migrations using [Kysely](https://koskimas.github.io/kysely/#migrations).\n- Enables [Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) to allow your Lambda functions to access the database cluster without needing to deploy the functions in a VPC (virtual private cloud).\n- Enables [Backup Snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/BackupRestoreAurora.html) to make sure that you don't lose your data.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { RDS } from \"@serverless-stack/resources\";\n\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"my_database\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 274,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 149,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "new RDS",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 277,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 278,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 244,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 270,
										"name": "RDS"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 279,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 136,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 280,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 281,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 140,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ServerlessCluster",
												"package": "aws-cdk-lib",
												"name": "ServerlessCluster"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												281
											]
										}
									]
								}
							}
						},
						{
							"id": 282,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 142,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 147,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 283,
							"name": "migratorFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 146,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 344,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 285,
							"name": "clusterArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 199,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 286,
									"name": "clusterArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `ServerlessCluster` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 289,
							"name": "clusterEndpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 290,
									"name": "clusterEndpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Endpoint",
										"package": "aws-cdk-lib",
										"name": "Endpoint"
									}
								}
							]
						},
						{
							"id": 287,
							"name": "clusterIdentifier",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 206,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 288,
									"name": "clusterIdentifier",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 291,
							"name": "secretArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 292,
									"name": "secretArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 338,
							"name": "createMigrationCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 400,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 339,
									"name": "createMigrationCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 340,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 333,
							"name": "createMigrationsFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 347,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 334,
									"name": "createMigrationsFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 335,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 336,
											"name": "defaultDatabaseName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 337,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 341,
							"name": "generateMigrationsHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 438,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 342,
									"name": "generateMigrationsHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 343,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 293,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 224,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 294,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 295,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 297,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 298,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 301,
																	"name": "clusterArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 302,
																	"name": "clusterIdentifier",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 303,
																	"name": "defaultDatabaseName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 299,
																	"name": "engine",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 304,
																	"name": "migrator",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 305,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 306,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 307,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								306,
																								307
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 300,
																	"name": "secretArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		301,
																		302,
																		303,
																		299,
																		304,
																		300
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 296,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "RDS"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														297,
														296
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 317,
							"name": "getEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 290,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 318,
									"name": "getEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 319,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 256,
												"name": "RDSEngineType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IClusterEngine",
										"package": "aws-cdk-lib",
										"name": "IClusterEngine"
									}
								}
							]
						},
						{
							"id": 320,
							"name": "getScaling",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 310,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 321,
									"name": "getScaling",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 322,
											"name": "scaling",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 323,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 324,
															"name": "autoPause",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The time before the cluster is paused.",
																"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
																"tags": [
																	{
																		"tag": "default",
																		"text": "true\n"
																	},
																	{
																		"tag": "example",
																		"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 67,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 326,
															"name": "maxCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The maximum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_16\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 81,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														},
														{
															"id": 325,
															"name": "minCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The minimum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_2\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 74,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																324,
																326,
																325
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "ServerlessScalingOptions",
										"package": "aws-cdk-lib",
										"name": "ServerlessScalingOptions"
									}
								}
							]
						},
						{
							"id": 327,
							"name": "getVpc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 325,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 328,
									"name": "getVpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 329,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 257,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVpc",
										"package": "aws-cdk-lib",
										"name": "IVpc"
									}
								}
							]
						},
						{
							"id": 330,
							"name": "getVpcSubnets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 335,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 331,
									"name": "getVpcSubnets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 332,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 257,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "SubnetSelection",
												"package": "aws-cdk-lib",
												"name": "SubnetSelection"
											}
										]
									}
								}
							]
						},
						{
							"id": 345,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 346,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 314,
							"name": "validateMigrationsFileExists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 283,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 315,
									"name": "validateMigrationsFileExists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 316,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 308,
							"name": "validateRDSServerlessClusterProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 239,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 309,
									"name": "validateRDSServerlessClusterProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 310,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 257,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 311,
							"name": "validateRequiredProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 271,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 312,
									"name": "validateRequiredProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 313,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 244,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 271,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 272,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 273,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								274
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								279,
								282,
								284,
								283,
								344
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								285,
								289,
								287,
								291
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								338,
								333,
								341,
								293,
								317,
								320,
								327,
								330,
								345,
								314,
								308,
								311,
								271
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 135,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 257,
					"name": "RDSCdkServerlessClusterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 262,
							"name": "backupRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days during which automatic DB snapshots are retained.\nAutomatic backup retention cannot be disabled on serverless clusters.\nMust be a value from 1 day to 35 days.",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.days(1)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.backupRetention"
							}
						},
						{
							"id": 261,
							"name": "clusterIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "An optional identifier for the cluster",
								"tags": [
									{
										"tag": "default",
										"text": "- A name is automatically generated.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.clusterIdentifier"
							}
						},
						{
							"id": 259,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Credentials for the administrative user",
								"tags": [
									{
										"tag": "default",
										"text": "- A username of 'admin' and SecretsManager-generated password\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Credentials",
								"package": "aws-cdk-lib",
								"name": "Credentials"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.credentials"
							}
						},
						{
							"id": 263,
							"name": "deletionProtection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Indicates whether the DB cluster should have deletion protection enabled.",
								"tags": [
									{
										"tag": "default",
										"text": "- true if removalPolicy is RETAIN, false otherwise\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deletionProtection"
							}
						},
						{
							"id": 264,
							"name": "enableDataApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to enable the Data API.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 84,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.enableDataApi"
							}
						},
						{
							"id": 268,
							"name": "parameterGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Additional parameters to pass to the database engine",
								"tags": [
									{
										"tag": "default",
										"text": "- no parameter group.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IParameterGroup",
								"package": "aws-cdk-lib",
								"name": "IParameterGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parameterGroup"
							}
						},
						{
							"id": 266,
							"name": "removalPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The removal policy to apply when the cluster and its instances are removed\nfrom the stack or replaced during an update.",
								"tags": [
									{
										"tag": "default",
										"text": "- RemovalPolicy.SNAPSHOT (remove the cluster and instances, but retain a snapshot of the data)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 112,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RemovalPolicy",
								"package": "aws-cdk-lib",
								"name": "RemovalPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.removalPolicy"
							}
						},
						{
							"id": 267,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Security group.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new security group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no VPC security groups will be associated with the DB cluster.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 260,
							"name": "storageEncryptionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The KMS key for storage encryption.",
								"tags": [
									{
										"tag": "default",
										"text": "- the default master key will be used for storage encryption\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 306,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.storageEncryptionKey"
							}
						},
						{
							"id": 269,
							"name": "subnetGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Existing subnet group for the cluster.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new subnet group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no subnet group will be associated with the DB cluster\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ISubnetGroup",
								"package": "aws-cdk-lib",
								"name": "ISubnetGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.subnetGroup"
							}
						},
						{
							"id": 258,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							}
						},
						{
							"id": 265,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the instances within the VPC.\nIf provided, the `vpc` property must also be specified.",
								"tags": [
									{
										"tag": "default",
										"text": "- the VPC default strategy if not specified.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								262,
								261,
								259,
								263,
								264,
								268,
								266,
								267,
								260,
								269,
								258,
								265
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 102,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "ServerlessClusterProps",
									"package": "aws-cdk-lib",
									"name": "rds.ServerlessClusterProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "vpc"
										},
										{
											"type": "literal",
											"value": "engine"
										},
										{
											"type": "literal",
											"value": "defaultDatabaseName"
										},
										{
											"type": "literal",
											"value": "scaling"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 244,
					"name": "RDSProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 245,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 246,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 247,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internallly created RDS cluster.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  cdk: {\n    cluster: {\n      clusterIdentifier: \"my-cluster\",\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 34,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 257,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												247
											]
										}
									]
								}
							}
						},
						{
							"id": 249,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Name of a database which is automatically created inside the cluster."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 248,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Database engine of the cluster. Cannot be changed once set."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 256,
								"name": "RDSEngineType"
							}
						},
						{
							"id": 255,
							"name": "migrations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the directory that contains the migration scripts. The `RDS` construct uses [Kysely](https://koskimas.github.io/kysely/) to run and manage schema migrations. The `migrations` prop should point to the folder where your migration files are.",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"acme\",\n  migrations: \"path/to/migration/scripts\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 250,
							"name": "scaling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 251,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 252,
											"name": "autoPause",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The time before the cluster is paused.",
												"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
												"tags": [
													{
														"tag": "default",
														"text": "true\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 254,
											"name": "maxCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The maximum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_16\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 81,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										},
										{
											"id": 253,
											"name": "minCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The minimum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_2\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												252,
												254,
												253
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								245,
								249,
								248,
								255,
								250
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 256,
					"name": "RDSEngineType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 100,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "mysql5.6"
							},
							{
								"type": "literal",
								"value": "mysql5.7"
							},
							{
								"type": "literal",
								"value": "postgresql10.14"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						270
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						257,
						244
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						256
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/RDS.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 690,
			"name": "Script",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 699,
					"name": "Script",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Script` construct is a higher level CDK construct that makes it easy to run a script in a Lambda function during the deployment process. It provides a simple way to build and bundle the script function; and allows you to pass parameter values based on outputs from other constructs in your SST app. So you don't have to hard code values in your script. You can configure a script to run before or after any of the stacks or resources are deployed in your app.",
						"text": "Since the script is running inside a Lambda function, it can interact with resources like the RDS databases, that are inside a VPC; and make AWS API calls to services that the IAM credentials in your local environment or CI might not have permissions to.\n\nA few things to note:\n- It does not run locally. It runs inside a Lambda function.\n- It gets run on every deployment.\n- It can run for a maximum of 15 minutes.\n- [Live Lambda Dev](../live-lambda-development.md) is not enabled for these functions.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal config\n\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/function.create\",\n  onUpdate: \"src/function.update\",\n  onDelete: \"src/function.delete\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 703,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 704,
									"name": "new Script",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 705,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 706,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 707,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 691,
												"name": "ScriptProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 699,
										"name": "Script"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 708,
							"name": "createFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onCreate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 710,
							"name": "deleteFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onDelete `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 119,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 727,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 711,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 120,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 691,
								"name": "ScriptProps"
							}
						},
						{
							"id": 709,
							"name": "updateFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onUpdate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 712,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 153,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 713,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grants additional permissions to the script",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nscript.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 714,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 725,
							"name": "checkDeprecatedFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 254,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 726,
									"name": "checkDeprecatedFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 721,
							"name": "createCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 231,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 722,
									"name": "createCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 723,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "App"
											}
										},
										{
											"id": 724,
											"name": "crFunction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "aws-cdk-lib",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 719,
							"name": "createCustomResourceFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 216,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 720,
									"name": "createCustomResourceFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 715,
							"name": "createUserFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 159,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 716,
									"name": "createUserFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 717,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 718,
											"name": "fnDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 728,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 729,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 700,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 701,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 702,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								703
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								708,
								710,
								727,
								711,
								709
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								712,
								725,
								721,
								719,
								715,
								728,
								700
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 107,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					]
				},
				{
					"id": 691,
					"name": "ScriptProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 693,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 694,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 695,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Script.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												695
											]
										}
									]
								}
							}
						},
						{
							"id": 696,
							"name": "onCreate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs when the Script is created.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onCreate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 698,
							"name": "onDelete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Create the function that runs when the Script is deleted from the stack.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onDelete: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 697,
							"name": "onUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs on every deploy after the Script is created",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onUpdate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 692,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object of input parameters to be passed to the script. Made available in the `event` object of the function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/script.create\",\n  params: {\n    hello: \"world\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								693,
								696,
								698,
								697,
								692
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						699
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						691
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Script.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 486,
			"name": "Table",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 520,
					"name": "Table",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Table` construct is a higher level CDK construct that makes it easy to create a [DynamoDB](https://aws.amazon.com/dynamodb/) table. It uses the following defaults:",
						"text": "- Defaults to using the [On-Demand capacity](https://aws.amazon.com/dynamodb/pricing/on-demand/) to make it perfectly serverless.\n- Enables [Point-in-Time Recovery](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html) to make sure that you don't lose your data.\n- Provides a nicer interface for defining indexes.\n"
					},
					"children": [
						{
							"id": 524,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 237,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 525,
									"name": "new Table",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 526,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 527,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 528,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 487,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 520,
										"name": "Table"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 529,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 224,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 530,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 531,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Table` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITable",
												"package": "aws-cdk-lib",
												"name": "ITable"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												531
											]
										}
									]
								}
							}
						},
						{
							"id": 532,
							"name": "dynamodbTableType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 230,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "CREATED"
									},
									{
										"type": "literal",
										"value": "IMPORTED"
									}
								]
							}
						},
						{
							"id": 540,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 235,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 533,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 534,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 535,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 536,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 606,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 537,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 232,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 538,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 233,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 487,
								"name": "TableProps"
							}
						},
						{
							"id": 539,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 234,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "StreamViewType",
								"package": "aws-cdk-lib",
								"name": "StreamViewType"
							}
						},
						{
							"id": 547,
							"name": "tableArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 364,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 548,
									"name": "tableArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 549,
							"name": "tableName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 371,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 550,
									"name": "tableName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 584,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 528,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 585,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 586,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 587,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 588,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 504,
														"name": "TableConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 551,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 386,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 552,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Define additional consumers for table events",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addConsumers(this, {\n  consumer1: \"src/consumer1.main\",\n  consumer2: \"src/consumer2.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 553,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 554,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 555,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 556,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 557,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 504,
																	"name": "TableConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 541,
							"name": "addGlobalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 542,
									"name": "addGlobalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional global secondary indexes where the `key` is the name of the global secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addGlobalIndexes({\n  gsi1: {\n    partitionKey: \"pk\",\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 543,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 509,
														"name": "TableGlobalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 544,
							"name": "addLocalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 545,
									"name": "addLocalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional local secondary indexes where the `key` is the name of the local secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addLocalIndexes({\n  lsi1: {\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 546,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 515,
														"name": "TableLocalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 558,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 405,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 559,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to all consumers of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 560,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 561,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 419,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 562,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to a specific consumer of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 563,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 564,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 589,
							"name": "buildAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 588,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 590,
									"name": "buildAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 591,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 592,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 593,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 594,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "TableFieldType"
														}
													}
												}
											}
										},
										{
											"id": 595,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Attribute",
										"package": "aws-cdk-lib",
										"name": "Attribute"
									}
								}
							]
						},
						{
							"id": 599,
							"name": "buildKinesisStreamSpec",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 614,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 600,
									"name": "buildKinesisStreamSpec",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 601,
											"name": "kinesisStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "KinesisStream"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 596,
							"name": "buildStreamConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 600,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 597,
									"name": "buildStreamConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 598,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "new_image"
													},
													{
														"type": "literal",
														"value": "old_image"
													},
													{
														"type": "literal",
														"value": "new_and_old_images"
													},
													{
														"type": "literal",
														"value": "keys_only"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "StreamViewType",
												"package": "aws-cdk-lib",
												"name": "StreamViewType"
											}
										]
									}
								}
							]
						},
						{
							"id": 582,
							"name": "createTable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 460,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 583,
									"name": "createTable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 568,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 447,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 569,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 570,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 572,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 573,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 575,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 576,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 578,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 579,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 580,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 581,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													580,
																													581
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 577,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							578,
																							577
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 574,
																	"name": "tableName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		575,
																		574
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 571,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Table"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														572,
														571
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 565,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 566,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given consumer.",
										"text": "```js\n const table = new Table(this, \"Table\", {\n   consumers: {\n     consumer1: \"./src/function.handler\",\n   }\n })\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
									},
									"parameters": [
										{
											"id": 567,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 607,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 608,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 602,
							"name": "validateFieldsAndIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 603,
									"name": "validateFieldsAndIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 604,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 605,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 487,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 521,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 522,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 523,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								524
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								529,
								532,
								540,
								533,
								606,
								537,
								538,
								539
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								547,
								549
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								584,
								551,
								541,
								544,
								558,
								561,
								589,
								599,
								596,
								582,
								568,
								565,
								607,
								602,
								521
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 223,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 504,
					"name": "TableConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 506,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 171,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 507,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 508,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created event source"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 175,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DynamoEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "DynamoEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												508
											]
										}
									]
								}
							}
						},
						{
							"id": 505,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the table."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 170,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								506,
								505
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 166,
							"character": 17
						}
					]
				},
				{
					"id": 509,
					"name": "TableGlobalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 512,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 513,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 514,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created global secondary index"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "GlobalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "GlobalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "partitionKey"
															},
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												514
											]
										}
									]
								}
							}
						},
						{
							"id": 510,
							"name": "partitionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as a partition key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 183,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 511,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								512,
								510,
								511
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 179,
							"character": 17
						}
					]
				},
				{
					"id": 515,
					"name": "TableLocalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 517,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 518,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 519,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created local secondary indexes"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 208,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "LocalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "LocalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												519
											]
										}
									]
								}
							}
						},
						{
							"id": 516,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								517,
								516
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 199,
							"character": 17
						}
					]
				},
				{
					"id": 487,
					"name": "TableProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 501,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 502,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 503,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created cdk table"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITable",
														"package": "aws-cdk-lib",
														"name": "ITable"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "TableProps",
																"package": "aws-cdk-lib",
																"name": "TableProps"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "partitionKey"
																	},
																	{
																		"type": "literal",
																		"value": "sortKey"
																	}
																]
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												503
											]
										}
									]
								}
							}
						},
						{
							"id": 500,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure DynamoDB streams and consumers",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nconst table = new Table(this, \"Table\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: \"src/consumer2.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 155,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 504,
												"name": "TableConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 497,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 498,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 499,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Table. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(this, \"Table\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { topicName: topic.topicName },\n      permissions: [topic],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 139,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												499
											]
										}
									]
								}
							}
						},
						{
							"id": 488,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object defining the fields of the table. Key is the name of the field and the value is the type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 493,
							"name": "globalIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's global secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    gsi1pk: \"string\",\n    gsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"GSI1\": { partitionKey: \"gsi1pk\", sortKey: \"gsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 509,
										"name": "TableGlobalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 495,
							"name": "kinesisStream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "KinesisStream"
							}
						},
						{
							"id": 494,
							"name": "localIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's local secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    lsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"lsi1\": { sortKey: \"lsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 515,
										"name": "TableLocalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 489,
							"name": "primaryIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 490,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 491,
											"name": "partitionKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Define the Partition Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 492,
											"name": "sortKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the Sort Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\", sortKey: \"sk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												491,
												492
											]
										}
									]
								}
							}
						},
						{
							"id": 496,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the information that will be written to the Stream.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {8}\nnew Table(props.stack, \"Table\", {\n  stream: \"new_image\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "new_image"
									},
									{
										"type": "literal",
										"value": "old_image"
									},
									{
										"type": "literal",
										"value": "new_and_old_images"
									},
									{
										"type": "literal",
										"value": "keys_only"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								501,
								500,
								497,
								488,
								493,
								495,
								494,
								489,
								496
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						520
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						504,
						509,
						515,
						487
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Table.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 609,
			"name": "Topic",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 628,
					"name": "Topic",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Topic` construct is a higher level CDK construct that makes it easy to create a serverless pub/sub service. You can create a topic that has a list of subscribers. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of subscribers; Function subscribers (subscribe with a Lambda function) or Queue subscribers (subscribe with a SQS queue).\n\nThis construct makes it easier to define a topic and its subscribers. It also internally connects the subscribers and topic together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Topic } from \"@serverless-stack/resources\";\n\nnew Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 632,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 155,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 633,
									"name": "new Topic",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 634,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 635,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 636,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 610,
												"name": "TopicProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 628,
										"name": "Topic"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 637,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 145,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 638,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 639,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Topic` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 149,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITopic",
												"package": "aws-cdk-lib",
												"name": "ITopic"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												639
											]
										}
									]
								}
							}
						},
						{
							"id": 687,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 641,
							"name": "permissionsAttachedForAllSubscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 152,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 642,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 610,
								"name": "TopicProps"
							}
						},
						{
							"id": 640,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 151,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 741,
											"name": "Queue"
										}
									]
								}
							}
						},
						{
							"id": 647,
							"name": "subscriberFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 184,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 648,
									"name": "subscriberFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created function instances for the subscribers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 649,
							"name": "subscriptions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 193,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 650,
									"name": "subscriptions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of subscriptions for this topic"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Subscription",
											"package": "aws-cdk-lib",
											"name": "Subscription"
										}
									}
								}
							]
						},
						{
							"id": 643,
							"name": "topicArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 644,
									"name": "topicArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 645,
							"name": "topicName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 177,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 646,
									"name": "topicName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 683,
							"name": "addFunctionSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 684,
									"name": "addFunctionSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 685,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 686,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 618,
														"name": "TopicFunctionSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 679,
							"name": "addQueueSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 328,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 680,
									"name": "addQueueSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 681,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 682,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 741,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 623,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 675,
							"name": "addSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 306,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 676,
									"name": "addSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 677,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 678,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 618,
														"name": "TopicFunctionSubscriberProps"
													},
													{
														"type": "reference",
														"id": 741,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 623,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 651,
							"name": "addSubscribers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 226,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 652,
									"name": "addSubscribers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add subscribers to the topic.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.addSubscribers(this, [\"src/subscriber3.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 653,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 654,
											"name": "subscribers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 618,
															"name": "TopicFunctionSubscriberProps"
														},
														{
															"type": "reference",
															"id": 741,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 623,
															"name": "TopicQueueSubscriberProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 655,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 250,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the subscriber functions. This allows the subscribers to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 657,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 658,
							"name": "attachPermissionsToSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 268,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 659,
									"name": "attachPermissionsToSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the list of permissions to a given subscriber by index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n\ntopic.attachPermissionsToSubscriber(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 660,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 661,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 673,
							"name": "createTopic",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 291,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 674,
									"name": "createTopic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 662,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 663,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 664,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 666,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 667,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 669,
																	"name": "subscribers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 670,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 671,
																						"name": "node",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "fn.node.addr"
																					},
																					{
																						"id": 672,
																						"name": "stack",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							671,
																							672
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 668,
																	"name": "topicArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		669,
																		668
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 665,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Topic"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														666,
														665
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 688,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 689,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 629,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 630,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 631,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								632
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								637,
								687,
								641,
								642,
								640
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								647,
								649,
								643,
								645
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								683,
								679,
								675,
								651,
								655,
								658,
								673,
								662,
								688,
								629
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 144,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 618,
					"name": "TopicFunctionSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    function: \"src/function.handler\",\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 620,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 621,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 622,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												622
											]
										}
									]
								}
							}
						},
						{
							"id": 619,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the subscriber function for the topic"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								620,
								619
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 610,
					"name": "TopicProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 615,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 616,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 617,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the topic."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITopic",
														"package": "aws-cdk-lib",
														"name": "ITopic"
													},
													{
														"type": "reference",
														"qualifiedName": "TopicProps",
														"package": "aws-cdk-lib",
														"name": "TopicProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												617
											]
										}
									]
								}
							}
						},
						{
							"id": 611,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 612,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 613,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Topic. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Topic(props.stack, \"Topic\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												613
											]
										}
									]
								}
							}
						},
						{
							"id": 614,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of subscribers to create for this topic",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Topic(this, \"Topic\", {\n  subscribers: [\n    \"src/function1.handler\",\n    \"src/function2.handler\"\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 618,
											"name": "TopicFunctionSubscriberProps"
										},
										{
											"type": "reference",
											"id": 741,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 623,
											"name": "TopicQueueSubscriberProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								615,
								611,
								614
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 623,
					"name": "TopicQueueSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    queue: new Queue(this, \"Queue\", {\n      consumer: \"src/function.handler\",\n    })\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 625,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 626,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 627,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "SqsSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												627
											]
										}
									]
								}
							}
						},
						{
							"id": 624,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue that'll be added as a subscriber to the topic."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 741,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								625,
								624
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 109,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						628
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						618,
						610,
						623
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Topic.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				347,
				780,
				194,
				730,
				243,
				690,
				486,
				609
			]
		}
	]
}