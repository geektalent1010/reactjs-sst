{
	"id": 188176,
	"name": "@serverless-stack/resources",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 188177,
			"name": "Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188261,
					"name": "Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Api construct is a higher level CDK construct that makes it easy to create an API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains.",
						"tags": [
							{
								"tag": "example",
								"text": "\nThe `Api` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Using the minimal config\n\n```ts\nimport { Api } from \"@serverless-stack/resources\";\n\nnew Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n    \"POST   /notes\": \"src/create.main\",\n    \"GET    /notes/{id}\": \"src/get.main\",\n    \"PUT    /notes/{id}\": \"src/update.main\",\n    \"DELETE /notes/{id}\": \"src/delete.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 188265,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 423,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188266,
									"name": "new Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 188267,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 188268,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188269,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188270,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 188179,
												"typeArguments": [
													{
														"type": "reference",
														"id": 188267,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188267,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 188261,
										"typeArguments": [
											{
												"type": "reference",
												"id": 188267,
												"name": "Authorizers"
											}
										],
										"name": "Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 188278,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 416,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188283,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 420,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IHttpRouteAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "IHttpRouteAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188271,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 397,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188272,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188274,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 405,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 188276,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 413,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 188275,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 409,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 188273,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 401,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188274,
												188276,
												188275,
												188273
											]
										}
									]
								}
							}
						},
						{
							"id": 188366,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 188284,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 421,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 188277,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 415,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 188179,
								"typeArguments": [
									{
										"type": "reference",
										"id": 188267,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 188267,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiProps"
							}
						},
						{
							"id": 188279,
							"name": "routesData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 417,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188280,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 188281,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 188282,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 189419,
													"name": "Fn"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"qualifiedName": "IApplicationListener",
													"package": "aws-cdk-lib",
													"name": "elb.IApplicationListener"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 188287,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 451,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188288,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 188291,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188292,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188289,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188290,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 188285,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 440,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188286,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188326,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 674,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188327,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188328,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188267,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188329,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 754,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188330,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188331,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188332,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188333,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188201,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188267,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188293,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 482,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188294,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188295,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188296,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 188201,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 188267,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188300,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 519,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188301,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188302,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188303,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 541,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188304,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188305,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188306,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188352,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 973,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188353,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188354,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 188203,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 188267,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiFunctionRouteProps"
													},
													{
														"type": "reference",
														"id": 188210,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 188267,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiHttpRouteProps"
													},
													{
														"type": "reference",
														"id": 188219,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 188267,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiAlbRouteProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 188355,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 188358,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 188356,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"none\""
														},
														{
															"id": 188357,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "HttpNoneAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "HttpNoneAuthorizer"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																188358,
																188356,
																188357
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 188359,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 188362,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 188360,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "user_pool"
																	},
																	{
																		"type": "literal",
																		"value": "jwt"
																	},
																	{
																		"type": "literal",
																		"value": "lambda"
																	}
																]
															}
														},
														{
															"id": 188361,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "IHttpRouteAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "IHttpRouteAuthorizer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																188362,
																188360,
																188361
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 188340,
							"name": "createAlbIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 887,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188341,
									"name": "createAlbIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188342,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188343,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188344,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188219,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188267,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiAlbRouteProps"
											}
										},
										{
											"id": 188345,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 188346,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 908,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 188347,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188348,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188349,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188350,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188203,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188267,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 188351,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 188324,
							"name": "createHttpApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 573,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188325,
									"name": "createHttpApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188334,
							"name": "createHttpIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 866,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188335,
									"name": "createHttpIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188336,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188337,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188338,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188210,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188267,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiHttpRouteProps"
											}
										},
										{
											"id": 188339,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 188307,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 555,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188308,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 188309,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 188311,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 188312,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 188316,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188313,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "false"
																},
																{
																	"id": 188315,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188317,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 188318,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 188320,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 188321,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 188322,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 188323,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													188322,
																													188323
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 188319,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							188320,
																							188319
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188314,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		188316,
																		188313,
																		188315,
																		188317,
																		188314
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 188310,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														188311,
														188310
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 188297,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 505,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188298,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188299,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 188363,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 1008,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188364,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188365,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188367,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 188368,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 188262,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188263,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188264,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								188265
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188278,
								188283,
								188271,
								188366,
								188284,
								188277,
								188279
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								188287,
								188291,
								188289,
								188285
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188326,
								188329,
								188293,
								188300,
								188303,
								188352,
								188340,
								188346,
								188324,
								188334,
								188307,
								188297,
								188363,
								188367,
								188262
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 391,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 188369,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 190164,
							"name": "GraphQLApi"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 188219,
					"name": "ApiAlbRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to an ALB",
						"tags": [
							{
								"tag": "example",
								"text": "\nDOCTODO: Need to complete example\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"alb\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 188226,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 188225,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 188227,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 188227,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 188221,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 310,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188222,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188223,
											"name": "albListener",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The listener to the application load balancer used for the integration."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 314,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IApplicationListener",
												"package": "aws-cdk-lib",
												"name": "IApplicationListener"
											}
										},
										{
											"id": 188224,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 315,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpAlbIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpAlbIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188223,
												188224
											]
										}
									]
								}
							}
						},
						{
							"id": 188220,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 309,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "alb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188226,
								188225,
								188221,
								188220
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 307,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 188227,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 188227,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 188203,
					"name": "ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 188208,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 188207,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 188209,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 188209,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 188205,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition used to create the function for this route."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 253,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188206,
							"name": "payloadFormatVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The payload format version for the route.",
								"tags": [
									{
										"tag": "default",
										"text": "\"2.0\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "1.0"
									},
									{
										"type": "literal",
										"value": "2.0"
									}
								]
							}
						},
						{
							"id": 188204,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188208,
								188207,
								188205,
								188206,
								188204
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 247,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 188209,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 188209,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 188210,
					"name": "ApiHttpRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to another URL",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"url\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 188217,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 188216,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 188218,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 188218,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 188213,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 285,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188214,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188215,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Override the underlying CDK integration"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 289,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUrlIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpUrlIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188215
											]
										}
									]
								}
							}
						},
						{
							"id": 188211,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is a constant"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 280,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "url"
							}
						},
						{
							"id": 188212,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL to forward to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 284,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188217,
								188216,
								188213,
								188211,
								188212
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 275,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 188218,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 188218,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 188240,
					"name": "ApiJwtAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188246,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 349,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188247,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188248,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 350,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpJwtAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpJwtAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188248
											]
										}
									]
								}
							}
						},
						{
							"id": 188250,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 326,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 188242,
							"name": "jwt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 345,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188243,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188245,
											"name": "audience",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 347,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 188244,
											"name": "issuer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 346,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188245,
												188244
											]
										}
									]
								}
							}
						},
						{
							"id": 188249,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 188241,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 344,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "jwt"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188246,
								188250,
								188242,
								188249,
								188241
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 343,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 188251,
					"name": "ApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188256,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 360,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188257,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188258,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 361,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188258
											]
										}
									]
								}
							}
						},
						{
							"id": 188253,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 357,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 188260,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 326,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 188259,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 188254,
							"name": "responseTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 358,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "SIMPLE"
										},
										{
											"type": "literal",
											"value": "IAM"
										}
									]
								}
							}
						},
						{
							"id": 188255,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 359,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							}
						},
						{
							"id": 188252,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 356,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188256,
								188253,
								188260,
								188259,
								188254,
								188255,
								188252
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 355,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 188179,
					"name": "ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188186,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 188188,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188199,
								"name": "Authorizers"
							}
						},
						{
							"id": 188180,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188181,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188182,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 188183,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188182,
												188183
											]
										}
									]
								}
							}
						},
						{
							"id": 188185,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							}
						},
						{
							"id": 188187,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 188189,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 150,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188190,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188193,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 188192,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 171,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 188200,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 188200,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 188191,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 167,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										},
										{
											"id": 188194,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 183,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 188195,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 188196,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 188197,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 188198,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 214,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																188197,
																188198
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188193,
												188192,
												188191,
												188194,
												188195
											]
										}
									]
								}
							}
						},
						{
							"id": 188184,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\n{\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 188201,
										"typeArguments": [
											{
												"type": "reference",
												"id": 188200,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188186,
								188188,
								188180,
								188185,
								188187,
								188189,
								188184
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 35,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 188199,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188200,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 188199,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 188228,
					"name": "ApiUserPoolAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188235,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 337,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188236,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188237,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 338,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUserPoolAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpUserPoolAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188237
											]
										}
									]
								}
							}
						},
						{
							"id": 188239,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 326,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 188238,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 188229,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 331,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pool"
							}
						},
						{
							"id": 188230,
							"name": "userPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188231,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188233,
											"name": "clientIds",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 334,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 188232,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 333,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188234,
											"name": "region",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 335,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188233,
												188232,
												188234
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188235,
								188239,
								188238,
								188229,
								188230
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 330,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 188178,
					"name": "ApiPayloadFormatVersion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "PayloadFormatVersions"
							}
						}
					}
				},
				{
					"id": 188201,
					"name": "ApiRouteProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 219,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 188202,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 189347,
								"name": "FunctionInlineDefinition"
							},
							{
								"type": "reference",
								"id": 188203,
								"typeArguments": [
									{
										"type": "reference",
										"id": 188202,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiFunctionRouteProps"
							},
							{
								"type": "reference",
								"id": 188210,
								"typeArguments": [
									{
										"type": "reference",
										"id": 188202,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiHttpRouteProps"
							},
							{
								"type": "reference",
								"id": 188219,
								"typeArguments": [
									{
										"type": "reference",
										"id": 188202,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiAlbRouteProps"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188261
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						188219,
						188203,
						188210,
						188240,
						188251,
						188179,
						188228
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						188178,
						188201
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 188370,
			"name": "ApiGatewayV1Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188446,
					"name": "ApiGatewayV1Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ApiGatewayV1Api` construct is a higher level CDK construct that makes it easy to create an API Gateway REST API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains. See the [examples](#examples) for more details.",
						"text": ":::note\nIf you are creating a new API, use the `Api` construct instead.\n:::\n\nThe Api construct uses [API Gateway V2](https://aws.amazon.com/blogs/compute/announcing-http-apis-for-amazon-api-gateway/). It's both faster and cheaper. However, if you need features like Usage Plans and API keys, use the `ApiGatewayV1Api` construct instead. You can [check out a detailed comparison here](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html).\n"
					},
					"children": [
						{
							"id": 188450,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 323,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188451,
									"name": "new ApiGatewayV1Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 188452,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiGatewayV1ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 188453,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188454,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188455,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 188371,
												"typeArguments": [
													{
														"type": "reference",
														"id": 188452,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188452,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 188446,
										"typeArguments": [
											{
												"type": "reference",
												"id": 188452,
												"name": "Authorizers"
											}
										],
										"name": "ApiGatewayV1Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 188463,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 316,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188462,
							"name": "_deployment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 315,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Deployment",
								"package": "aws-cdk-lib",
								"name": "Deployment"
							}
						},
						{
							"id": 188473,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 320,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IAuthorizer",
										"package": "aws-cdk-lib",
										"name": "IAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188456,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 297,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188457,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188459,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created log group"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 305,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 188461,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created certificate"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 313,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Certificate",
														"package": "aws-cdk-lib",
														"name": "Certificate"
													},
													{
														"type": "reference",
														"qualifiedName": "DnsValidatedCertificate",
														"package": "aws-cdk-lib",
														"name": "DnsValidatedCertificate"
													}
												]
											}
										},
										{
											"id": 188460,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created domain name"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 309,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "aws-cdk-lib",
												"name": "DomainName"
											}
										},
										{
											"id": 188458,
											"name": "restApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created rest API"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 301,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RestApi",
												"package": "aws-cdk-lib",
												"name": "RestApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188459,
												188461,
												188460,
												188458
											]
										}
									]
								}
							}
						},
						{
							"id": 188469,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 319,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188470,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 188471,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 188472,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 189419,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 188464,
							"name": "importedResources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 317,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188465,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 188466,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 188467,
												"name": "path",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "IResource",
											"package": "aws-cdk-lib",
											"name": "apig.IResource"
										}
									}
								}
							}
						},
						{
							"id": 188553,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 188474,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 321,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 188468,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 318,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 188371,
								"typeArguments": [
									{
										"type": "reference",
										"id": 188452,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 188452,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiGatewayV1ApiProps"
							}
						},
						{
							"id": 188477,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 356,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188478,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 188479,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 363,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188480,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 188475,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 345,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188476,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188536,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 891,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188537,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188538,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188452,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188539,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 975,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188540,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188541,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188542,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188543,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188452,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 188481,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 379,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188482,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188483,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188484,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 188452,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiGatewayV1ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188550,
							"name": "assertDomainNameIsLowerCase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 1110,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188551,
									"name": "assertDomainNameIsLowerCase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188552,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188488,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 421,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188489,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188490,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188507,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 459,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188508,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new ApiGatewayV1Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188509,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188510,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188513,
							"name": "buildCorsConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 583,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188514,
									"name": "buildCorsConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188515,
											"name": "cors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "CorsOptions",
												"package": "aws-cdk-lib",
												"name": "CorsOptions"
											}
										]
									}
								}
							]
						},
						{
							"id": 188544,
							"name": "buildRouteMethodOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 1065,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188545,
									"name": "buildRouteMethodOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188546,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188391,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 188452,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiFunctionRouteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "MethodOptions",
										"package": "aws-cdk-lib",
										"name": "MethodOptions"
									}
								}
							]
						},
						{
							"id": 188522,
							"name": "createARecords",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 825,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188523,
									"name": "createARecords",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188524,
											"name": "hostedZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										},
										{
											"id": 188525,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188526,
											"name": "apigDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IDomainName",
												"package": "aws-cdk-lib",
												"name": "IDomainName"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188519,
							"name": "createCustomDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 617,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188520,
									"name": "createCustomDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188521,
											"name": "customDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 188430,
														"name": "ApiGatewayV1ApiCustomDomainProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188516,
							"name": "createGatewayResponseForCors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 595,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188517,
									"name": "createGatewayResponseForCors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188518,
											"name": "cors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188511,
							"name": "createRestApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 473,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188512,
									"name": "createRestApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188491,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 428,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188492,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 188493,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 188495,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 188496,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 188497,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188499,
																	"name": "restApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188500,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 188501,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 188503,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 188504,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 188505,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 188506,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													188505,
																													188506
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 188502,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							188503,
																							188502
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188498,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		188497,
																		188499,
																		188500,
																		188498
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 188494,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "ApiGatewayV1Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														188495,
														188494
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 188485,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 408,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188486,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new ApiGatewayV1Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188487,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 188533,
							"name": "getResourceForPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 870,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188534,
									"name": "getResourceForPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188535,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IResource",
										"package": "aws-cdk-lib",
										"name": "IResource"
									}
								}
							]
						},
						{
							"id": 188527,
							"name": "importResources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 855,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188528,
									"name": "importResources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188529,
											"name": "resources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 188530,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 188531,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 188532,
																"name": "path",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188547,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 1106,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188548,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188549,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188554,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 188555,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 188447,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188448,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188449,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								188450
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188463,
								188462,
								188473,
								188456,
								188469,
								188464,
								188553,
								188474,
								188468
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								188477,
								188479,
								188475
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188536,
								188539,
								188481,
								188550,
								188488,
								188507,
								188513,
								188544,
								188522,
								188519,
								188516,
								188511,
								188491,
								188485,
								188533,
								188527,
								188547,
								188554,
								188447
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 288,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 188556,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiGatewayV1ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 188430,
					"name": "ApiGatewayV1ApiCustomDomainProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188441,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 267,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188442,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188445,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 270,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 188443,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 268,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IDomainName",
												"package": "aws-cdk-lib",
												"name": "IDomainName"
											}
										},
										{
											"id": 188444,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 269,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188445,
												188443,
												188444
											]
										}
									]
								}
							}
						},
						{
							"id": 188431,
							"name": "domainName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 257,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188434,
							"name": "endpointType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "edge"
									},
									{
										"type": "literal",
										"value": "regional"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						},
						{
							"id": 188432,
							"name": "hostedZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 258,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188435,
							"name": "mtls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 261,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188436,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188437,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 262,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189281,
												"name": "Bucket"
											}
										},
										{
											"id": 188438,
											"name": "key",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 263,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188439,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 264,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188437,
												188438,
												188439
											]
										}
									]
								}
							}
						},
						{
							"id": 188433,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188440,
							"name": "securityPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 266,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "TLS 1.0"
									},
									{
										"type": "literal",
										"value": "TLS 1.2"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188441,
								188431,
								188434,
								188432,
								188435,
								188433,
								188440
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 256,
							"character": 17
						}
					]
				},
				{
					"id": 188391,
					"name": "ApiGatewayV1ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(props.stack, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 188394,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 199,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 188393,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 195,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 188399,
											"name": "AuthorizerKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 188399,
											"name": "AuthorizerKeys"
										}
									}
								]
							}
						},
						{
							"id": 188395,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188396,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188398,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 205,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaIntegrationOptions",
												"package": "aws-cdk-lib",
												"name": "LambdaIntegrationOptions"
											}
										},
										{
											"id": 188397,
											"name": "method",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 201,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "MethodOptions",
														"package": "aws-cdk-lib",
														"name": "MethodOptions"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "authorizationScopes"
															},
															{
																"type": "literal",
																"value": "authorizer"
															},
															{
																"type": "literal",
																"value": "authorizationType"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188398,
												188397
											]
										}
									]
								}
							}
						},
						{
							"id": 188392,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 194,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188394,
								188393,
								188395,
								188392
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 193,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 188399,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 188420,
					"name": "ApiGatewayV1ApiLambdaRequestAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188428,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 188424,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188425,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188426,
											"name": "assumeRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 250,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IRole",
												"package": "aws-cdk-lib",
												"name": "IRole"
											}
										},
										{
											"id": 188427,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 251,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "TokenAuthorizer",
												"package": "aws-cdk-lib",
												"name": "TokenAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188426,
												188427
											]
										}
									]
								}
							}
						},
						{
							"id": 188422,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 188423,
							"name": "identitySources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 248,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 188429,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 216,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 188421,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 246,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda_request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188428,
								188424,
								188422,
								188423,
								188429,
								188421
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 244,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 188409,
					"name": "ApiGatewayV1ApiLambdaTokenAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188418,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 188414,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188415,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188416,
											"name": "assumeRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 238,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IRole",
												"package": "aws-cdk-lib",
												"name": "IRole"
											}
										},
										{
											"id": 188417,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 239,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "TokenAuthorizer",
												"package": "aws-cdk-lib",
												"name": "TokenAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188416,
												188417
											]
										}
									]
								}
							}
						},
						{
							"id": 188411,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 234,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 188412,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 235,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188419,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 216,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 188410,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda_token"
							}
						},
						{
							"id": 188413,
							"name": "validationRegex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 236,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188418,
								188414,
								188411,
								188412,
								188419,
								188410,
								188413
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 231,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 188371,
					"name": "ApiGatewayV1ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188381,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  accessLog: true\n});\n\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 116,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 188383,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 142,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188389,
								"name": "Authorizers"
							}
						},
						{
							"id": 188372,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 46,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188373,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188375,
											"name": "importedPaths",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 188376,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 188377,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 188378,
																"name": "path",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 188374,
											"name": "restApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created rest api",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\n\nnew Api(this, \"Api\", {\n  cdk: {\n    restApi: {\n    description: \"My api\"\n  }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 62,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IRestApi",
														"package": "aws-cdk-lib",
														"name": "IRestApi"
													},
													{
														"type": "reference",
														"qualifiedName": "RestApiProps",
														"package": "aws-cdk-lib",
														"name": "RestApiProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188375,
												188374
											]
										}
									]
								}
							}
						},
						{
							"id": 188380,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew ApiGatewayV1Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 96,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 188382,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 138,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 188430,
										"name": "ApiGatewayV1ApiCustomDomainProps"
									}
								]
							}
						},
						{
							"id": 188384,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 143,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188388,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 171,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 188387,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 164,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 188390,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 188390,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 188386,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew ApiGatewayV1Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188388,
												188387,
												188386
											]
										}
									]
								}
							}
						},
						{
							"id": 188379,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 188390,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiGatewayV1ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188381,
								188383,
								188372,
								188380,
								188382,
								188384,
								188379
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 39,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 188389,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiGatewayV1ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188390,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 188389,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 188400,
					"name": "ApiGatewayV1ApiUserPoolsAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188407,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 188404,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 225,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188405,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188406,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 226,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CognitoUserPoolsAuthorizer",
												"package": "aws-cdk-lib",
												"name": "CognitoUserPoolsAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188406
											]
										}
									]
								}
							}
						},
						{
							"id": 188403,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 224,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188408,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 216,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 188401,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 222,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pools"
							}
						},
						{
							"id": 188402,
							"name": "userPoolIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 223,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188407,
								188404,
								188403,
								188408,
								188401,
								188402
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 220,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188446
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						188430,
						188391,
						188420,
						188409,
						188371,
						188400
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 188557,
			"name": "App",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188560,
					"name": "App",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 188573,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 167,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188574,
									"name": "new App",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 188575,
											"name": "deployProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AppDeployProps"
											},
											"defaultValue": "{}"
										},
										{
											"id": 188576,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "AppProps",
												"package": "aws-cdk-lib",
												"name": "AppProps"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 188560,
										"name": "App"
									},
									"overwrites": {
										"type": "reference",
										"name": "cdk.App.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "cdk.App.constructor"
							}
						},
						{
							"id": 188659,
							"name": "_assemblyBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The cloud assembly builder that is being used for this App",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 90,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CloudAssemblyBuilder",
								"package": "aws-cdk-lib",
								"name": "CloudAssemblyBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App._assemblyBuilder"
							}
						},
						{
							"id": 188597,
							"name": "_defaultRemovalPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 132,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "destroy"
									},
									{
										"type": "literal",
										"value": "retain"
									},
									{
										"type": "literal",
										"value": "snapshot"
									}
								]
							}
						},
						{
							"id": 188581,
							"name": "account",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The AWS account the app is being deployed to. This comes from the IAM credentials being used to run the SST CLI."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 103,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "cdk.App.account"
							}
						},
						{
							"id": 188592,
							"name": "appPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 125,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188584,
							"name": "buildDir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 109,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188586,
							"name": "debugBridge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 113,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188588,
							"name": "debugBucketArn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 117,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188589,
							"name": "debugBucketName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 119,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188587,
							"name": "debugEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188591,
							"name": "debugIncreaseTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 123,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 188590,
							"name": "debugStartedAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 121,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 188593,
							"name": "defaultFunctionProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 128,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 189349,
											"name": "FunctionProps"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 188594,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"signatures": [
													{
														"id": 188595,
														"name": "__type",
														"kind": 4096,
														"kindString": "Call signature",
														"flags": {},
														"parameters": [
															{
																"id": 188596,
																"name": "stack",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "reference",
																	"qualifiedName": "Stack",
																	"package": "aws-cdk-lib",
																	"name": "Stack"
																}
															}
														],
														"type": {
															"type": "reference",
															"id": 189349,
															"name": "FunctionProps"
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 188585,
							"name": "esbuildConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188605,
							"name": "lambdaHandlers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A list of Lambda functions in the app"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 150,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "FunctionHandlerProps"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 188582,
							"name": "lint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 105,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 188577,
							"name": "local",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether or not the app is running locally under `sst start`"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 86,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 188578,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of your app, comes from the `name` in your `sst.json`"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 91,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188668,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.node"
							}
						},
						{
							"id": 188661,
							"name": "parentStage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The parent stage or `undefined` if this is the app.\n*"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 101,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Stage",
								"package": "aws-cdk-lib",
								"name": "Stage"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.parentStage"
							}
						},
						{
							"id": 188580,
							"name": "region",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The region the app is being deployed to. If this is not specified as the --region option in the SST CLI, it'll default to the region in your sst.json."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 99,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "cdk.App.region"
							}
						},
						{
							"id": 188606,
							"name": "siteEnvironments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 151,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteEnvironmentOutputsInfo"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 188607,
							"name": "skipBuild",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Skip building Function code\nNote that on `sst remove`, we do not want to bundle the Lambda functions.\n     CDK disables bundling (ie. zipping) for `cdk destroy` command.\n     But SST runs `cdk synth` first then manually remove each stack. Hence\n     we cannot rely on CDK to disable bundling, and we disable it manually.\n     This allows us to disable BOTH building and bundling, where as CDK\n     would only disable the latter. For example, `cdk destroy` still trys\n     to install Python dependencies in Docker.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 165,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 188579,
							"name": "stage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The stage the app is being deployed to. If this is not specified as the --stage option, it'll default to the stage configured during the initial run of the SST CLI."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 95,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188660,
							"name": "stageName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of the stage. Based on names of the parent stages separated by\nhypens."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 96,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.stageName"
							}
						},
						{
							"id": 188600,
							"name": "synthCallback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 142,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188601,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 188602,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "The callback after synth completes."
											},
											"parameters": [
												{
													"id": 188603,
													"name": "lambdaHandlers",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "FunctionHandlerProps"
														}
													}
												},
												{
													"id": 188604,
													"name": "siteEnvironments",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "BaseSiteEnvironmentOutputsInfo"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 188583,
							"name": "typeCheck",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 107,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 188666,
							"name": "artifactId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 122,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 188667,
									"name": "artifactId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Artifact ID of the assembly if it is a nested stage. The root stage (app)\nwill return an empty string.",
										"text": "Derived from the construct path.\n\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.artifactId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.artifactId"
							}
						},
						{
							"id": 188664,
							"name": "assetOutdir",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 114,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 188665,
									"name": "assetOutdir",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The cloud assembly asset output directory."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.assetOutdir"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.assetOutdir"
							}
						},
						{
							"id": 188598,
							"name": "defaultRemovalPolicy",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 135,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188599,
									"name": "defaultRemovalPolicy",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "internal",
												"text": ""
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": "destroy"
											},
											{
												"type": "literal",
												"value": "retain"
											},
											{
												"type": "literal",
												"value": "snapshot"
											}
										]
									}
								}
							]
						},
						{
							"id": 188662,
							"name": "outdir",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 110,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 188663,
									"name": "outdir",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The cloud assembly output directory."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.outdir"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.outdir"
							}
						},
						{
							"id": 188623,
							"name": "addDefaultFunctionEnv",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 262,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188624,
									"name": "addDefaultFunctionEnv",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds additional default environment variables to be applied to all Lambda functions in the app.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napp.addDefaultFunctionPermissions({\n  \"MY_ENV_VAR\": \"my-value\"\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188625,
											"name": "environment",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188626,
							"name": "addDefaultFunctionLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 271,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188627,
									"name": "addDefaultFunctionLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds additional default layers to be applied to all Lambda functions in the stack."
									},
									"parameters": [
										{
											"id": 188628,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188620,
							"name": "addDefaultFunctionPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 246,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188621,
									"name": "addDefaultFunctionPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds additional default Permissions to be applied to all Lambda functions in the app.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napp.addDefaultFunctionPermissions([\"s3\"])\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188622,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188648,
							"name": "applyRemovalPolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 386,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188649,
									"name": "applyRemovalPolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188650,
											"name": "current",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										},
										{
											"id": 188651,
											"name": "policy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "destroy"
													},
													{
														"type": "literal",
														"value": "retain"
													},
													{
														"type": "literal",
														"value": "snapshot"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188643,
							"name": "buildConstructsMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 338,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188644,
									"name": "buildConstructsMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188645,
							"name": "buildConstructsMetadata_collectConstructs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 375,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188646,
									"name": "buildConstructsMetadata_collectConstructs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188647,
											"name": "construct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intersection",
											"types": [
												{
													"type": "reference",
													"name": "SSTConstruct"
												},
												{
													"type": "reference",
													"qualifiedName": "IConstruct",
													"package": "constructs",
													"name": "IConstruct"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 188640,
							"name": "getInputFilesFromEsbuildMetafile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 326,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188641,
									"name": "getInputFilesFromEsbuildMetafile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188642,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 188632,
							"name": "isJestTest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 313,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188633,
									"name": "isJestTest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 188608,
							"name": "logicalPrefixedName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 199,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188609,
									"name": "logicalPrefixedName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188610,
											"name": "logicalName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188634,
							"name": "registerLambdaHandler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 318,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188635,
									"name": "registerLambdaHandler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188636,
											"name": "handler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FunctionHandlerProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188637,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 322,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188638,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188639,
											"name": "environment",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaseSiteEnvironmentOutputsInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188614,
							"name": "setDefaultFunctionProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 228,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188615,
									"name": "setDefaultFunctionProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The default function props to be applied to all the Lambda functions in the app. These default values will be overridden if a Function sets its own props.\nThis needs to be called before a stack with any functions have been added to the app.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napp.setDefaultFunctionProps({\n  runtime: \"nodejs12.x\",\n  timeout: 30\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188616,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189349,
														"name": "FunctionProps"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 188617,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 188618,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 188619,
																			"name": "stack",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "Stack",
																				"package": "aws-cdk-lib",
																				"name": "Stack"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 189349,
																		"name": "FunctionProps"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188611,
							"name": "setDefaultRemovalPolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 212,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188612,
									"name": "setDefaultRemovalPolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The default removal policy that'll be applied to all the resources in the app. This can be useful to set ephemeral (dev or feature branch) environments to remove all the resources on deletion.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napp.setDefaultRemovalPolicy(app.local ? \"destroy\" : \"retain\")\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188613,
											"name": "policy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "destroy"
													},
													{
														"type": "literal",
														"value": "retain"
													},
													{
														"type": "literal",
														"value": "snapshot"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188652,
							"name": "stack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 459,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188653,
									"name": "stack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 188654,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FunctionalStack"
											}
										}
									],
									"parameters": [
										{
											"id": 188655,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188654,
												"name": "T"
											}
										},
										{
											"id": 188656,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "StackProps",
														"package": "aws-cdk-lib",
														"name": "StackProps"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 188657,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 188658,
																	"name": "id",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/resources/src/App.ts",
																			"line": 461,
																			"character": 27
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		188658
																	]
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 188654,
													"name": "T"
												}
											],
											"qualifiedName": "ReturnType",
											"package": "typescript",
											"name": "ReturnType"
										},
										"extendsType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"qualifiedName": "Promise",
											"package": "typescript",
											"name": "Promise"
										},
										"trueType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "void"
												}
											],
											"qualifiedName": "Promise",
											"package": "typescript",
											"name": "Promise"
										},
										"falseType": {
											"type": "reference",
											"id": 188560,
											"name": "App"
										}
									}
								}
							]
						},
						{
							"id": 188629,
							"name": "synth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/App.ts",
									"line": 277,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188630,
									"name": "synth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188631,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "StageSynthesisOptions",
												"package": "aws-cdk-lib",
												"name": "StageSynthesisOptions"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "CloudAssembly",
										"package": "aws-cdk-lib",
										"name": "CloudAssembly"
									},
									"overwrites": {
										"type": "reference",
										"name": "cdk.App.synth"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "cdk.App.synth"
							}
						},
						{
							"id": 188669,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 188670,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.toString"
							}
						},
						{
							"id": 188561,
							"name": "isApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/app.d.ts",
									"line": 83,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188562,
									"name": "isApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Checks if an object is an instance of the `App` class.",
										"returns": "`true` if `obj` is an `App`."
									},
									"parameters": [
										{
											"id": 188563,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The object to evaluate\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "obj",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "App",
											"package": "aws-cdk-lib",
											"name": "App"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.isApp"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.isApp"
							}
						},
						{
							"id": 188570,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188571,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188572,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.isConstruct"
							}
						},
						{
							"id": 188567,
							"name": "isStage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 74,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188568,
									"name": "isStage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Test whether the given construct is a stage."
									},
									"parameters": [
										{
											"id": 188569,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Stage",
											"package": "aws-cdk-lib",
											"name": "Stage"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.isStage"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.isStage"
							}
						},
						{
							"id": 188564,
							"name": "of",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/stage.d.ts",
									"line": 69,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188565,
									"name": "of",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the stage this construct is contained with, if available. If called\non a nested stage, returns its parent."
									},
									"parameters": [
										{
											"id": 188566,
											"name": "construct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Stage",
												"package": "aws-cdk-lib",
												"name": "Stage"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "cdk.App.of"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "cdk.App.of"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								188573
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188659,
								188597,
								188581,
								188592,
								188584,
								188586,
								188588,
								188589,
								188587,
								188591,
								188590,
								188593,
								188585,
								188605,
								188582,
								188577,
								188578,
								188668,
								188661,
								188580,
								188606,
								188607,
								188579,
								188660,
								188600,
								188583
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								188666,
								188664,
								188598,
								188662
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188623,
								188626,
								188620,
								188648,
								188643,
								188645,
								188640,
								188632,
								188608,
								188634,
								188637,
								188614,
								188611,
								188652,
								188629,
								188669,
								188561,
								188570,
								188567,
								188564
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/App.ts",
							"line": 82,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "App",
							"package": "aws-cdk-lib",
							"name": "App"
						}
					]
				},
				{
					"id": 188559,
					"name": "AppProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/App.ts",
							"line": 80,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AppProps",
						"package": "aws-cdk-lib",
						"name": "cdk.AppProps"
					}
				},
				{
					"id": 188558,
					"name": "DeployProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/App.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "AppDeployProps"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188560
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						188559,
						188558
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/App.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189971,
			"name": "AppSyncApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 190033,
					"name": "AppSyncApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 190037,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 308,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 190038,
									"name": "new AppSyncApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 190039,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190040,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190041,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189972,
												"name": "AppSyncApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 190033,
										"name": "AppSyncApi"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 190042,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 293,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190043,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190044,
											"name": "graphqlApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created appsync api"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 297,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "GraphqlApi",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "GraphqlApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190044
											]
										}
									]
								}
							}
						},
						{
							"id": 190049,
							"name": "dataSourcesByDsKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 300,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190050,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 190051,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 190052,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "BaseDataSource",
											"package": "@aws-cdk/aws-appsync-alpha",
											"name": "appsync.BaseDataSource"
										}
									}
								}
							}
						},
						{
							"id": 190053,
							"name": "dsKeysByResKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 303,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190054,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 190055,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 190056,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 190045,
							"name": "functionsByDsKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 299,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190046,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 190047,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 190048,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 189419,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 190138,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 190061,
							"name": "permissionsAttachedForAllFunctions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 305,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 190062,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 306,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 189972,
								"name": "AppSyncApiProps"
							}
						},
						{
							"id": 190057,
							"name": "resolversByResKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 304,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190058,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 190059,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 190060,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "Resolver",
											"package": "@aws-cdk/aws-appsync-alpha",
											"name": "appsync.Resolver"
										}
									}
								}
							}
						},
						{
							"id": 190063,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 336,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190064,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190112,
							"name": "addDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 547,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190113,
									"name": "addDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190114,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190115,
											"name": "dsKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190116,
											"name": "dsValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189981,
														"name": "AppSyncApiLambdaDataSourceProps"
													},
													{
														"type": "reference",
														"id": 189986,
														"name": "AppSyncApiDynamoDbDataSourceProps"
													},
													{
														"type": "reference",
														"id": 189996,
														"name": "AppSyncApiRdsDataSourceProps"
													},
													{
														"type": "reference",
														"id": 190009,
														"name": "AppSyncApiHttpDataSourceProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 190065,
							"name": "addDataSources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190066,
									"name": "addDataSources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add data sources after the construct has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addDataSources(props.stack, {\n  billingDS: \"src/billing.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190067,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190068,
											"name": "dataSources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190069,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 190070,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 190071,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 189347,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 189981,
																	"name": "AppSyncApiLambdaDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 189986,
																	"name": "AppSyncApiDynamoDbDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 189996,
																	"name": "AppSyncApiRdsDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 190009,
																	"name": "AppSyncApiHttpDataSourceProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190117,
							"name": "addResolver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 648,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190118,
									"name": "addResolver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190119,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190120,
											"name": "resKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190121,
											"name": "resValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 190019,
														"name": "AppSyncApiResolverProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 190072,
							"name": "addResolvers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 384,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190073,
									"name": "addResolvers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add resolvers the construct has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addResolvers(this, {\n  \"Mutation charge\": \"billingDS\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190074,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190075,
											"name": "resolvers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190076,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 190077,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 190078,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 189347,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 190019,
																	"name": "AppSyncApiResolverProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190103,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 476,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190104,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all function datasources",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190105,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190106,
							"name": "attachPermissionsToDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 490,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190107,
									"name": "attachPermissionsToDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific function datasource. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\napi.attachPermissionsToRoute(\"Mutation charge\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190108,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190109,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190134,
							"name": "buildDataSourceKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 799,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190135,
									"name": "buildDataSourceKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190136,
											"name": "typeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190137,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190131,
							"name": "buildMappingTemplate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 783,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190132,
									"name": "buildMappingTemplate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190133,
											"name": "mapping",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "MappingTemplate"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "MappingTemplate",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "MappingTemplate"
											}
										]
									}
								}
							]
						},
						{
							"id": 190110,
							"name": "createGraphApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 504,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190111,
									"name": "createGraphApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190079,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 403,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190080,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 190081,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190083,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190084,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190086,
																	"name": "appSyncApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190087,
																	"name": "dataSources",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 190088,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 190090,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 190091,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 190092,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 190093,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													190092,
																													190093
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 190089,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							190090,
																							190089
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190085,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190086,
																		190087,
																		190085
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190082,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "AppSync"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														190083,
														190082
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 190097,
							"name": "getDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190098,
									"name": "getDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a datasource by name",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.getDataSource(\"billingDS\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190099,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "BaseDataSource",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "BaseDataSource"
											}
										]
									}
								}
							]
						},
						{
							"id": 190094,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 425,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190095,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given resolver.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst func = api.getFunction(\"Mutation charge\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190096,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 190100,
							"name": "getResolver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 462,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190101,
									"name": "getResolver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a resolver",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.getResolver(\"Mutation charge\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190102,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Resolver",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "Resolver"
											}
										]
									}
								}
							]
						},
						{
							"id": 190125,
							"name": "isDataSourceResolverProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 774,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190126,
									"name": "isDataSourceResolverProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190127,
											"name": "object",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190019,
												"name": "AppSyncApiResolverProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 190122,
							"name": "isLambdaResolverProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 770,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190123,
									"name": "isLambdaResolverProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190124,
											"name": "object",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190019,
												"name": "AppSyncApiResolverProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 190128,
							"name": "normalizeResolverKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 778,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190129,
									"name": "normalizeResolverKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190130,
											"name": "resolverKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190139,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190140,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 190034,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 190035,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190036,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								190037
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190042,
								190049,
								190053,
								190045,
								190138,
								190061,
								190062,
								190057
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								190063
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190112,
								190065,
								190117,
								190072,
								190103,
								190106,
								190134,
								190131,
								190110,
								190079,
								190097,
								190094,
								190100,
								190125,
								190122,
								190128,
								190139,
								190034
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 292,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 190027,
					"name": "AppSyncApiCdkGraphqlProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190030,
							"name": "authorizationConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Optional authorization configuration",
								"tags": [
									{
										"tag": "default",
										"text": "- API Key authorization\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 253,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AuthorizationConfig",
								"package": "@aws-cdk/aws-appsync-alpha",
								"name": "AuthorizationConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.authorizationConfig"
							}
						},
						{
							"id": 190031,
							"name": "logConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Logging configuration for this api",
								"tags": [
									{
										"tag": "default",
										"text": "- None\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 259,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogConfig",
								"package": "@aws-cdk/aws-appsync-alpha",
								"name": "LogConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logConfig"
							}
						},
						{
							"id": 190028,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 284,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190029,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 285,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"qualifiedName": "Schema",
										"package": "@aws-cdk/aws-appsync-alpha",
										"name": "Schema"
									}
								]
							}
						},
						{
							"id": 190032,
							"name": "xrayEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A flag indicating whether or not X-Ray tracing is enabled for the GraphQL API.",
								"tags": [
									{
										"tag": "default",
										"text": "- false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 274,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.xrayEnabled"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190030,
								190031,
								190028,
								190029,
								190032
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 282,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "GraphqlApiProps",
									"package": "@aws-cdk/aws-appsync-alpha",
									"name": "appsync.GraphqlApiProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "schema"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 189986,
					"name": "AppSyncApiDynamoDbDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    table: {\n      type: \"table\",\n      table: MyTable\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189989,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 161,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189990,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189991,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 162,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189992,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 189993,
															"name": "table",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 163,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "Table",
																"package": "aws-cdk-lib",
																"name": "Table"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																189993
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189991
											]
										}
									]
								}
							}
						},
						{
							"id": 189995,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 189994,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 189988,
							"name": "table",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target table"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 160,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188997,
								"name": "Table"
							}
						},
						{
							"id": 189987,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is a dynamodb table"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "dynamodb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189989,
								189995,
								189994,
								189988,
								189987
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 151,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 190009,
					"name": "AppSyncApiHttpDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define an http data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    http: {\n      type: \"http\",\n      endpoint: \"https://example.com\"\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 190012,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 231,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190013,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190014,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190015,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 190016,
															"name": "authorizationConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 233,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "AwsIamConfig",
																"package": "@aws-cdk/aws-appsync-alpha",
																"name": "AwsIamConfig"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																190016
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190014
											]
										}
									]
								}
							}
						},
						{
							"id": 190018,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 190011,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "URL to forward requests to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190017,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 190010,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is an HTTP endpoint"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "http"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190012,
								190018,
								190011,
								190017,
								190010
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 221,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 189981,
					"name": "AppSyncApiLambdaDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    lambda: {\n      type: \"function\",\n      function: \"src/function.handler\"\n    },\n  },\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 189985,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 189983,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Function definition"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 189984,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 189982,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String literal to signify that this data source is a function"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 129,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189985,
								189983,
								189984,
								189982
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 124,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 189972,
					"name": "AppSyncApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189973,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189974,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189975,
											"name": "graphqlApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IGraphqlApi",
														"package": "@aws-cdk/aws-appsync-alpha",
														"name": "IGraphqlApi"
													},
													{
														"type": "reference",
														"id": 190027,
														"name": "AppSyncApiCdkGraphqlProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189975
											]
										}
									]
								}
							}
						},
						{
							"id": 189976,
							"name": "dataSources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define datasources. Can be a function, dynamodb table, rds cluster or http endpoint",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew AppSyncApi(this, \"GraphqlApi\", {\n  dataSources: {\n    notes: \"src/notes.main\",\n  },\n  resolvers: {\n    \"Query    listNotes\": \"notes\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 189347,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 189981,
												"name": "AppSyncApiLambdaDataSourceProps"
											},
											{
												"type": "reference",
												"id": 189986,
												"name": "AppSyncApiDynamoDbDataSourceProps"
											},
											{
												"type": "reference",
												"id": 189996,
												"name": "AppSyncApiRdsDataSourceProps"
											},
											{
												"type": "reference",
												"id": 190009,
												"name": "AppSyncApiHttpDataSourceProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 189978,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189979,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189980,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the AppSyncApi. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew AppSync(props.stack, \"AppSync\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 93,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189980
											]
										}
									]
								}
							}
						},
						{
							"id": 189977,
							"name": "resolvers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The resolvers for this API. Takes an object, with the key being the type name and field name as a string and the value is either a string with the name of existing data source.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew AppSyncApi(this, \"GraphqlApi\", {\n  resolvers: {\n    \"Query    listNotes\": \"src/list.main\",\n    \"Query    getNoteById\": \"src/get.main\",\n    \"Mutation createNote\": \"src/create.main\",\n    \"Mutation updateNote\": \"src/update.main\",\n    \"Mutation deleteNote\": \"src/delete.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 189347,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 190019,
												"name": "AppSyncApiResolverProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189973,
								189976,
								189978,
								189977
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 189996,
					"name": "AppSyncApiRdsDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    rds: {\n      type: \"rds\",\n      table: MyRDSCluster\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 190000,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190001,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190002,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 198,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190003,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 190006,
															"name": "databaseName",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 201,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 190005,
															"name": "secretStore",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 200,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ISecret",
																"package": "aws-cdk-lib",
																"name": "ISecret"
															}
														},
														{
															"id": 190004,
															"name": "serverlessCluster",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "IServerlessCluster",
																"package": "aws-cdk-lib",
																"name": "IServerlessCluster"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																190006,
																190005,
																190004
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190002
											]
										}
									]
								}
							}
						},
						{
							"id": 189999,
							"name": "databaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the database to connect to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 196,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190008,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 190007,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 189998,
							"name": "rds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target RDS construct"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 192,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188747,
								"name": "RDS"
							}
						},
						{
							"id": 189997,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is an RDS database"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "rds"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190000,
								189999,
								190008,
								190007,
								189998,
								189997
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 183,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 190019,
					"name": "AppSyncApiResolverProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define full resolver config"
					},
					"children": [
						{
							"id": 190024,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190025,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190026,
											"name": "resolver",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 261,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ResolverProps",
														"package": "@aws-cdk/aws-appsync-alpha",
														"name": "ResolverProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "api"
															},
															{
																"type": "literal",
																"value": "fieldName"
															},
															{
																"type": "literal",
																"value": "typeName"
															},
															{
																"type": "literal",
																"value": "dataSource"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190026
											]
										}
									]
								}
							}
						},
						{
							"id": 190020,
							"name": "dataSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 245,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190021,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function to invoke for the resolver"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 190022,
							"name": "requestMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "VTL request mapping template\nDOCTODO: can probably use examples"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "MappingTemplate"
							}
						},
						{
							"id": 190023,
							"name": "responseMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "VTL response mapping template\nDOCTODO: can probably use examples"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "MappingTemplate"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190024,
								190020,
								190021,
								190022,
								190023
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 241,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						190033
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						190027,
						189986,
						190009,
						189981,
						189972,
						189996,
						190019
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/AppSyncApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 188824,
			"name": "Auth",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188887,
					"name": "Auth",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Auth` construct is a higher level CDK construct that makes it easy to configure a [Cognito User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [Cognito Identity Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html). Also, allows setting up Auth0, Facebook, Google, Twitter, Apple, and Amazon as authentication providers."
					},
					"children": [
						{
							"id": 188891,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 121,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188892,
									"name": "new Auth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 188893,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188894,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188895,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188825,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 188887,
										"name": "Auth"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 188896,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 110,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188897,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188901,
											"name": "authRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 114,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 188900,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										},
										{
											"id": 188902,
											"name": "unauthRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 115,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 188898,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPool",
												"package": "aws-cdk-lib",
												"name": "IUserPool"
											}
										},
										{
											"id": 188899,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPoolClient",
												"package": "aws-cdk-lib",
												"name": "IUserPoolClient"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188901,
												188900,
												188902,
												188898,
												188899
											]
										}
									]
								}
							}
						},
						{
							"id": 188904,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 118,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188905,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 188906,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 188907,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 189419,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 188960,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 188908,
							"name": "permissionsAttachedForAllTriggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 188903,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 188825,
								"name": "AuthProps"
							}
						},
						{
							"id": 188909,
							"name": "cognitoIdentityPoolId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 317,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188910,
									"name": "cognitoIdentityPoolId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188948,
							"name": "addTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 411,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188949,
									"name": "addTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188950,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188951,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 188848,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 188952,
											"name": "triggerValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189348,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 188953,
											"name": "functionProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 188945,
							"name": "addTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188946,
									"name": "addTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188947,
											"name": "cognitoProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188838,
												"name": "AuthCognitoProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188911,
							"name": "attachPermissionsForAuthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 321,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188912,
									"name": "attachPermissionsForAuthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188913,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188920,
							"name": "attachPermissionsForTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 336,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188921,
									"name": "attachPermissionsForTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188922,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 188848,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 188923,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188917,
							"name": "attachPermissionsForTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 329,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188918,
									"name": "attachPermissionsForTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188919,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188914,
							"name": "attachPermissionsForUnauthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 325,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188915,
									"name": "attachPermissionsForUnauthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188916,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188942,
							"name": "checkDeprecatedProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 368,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188943,
									"name": "checkDeprecatedProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188944,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188825,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188954,
							"name": "createAuthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188955,
									"name": "createAuthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188956,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 188957,
							"name": "createUnauthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188958,
									"name": "createUnauthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188959,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 188927,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 354,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188928,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 188929,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 188931,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 188932,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 188933,
																	"name": "identityPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188935,
																	"name": "triggers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 188936,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 188938,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 188939,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 188940,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 188941,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													188940,
																													188941
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 188937,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							188938,
																							188937
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188934,
																	"name": "userPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		188933,
																		188935,
																		188934
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 188930,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Auth"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														188931,
														188930
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 188924,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188925,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188926,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 188848,
													"name": "AuthUserPoolTriggers"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 188961,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 188962,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 188888,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188889,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188890,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								188891
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188896,
								188904,
								188960,
								188908,
								188903
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								188909
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188948,
								188945,
								188911,
								188920,
								188917,
								188914,
								188942,
								188954,
								188957,
								188927,
								188924,
								188961,
								188888
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 109,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 188864,
					"name": "AuthAmazonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188865,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188865
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 76,
							"character": 17
						}
					]
				},
				{
					"id": 188866,
					"name": "AuthAppleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188867,
							"name": "servicesId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188867
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 80,
							"character": 17
						}
					]
				},
				{
					"id": 188861,
					"name": "AuthAuth0Props",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188863,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188862,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188863,
								188862
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 71,
							"character": 17
						}
					]
				},
				{
					"id": 188875,
					"name": "AuthCdkCfnIdentityPoolProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188877,
							"name": "allowClassicFlow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enables the Basic (Classic) authentication flow.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowClassicFlow"
							}
						},
						{
							"id": 188876,
							"name": "allowUnauthenticatedIdentities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 188878,
							"name": "cognitoEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The events to configure.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoEvents"
							}
						},
						{
							"id": 188879,
							"name": "cognitoIdentityProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Cognito user pools and their client IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"qualifiedName": "IResolvable",
													"package": "aws-cdk-lib",
													"name": "IResolvable"
												},
												{
													"type": "reference",
													"qualifiedName": "CfnIdentityPool.CognitoIdentityProviderProperty",
													"package": "aws-cdk-lib",
													"name": "CognitoIdentityProviderProperty"
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoIdentityProviders"
							}
						},
						{
							"id": 188880,
							"name": "cognitoStreams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Configuration options for configuring Amazon Cognito streams.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.CognitoStreamsProperty",
										"package": "aws-cdk-lib",
										"name": "CognitoStreamsProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoStreams"
							}
						},
						{
							"id": 188881,
							"name": "developerProviderName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The \"domain\" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 100\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.developerProviderName"
							}
						},
						{
							"id": 188882,
							"name": "identityPoolName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of your Amazon Cognito identity pool.",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.identityPoolName"
							}
						},
						{
							"id": 188883,
							"name": "openIdConnectProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the OpenID connect providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.openIdConnectProviderArns"
							}
						},
						{
							"id": 188884,
							"name": "pushSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The configuration options to be applied to the identity pool.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.PushSyncProperty",
										"package": "aws-cdk-lib",
										"name": "PushSyncProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.pushSync"
							}
						},
						{
							"id": 188885,
							"name": "samlProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.samlProviderArns"
							}
						},
						{
							"id": 188886,
							"name": "supportedLoginProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that map provider names to provider app IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 88,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.supportedLoginProviders"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188877,
								188876,
								188878,
								188879,
								188880,
								188881,
								188882,
								188883,
								188884,
								188885,
								188886
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 97,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "CfnIdentityPoolProps",
									"package": "aws-cdk-lib",
									"name": "cognito.CfnIdentityPoolProps"
								},
								{
									"type": "literal",
									"value": "allowUnauthenticatedIdentities"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 188838,
					"name": "AuthCognitoProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188839,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188840,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188841,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPool",
														"package": "aws-cdk-lib",
														"name": "IUserPool"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolProps",
														"package": "aws-cdk-lib",
														"name": "UserPoolProps"
													}
												]
											}
										},
										{
											"id": 188842,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 46,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPoolClient",
														"package": "aws-cdk-lib",
														"name": "IUserPoolClient"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolClientOptions",
														"package": "aws-cdk-lib",
														"name": "UserPoolClientOptions"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188841,
												188842
											]
										}
									]
								}
							}
						},
						{
							"id": 188843,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188844,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188845,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 49,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188845
											]
										}
									]
								}
							}
						},
						{
							"id": 188847,
							"name": "signInAliases",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SignInAliases",
								"package": "aws-cdk-lib",
								"name": "SignInAliases"
							}
						},
						{
							"id": 188846,
							"name": "triggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188848,
								"name": "AuthUserPoolTriggers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188839,
								188843,
								188847,
								188846
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 188868,
					"name": "AuthFacebookProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188869,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188869
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 84,
							"character": 17
						}
					]
				},
				{
					"id": 188870,
					"name": "AuthGoogleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188871,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188871
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 88,
							"character": 17
						}
					]
				},
				{
					"id": 188825,
					"name": "AuthProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188828,
							"name": "amazon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188864,
								"name": "AuthAmazonProps"
							}
						},
						{
							"id": 188829,
							"name": "apple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188866,
								"name": "AuthAppleProps"
							}
						},
						{
							"id": 188827,
							"name": "auth0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188861,
								"name": "AuthAuth0Props"
							}
						},
						{
							"id": 188833,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188834,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188835,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 36,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 188875,
												"name": "AuthCdkCfnIdentityPoolProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188835
											]
										}
									]
								}
							}
						},
						{
							"id": 188826,
							"name": "cognito",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 188838,
										"name": "AuthCognitoProps"
									}
								]
							}
						},
						{
							"id": 188836,
							"name": "cognitoUserPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPool",
								"package": "aws-cdk-lib",
								"name": "IUserPool"
							}
						},
						{
							"id": 188837,
							"name": "cognitoUserPoolClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPoolClient",
								"package": "aws-cdk-lib",
								"name": "IUserPoolClient"
							}
						},
						{
							"id": 188830,
							"name": "facebook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188868,
								"name": "AuthFacebookProps"
							}
						},
						{
							"id": 188831,
							"name": "google",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188870,
								"name": "AuthGoogleProps"
							}
						},
						{
							"id": 188832,
							"name": "twitter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188872,
								"name": "AuthTwitterProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188828,
								188829,
								188827,
								188833,
								188826,
								188836,
								188837,
								188830,
								188831,
								188832
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 188872,
					"name": "AuthTwitterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188873,
							"name": "consumerKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188874,
							"name": "consumerSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 94,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188873,
								188874
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 92,
							"character": 17
						}
					]
				},
				{
					"id": 188848,
					"name": "AuthUserPoolTriggers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188849,
							"name": "createAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188850,
							"name": "customEmailSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188851,
							"name": "customMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188852,
							"name": "customSmsSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188853,
							"name": "defineAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188854,
							"name": "postAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188855,
							"name": "postConfirmation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188856,
							"name": "preAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188857,
							"name": "preSignUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188858,
							"name": "preTokenGeneration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188859,
							"name": "userMigration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 188860,
							"name": "verifyAuthChallengeResponse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188849,
								188850,
								188851,
								188852,
								188853,
								188854,
								188855,
								188856,
								188857,
								188858,
								188859,
								188860
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 56,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188887
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						188864,
						188866,
						188861,
						188875,
						188838,
						188868,
						188870,
						188825,
						188872,
						188848
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Auth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189257,
			"name": "Bucket",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189281,
					"name": "Bucket",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Bucket` construct is a higher level CDK construct that makes it easy to create an S3 Bucket and to define its notifications. It also internally connects the notifications and bucket together.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Bucket } from \"@serverless-stack/resources\";\n\nnew Bucket(this, \"Bucket\");\n```\n\n### Removing the S3 Bucket\n\nOnly empty S3 buckets can be deleted. However, you can configure the bucket to automatically delete all objects upon removal.\n\n```js\nimport * as cdk from \"aws-cdk-lib\";\n\nnew Bucket(this, \"Bucket\", {\n  s3Bucket: {\n    autoDeleteObjects: true,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189285,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 198,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189286,
									"name": "new Bucket",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189287,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189288,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189289,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189258,
												"name": "BucketProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189281,
										"name": "Bucket"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189290,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 188,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189291,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189292,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189292
											]
										}
									]
								}
							}
						},
						{
							"id": 189342,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189293,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 194,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 189419,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 189218,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 189105,
											"name": "Topic"
										}
									]
								}
							}
						},
						{
							"id": 189294,
							"name": "permissionsAttachedForAllNotifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 195,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 189295,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 196,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 189258,
								"name": "BucketProps"
							}
						},
						{
							"id": 189296,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189297,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189298,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189299,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189300,
							"name": "notificationFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 227,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189301,
									"name": "notificationFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created functions for the notifications."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 189419,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 189338,
							"name": "addFunctionNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 423,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189339,
									"name": "addFunctionNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189340,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189341,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189269,
														"name": "BucketFunctionNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189326,
							"name": "addNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 323,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189327,
									"name": "addNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189328,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189329,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 189105,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 189269,
														"name": "BucketFunctionNotificationProps"
													},
													{
														"type": "reference",
														"id": 189273,
														"name": "BucketQueueNotificationProps"
													},
													{
														"type": "reference",
														"id": 189277,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189302,
							"name": "addNotifications",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189303,
									"name": "addNotifications",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add notification subscriptions after the bucket has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst bucket = new Bucket(this, \"Bucket\");\nbucket.addNotifications(this, [\"src/notification.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189304,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189305,
											"name": "notifications",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 189347,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 189218,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 189105,
															"name": "Topic"
														},
														{
															"type": "reference",
															"id": 189269,
															"name": "BucketFunctionNotificationProps"
														},
														{
															"type": "reference",
															"id": 189273,
															"name": "BucketQueueNotificationProps"
														},
														{
															"type": "reference",
															"id": 189277,
															"name": "BucketTopicNotificationProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189330,
							"name": "addQueueNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 353,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189331,
									"name": "addQueueNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189332,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189333,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 189273,
														"name": "BucketQueueNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189334,
							"name": "addTopicNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189335,
									"name": "addTopicNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189336,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189337,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189105,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 189277,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189306,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189307,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to all bucket notifications",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189308,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189309,
							"name": "attachPermissionsToNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 288,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189310,
									"name": "attachPermissionsToNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to a specific bucket notification",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189311,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 189312,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189324,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 311,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189325,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189313,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 301,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189314,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189315,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189317,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189318,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189319,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189320,
																	"name": "notifications",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 189321,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {},
																						"children": [
																							{
																								"id": 189322,
																								"name": "node",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "fn.node.addr"
																							},
																							{
																								"id": 189323,
																								"name": "stack",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "..."
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"kind": 1024,
																								"children": [
																									189322,
																									189323
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189319,
																		189320
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189316,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Bucket"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189317,
														189316
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189343,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189344,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189282,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189283,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189284,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189285
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189290,
								189342,
								189293,
								189294,
								189295
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189296,
								189298,
								189300
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189338,
								189326,
								189302,
								189330,
								189334,
								189306,
								189309,
								189324,
								189313,
								189343,
								189282
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 187,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189266,
					"name": "BucketFilter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189267,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key starts with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189268,
							"name": "suffix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key ends with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189267,
								189268
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 85,
							"character": 17
						}
					]
				},
				{
					"id": 189269,
					"name": "BucketFunctionNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [{\n    function: \"src/notification.main\",\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189271,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 189272,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189266,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 189270,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189271,
								189272,
								189270
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 108,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 189258,
					"name": "BucketProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189263,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189264,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189265,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Allows you to override default settings this construct uses internally to ceate the bucket",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  cdk: {\n    bucket: {\n      bucketName: \"my-bucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Bucket",
														"package": "aws-cdk-lib",
														"name": "Bucket"
													},
													{
														"type": "reference",
														"qualifiedName": "BucketProps",
														"package": "aws-cdk-lib",
														"name": "BucketProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189265
											]
										}
									]
								}
							}
						},
						{
							"id": 189259,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189260,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189261,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189261
											]
										}
									]
								}
							}
						},
						{
							"id": 189262,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create notifications for various bucket events",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [\"src/notification.main\"],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 189347,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 189218,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 189105,
											"name": "Topic"
										},
										{
											"type": "reference",
											"id": 189269,
											"name": "BucketFunctionNotificationProps"
										},
										{
											"type": "reference",
											"id": 189273,
											"name": "BucketQueueNotificationProps"
										},
										{
											"type": "reference",
											"id": 189277,
											"name": "BucketTopicNotificationProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189263,
								189259,
								189262
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 189273,
					"name": "BucketQueueNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Queue(props.stack, \"Queue\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189275,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 189276,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189266,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 189274,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189218,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189275,
								189276,
								189274
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 128,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 189277,
					"name": "BucketTopicNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a topic listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Topic(props.stack, \"Topic\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189279,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 189280,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189266,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 189278,
							"name": "topic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The topic to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189105,
								"name": "Topic"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189279,
								189280,
								189278
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 148,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189281
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189266,
						189269,
						189258,
						189273,
						189277
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Bucket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 188671,
			"name": "Cron",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188684,
					"name": "Cron",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Cron` construct is a higher level CDK construct that makes it easy to create a cron job. You can create a cron job by handler function and specifying the schedule it needs to run on. Internally this construct uses a [EventBridge Rule](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_events.Rule.html)."
					},
					"children": [
						{
							"id": 188688,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 135,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188689,
									"name": "new Cron",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 188690,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188691,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188692,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188672,
												"name": "CronProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 188684,
										"name": "Cron"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 188693,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 123,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188694,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188695,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK EventBridge Rule instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 127,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188695
											]
										}
									]
								}
							}
						},
						{
							"id": 188696,
							"name": "jobFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created Function instance that'll be run on schedule."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 188717,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 188697,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 188672,
								"name": "CronProps"
							}
						},
						{
							"id": 188698,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 151,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188699,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of [permissions](../util/Permissions.md) to the `jobFunction`. This allows the function to access other AWS resources.",
										"text": "Internally calls [`Function.attachPermissions`](Function.md#attachpermissions).\n\n"
									},
									"parameters": [
										{
											"id": 188700,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188713,
							"name": "createEventsRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 167,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188714,
									"name": "createEventsRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188715,
							"name": "createRuleTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 197,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188716,
									"name": "createRuleTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 188701,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 155,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188702,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 188703,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 188705,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 188706,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 188709,
																	"name": "job",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 188710,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 188711,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 188712,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								188711,
																								188712
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188708,
																	"name": "ruleName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188707,
																	"name": "schedule",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "cfnRule.scheduleExpression"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		188709,
																		188708,
																		188707
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 188704,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Cron"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														188705,
														188704
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 188718,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 188719,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 188685,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188686,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188687,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								188688
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188693,
								188696,
								188717,
								188697
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188698,
								188713,
								188715,
								188701,
								188718,
								188685
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 122,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 188679,
					"name": "CronJobProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188681,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188682,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188683,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188683
											]
										}
									]
								}
							}
						},
						{
							"id": 188680,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function that will be executed when the job runs.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\n  new Cron(this, \"Cron\", {\n    job: {\n      function: \"src/lambda.main\",\n    },\n  });\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188681,
								188680
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 93,
							"character": 17
						}
					]
				},
				{
					"id": 188672,
					"name": "CronProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188673,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188674,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188676,
											"name": "cronOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created cron expression."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 23,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CronOptions",
												"package": "aws-cdk-lib",
												"name": "CronOptions"
											}
										},
										{
											"id": 188675,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RuleProps",
												"package": "aws-cdk-lib",
												"name": "RuleProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188676,
												188675
											]
										}
									]
								}
							}
						},
						{
							"id": 188677,
							"name": "job",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The definition of the function to be executed",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Cron(this, \"Cron\", {\n  function : \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 189347,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 188679,
										"name": "CronJobProps"
									}
								]
							}
						},
						{
							"id": 188678,
							"name": "schedule",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The schedule for the cron job. The string format takes a [rate expression](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents-expressions.html).",
								"text": "```\n\"rate(_Value Unit_)\"\n\n// For example, every 5 minutes\n\"rate(5 minutes)\"\n```\n\n```\n\"cron(Minutes Hours Day-of-month Month Day-of-week Year)\"\n\n// For example, 10:15 AM (UTC) every day\n\"cron(15 10 * * ? *)\"\n```\n\n```txt\n// Repeat every 5 minutes\n\n\"5 minutes\"\n\n// The equivalent rate expression\n\"rate(5 minutes)\"\n```\n\n```txt\n// 10:15 AM (UTC) every day\n\n// As cdk.aws-events.CronOptions\n{ minute: \"15\", hour: \"10\" }\n\n// The equivalent cron expression\n\"cron(15 10 * * ? *)\"\n```\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Cron } from \"@serverless-stack/resources\";\n\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"rate(1 minute)\",\n});\n```\n\n```js\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"cron(15 10 * * ? *)\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "rate(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "cron(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188673,
								188677,
								188678
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188684
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						188679,
						188672
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Cron.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189609,
			"name": "EventBus",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189641,
					"name": "EventBus",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `EventBus` construct is a higher level CDK construct that makes it easy to create an [EventBridge Event Bus](https://aws.amazon.com/eventbridge/). You can create a bus that has a list of rules and targets. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of targets; Function targets (with a Lambda function) or Queue targets (with an SQS queue). See the [examples](#examples) for more details.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Using the minimal config\n\n```js\nimport { EventBus } from \"@serverless-stack/resources\";\n\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n```\n\nNote that, `rule1` here is simply a key to identify the rule.\n"
							}
						]
					},
					"children": [
						{
							"id": 189645,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 248,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189646,
									"name": "new EventBus",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189647,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189648,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189649,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189610,
												"name": "EventBusProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189641,
										"name": "EventBus"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189650,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 238,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189651,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189652,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `EventBus` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IEventBus",
												"package": "aws-cdk-lib",
												"name": "IEventBus"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189652
											]
										}
									]
								}
							}
						},
						{
							"id": 189714,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189657,
							"name": "permissionsAttachedForAllTargets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 245,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 189658,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 246,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 189610,
								"name": "EventBusProps"
							}
						},
						{
							"id": 189653,
							"name": "targetsData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 244,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189654,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 189655,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 189656,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189419,
														"name": "Fn"
													},
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													}
												]
											}
										}
									}
								}
							}
						},
						{
							"id": 189659,
							"name": "eventBusArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 263,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189660,
									"name": "eventBusArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189661,
							"name": "eventBusName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 270,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189662,
									"name": "eventBusName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189708,
							"name": "addFunctionTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 466,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189709,
									"name": "addFunctionTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189710,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189711,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189712,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 189713,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189631,
														"name": "EventBusFunctionTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189702,
							"name": "addQueueTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 440,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189703,
									"name": "addQueueTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189704,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189705,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189706,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 189707,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 189636,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189691,
							"name": "addRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 385,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189692,
									"name": "addRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189693,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189694,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189695,
											"name": "rule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189618,
												"name": "EventBusRuleProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189663,
							"name": "addRules",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 287,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189664,
									"name": "addRules",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add rules after the EventBus has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nbus.addRules(this, {\n  rule2: {\n    eventPattern: { source: [\"myevent\"] },\n    targets: [\"src/target3.main\", \"src/target4.main\"],\n  },\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189665,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189666,
											"name": "rules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 189618,
														"name": "EventBusRuleProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189696,
							"name": "addTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 421,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189697,
									"name": "addTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189698,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189699,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189700,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 189701,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 189631,
														"name": "EventBusFunctionTargetProps"
													},
													{
														"type": "reference",
														"id": 189636,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189667,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 304,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189668,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to all event targets in this EventBus.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {10}\nbus.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189669,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189670,
							"name": "attachPermissionsToTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189671,
									"name": "attachPermissionsToTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to a specific event bus rule target",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {10}\nconst bus = new EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n\nbus.attachPermissionsToTarget(\"rule1\", 0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189672,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189673,
											"name": "targetIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 189674,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189689,
							"name": "createEventBus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 365,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189690,
									"name": "createEventBus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189675,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 352,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189676,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189677,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189679,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189680,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189681,
																	"name": "eventBusName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189682,
																	"name": "rules",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 189683,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 189684,
																						"name": "key",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					},
																					{
																						"id": 189685,
																						"name": "targets",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "reflection",
																										"declaration": {
																											"id": 189686,
																											"name": "__type",
																											"kind": 65536,
																											"kindString": "Type literal",
																											"flags": {},
																											"children": [
																												{
																													"id": 189687,
																													"name": "node",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "fn.node.addr"
																												},
																												{
																													"id": 189688,
																													"name": "stack",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "..."
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"kind": 1024,
																													"children": [
																														189687,
																														189688
																													]
																												}
																											]
																										}
																									}
																								]
																							}
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							189684,
																							189685
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189681,
																		189682
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189678,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "EventBus"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189679,
														189678
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189715,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189716,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189642,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189643,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189644,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189645
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189650,
								189714,
								189657,
								189658,
								189653
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189659,
								189661
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189708,
								189702,
								189691,
								189663,
								189696,
								189667,
								189670,
								189689,
								189675,
								189715,
								189642
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 237,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189631,
					"name": "EventBusFunctionTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus function target"
					},
					"children": [
						{
							"id": 189633,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 181,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189634,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189635,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 182,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189635
											]
										}
									]
								}
							}
						},
						{
							"id": 189632,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to trigger",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        { function: \"src/function.handler\" },\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 180,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189633,
								189632
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 163,
							"character": 17
						}
					]
				},
				{
					"id": 189610,
					"name": "EventBusProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189615,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189616,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189617,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created EventBus",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  cdk: {\n    eventBus: {\n      eventBusName: \"MyEventBus\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IEventBus",
														"package": "aws-cdk-lib",
														"name": "IEventBus"
													},
													{
														"type": "reference",
														"qualifiedName": "EventBusProps",
														"package": "aws-cdk-lib",
														"name": "EventBusProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189617
											]
										}
									]
								}
							}
						},
						{
							"id": 189611,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189612,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189613,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the EventBus. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189613
											]
										}
									]
								}
							}
						},
						{
							"id": 189614,
							"name": "rules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The rules for the eventbus",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {5}\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\"],\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 189618,
										"name": "EventBusRuleProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189615,
								189611,
								189614
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 189636,
					"name": "EventBusQueueTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189638,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189639,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189640,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 205,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsQueueProps",
												"package": "aws-cdk-lib",
												"name": "SqsQueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189640
											]
										}
									]
								}
							}
						},
						{
							"id": 189637,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to trigger",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        { queue: new sst.Queue(props.stack, \"Queue\") },\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189218,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189638,
								189637
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 186,
							"character": 17
						}
					]
				},
				{
					"id": 189618,
					"name": "EventBusRuleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus rule"
					},
					"children": [
						{
							"id": 189628,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 145,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189629,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189630,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Rule` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js {4}\nnew EventBus(this, \"Bus\", {\n  DOCTODO\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 156,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "RuleProps",
														"package": "aws-cdk-lib",
														"name": "RuleProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "eventBus"
															},
															{
																"type": "literal",
																"value": "targets"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189630
											]
										}
									]
								}
							}
						},
						{
							"id": 189619,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189620,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189622,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Fields to match on the detail field",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detail: { FOO: 1 }  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 105,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189623,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 189624,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 189625,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 189626,
											"name": "detailType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of detailTypes to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detailTypes: [\"foo\"]  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 120,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 189621,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of sources to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189622,
												189626,
												189621
											]
										}
									]
								}
							}
						},
						{
							"id": 189627,
							"name": "targets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure targets for this rule. Can be a function or queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        \"src/function.handler\",\n        new Queue(props.stack, \"MyQueue\"),\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 139,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 189347,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 189218,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 189631,
											"name": "EventBusFunctionTargetProps"
										},
										{
											"type": "reference",
											"id": 189636,
											"name": "EventBusQueueTargetProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189628,
								189619,
								189627
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 74,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189641
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189631,
						189610,
						189636,
						189618
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/EventBus.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189345,
			"name": "Function",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189419,
					"name": "Function",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A construct for a Lambda Function that allows you to [develop your it locally](live-lambda-development.md). Supports JS, TypeScript, Python, Golang, and C#. It also applies a couple of defaults:",
						"text": "- Sets the default memory setting to 1024MB.\n- Sets the default Lambda function timeout to 10 seconds.\n- [Enables AWS X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-tracing.html) by default so you can trace your serverless applications.\n- `AWS_NODEJS_CONNECTION_REUSE_ENABLED` is turned on. Meaning that the Lambda function will automatically reuse TCP connections when working with the AWS SDK. [Read more about this here](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/node-reusing-connections.html).\n- Sets the `IS_LOCAL` environment variable for the Lambda function when it is invoked locally through the `sst start` command.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Creating a Function\n\n```js\nimport { Function } from \"@serverless-stack/resources\";\n\nnew Function(this, \"MySnsLambda\", {\n  handler: \"src/sns/index.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189497,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 444,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189498,
									"name": "new Function",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189499,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189500,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189501,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									},
									"overwrites": {
										"type": "reference",
										"name": "lambda.Function.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "lambda.Function.constructor"
							}
						},
						{
							"id": 189541,
							"name": "_connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Actual connections object for this Lambda",
								"text": "May be unset, in which case this Lambda is not configured use in a VPC.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 215,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Connections",
								"package": "aws-cdk-lib",
								"name": "Connections"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._connections"
							}
						},
						{
							"id": 189542,
							"name": "_invocationGrants",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Mapping of invocation principals to grants. Used to de-dupe `grantInvoke()` calls.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 221,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._invocationGrants"
							}
						},
						{
							"id": 189502,
							"name": "_isLiveDevEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 441,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189540,
							"name": "_skipPermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether the user decides to skip adding permissions.\nThe only use case is for cross-account, imported lambdas\nwhere the user commits to modifying the permisssions\non the imported lambda outside CDK.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 208,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._skipPermissions"
							}
						},
						{
							"id": 189524,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 434,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.architecture"
							}
						},
						{
							"id": 189527,
							"name": "canCreatePermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 440,
									"character": 23
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.canCreatePermissions"
							}
						},
						{
							"id": 189522,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 426,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterQueue"
							}
						},
						{
							"id": 189523,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 430,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterTopic"
							}
						},
						{
							"id": 189590,
							"name": "env",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 108,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ResourceEnvironment",
								"package": "aws-cdk-lib",
								"name": "ResourceEnvironment"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.env"
							}
						},
						{
							"id": 189518,
							"name": "functionArn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "ARN of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 410,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionArn"
							}
						},
						{
							"id": 189517,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 406,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionName"
							}
						},
						{
							"id": 189521,
							"name": "grantPrincipal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The principal this Lambda Function is running as"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 422,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IPrincipal",
								"package": "aws-cdk-lib",
								"name": "IPrincipal"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantPrincipal"
							}
						},
						{
							"id": 189503,
							"name": "localId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 442,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189606,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.node"
							}
						},
						{
							"id": 189526,
							"name": "permissionsNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 439,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.permissionsNode"
							}
						},
						{
							"id": 189591,
							"name": "physicalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns a string-encoded token that resolves to the physical name that\nshould be passed to the CloudFormation resource.",
								"text": "This value will resolve to one of the following:\n- a concrete value (e.g. `\"my-awesome-bucket\"`)\n- `undefined`, when a name should be generated by CloudFormation\n- a concrete name generated automatically during synthesis, in\n  cross-environment scenarios.\n\n"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 120,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.physicalName"
							}
						},
						{
							"id": 189519,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Execution role associated with this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 414,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.role"
							}
						},
						{
							"id": 189520,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The runtime configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 418,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Runtime",
								"package": "aws-cdk-lib",
								"name": "Runtime"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.runtime"
							}
						},
						{
							"id": 189589,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 107,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Stack",
								"package": "aws-cdk-lib",
								"name": "Stack"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.stack"
							}
						},
						{
							"id": 189525,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The timeout configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 438,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.timeout"
							}
						},
						{
							"id": 189446,
							"name": "_VER_PROPS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 335,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189447,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 189448,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 189449,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._VER_PROPS"
							}
						},
						{
							"id": 189550,
							"name": "connections",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 237,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 189551,
									"name": "connections",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Access the Connections object",
										"text": "Will fail if not a VPC-enabled Lambda Function\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Connections",
										"package": "aws-cdk-lib",
										"name": "Connections"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.connections"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.connections"
							}
						},
						{
							"id": 189515,
							"name": "currentVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 333,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 189516,
									"name": "currentVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a `lambda.Version` which represents the current version of this\nLambda function. A new version will be created every time the function's\nconfiguration changes.",
										"text": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Version",
										"package": "aws-cdk-lib",
										"name": "Version"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.currentVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.currentVersion"
							}
						},
						{
							"id": 189554,
							"name": "isBoundToVpc",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 244,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 189555,
									"name": "isBoundToVpc",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Whether or not this Lambda function was bound to a VPC",
										"text": "If this is is `false`, trying to access the `connections` object will fail.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isBoundToVpc"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isBoundToVpc"
							}
						},
						{
							"id": 189552,
							"name": "latestVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 238,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 189553,
									"name": "latestVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.latestVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.latestVersion"
							}
						},
						{
							"id": 189536,
							"name": "logGroup",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 477,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 189537,
									"name": "logGroup",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The LogGroup where the Lambda function's logs are made available.",
										"text": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ILogGroup",
										"package": "aws-cdk-lib",
										"name": "ILogGroup"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.logGroup"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.logGroup"
							}
						},
						{
							"id": 189538,
							"name": "_checkEdgeCompatibility",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 479,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189539,
									"name": "_checkEdgeCompatibility",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "internal",
												"text": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._checkEdgeCompatibility"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._checkEdgeCompatibility"
							}
						},
						{
							"id": 189592,
							"name": "_enableCrossEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189593,
									"name": "_enableCrossEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Called when this resource is referenced across environments\n(account/region) to order to request that a physical name will be generated\nfor this resource during synthesis, so the resource can be referenced\nthrough it's absolute name/arn.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._enableCrossEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._enableCrossEnvironment"
							}
						},
						{
							"id": 189569,
							"name": "_functionNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 257,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 189570,
									"name": "_functionNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns the construct tree node that corresponds to the lambda function.\nFor use internally for constructs, when the tree is set up in non-standard ways. Ex: SingletonFunction.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Node",
										"package": "constructs",
										"name": "Node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._functionNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._functionNode"
							}
						},
						{
							"id": 189571,
							"name": "_isStackAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 272,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 189572,
									"name": "_isStackAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Given the function arn, check if the account id matches this account",
										"text": "Function ARNs look like this:\n\n  arn:aws:lambda:region:account-id:function:function-name\n\n..which means that in order to extract the `account-id` component from the ARN, we can\nsplit the ARN using \":\" and select the component in index 4.\n",
										"returns": "true if account id of function matches the account specified on the stack, false otherwise.\n",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._isStackAccount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._isStackAccount"
							}
						},
						{
							"id": 189528,
							"name": "addEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 458,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189529,
									"name": "addEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds an environment variable to this Lambda function.\nIf this is a ref to a Lambda function, this operation results in a no-op."
									},
									"parameters": [
										{
											"id": 189530,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable key."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189531,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable's value."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189532,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Environment variable options.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EnvironmentOptions",
												"package": "aws-cdk-lib",
												"name": "EnvironmentOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEnvironment"
							}
						},
						{
							"id": 189563,
							"name": "addEventSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189564,
									"name": "addEventSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 189565,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IEventSource",
												"package": "aws-cdk-lib",
												"name": "IEventSource"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSource"
							}
						},
						{
							"id": 189556,
							"name": "addEventSourceMapping",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 245,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189557,
									"name": "addEventSourceMapping",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 189558,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189559,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventSourceMappingOptions",
												"package": "aws-cdk-lib",
												"name": "EventSourceMappingOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "EventSourceMapping",
										"package": "aws-cdk-lib",
										"name": "EventSourceMapping"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSourceMapping"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSourceMapping"
							}
						},
						{
							"id": 189533,
							"name": "addLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 466,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189534,
									"name": "addLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds one or more Lambda Layers to this Lambda function.",
										"tags": [
											{
												"tag": "throws",
												"text": "if there are already 5 layers on this function, or the layer is incompatible with this function's runtime.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189535,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "the layers to be added.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addLayers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addLayers"
							}
						},
						{
							"id": 189543,
							"name": "addPermission",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 227,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189544,
									"name": "addPermission",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a permission to the Lambda resource policy."
									},
									"parameters": [
										{
											"id": 189545,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The id for the permission construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189546,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The permission to grant to this Lambda function. @see Permission for details.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Permission",
												"package": "aws-cdk-lib",
												"name": "Permission"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addPermission"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addPermission"
							}
						},
						{
							"id": 189547,
							"name": "addToRolePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189548,
									"name": "addToRolePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a statement to the IAM role assumed by the instance."
									},
									"parameters": [
										{
											"id": 189549,
											"name": "statement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "PolicyStatement",
												"package": "aws-cdk-lib",
												"name": "PolicyStatement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addToRolePolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addToRolePolicy"
							}
						},
						{
							"id": 189594,
							"name": "applyRemovalPolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189595,
									"name": "applyRemovalPolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Apply the given removal policy to this resource",
										"text": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).\n"
									},
									"parameters": [
										{
											"id": 189596,
											"name": "policy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RemovalPolicy",
												"package": "aws-cdk-lib",
												"name": "RemovalPolicy"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.applyRemovalPolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.applyRemovalPolicy"
							}
						},
						{
							"id": 189504,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 687,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189505,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nfn.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189506,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189566,
							"name": "configureAsyncInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189567,
									"name": "configureAsyncInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 189568,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventInvokeConfigOptions",
												"package": "aws-cdk-lib",
												"name": "EventInvokeConfigOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.configureAsyncInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.configureAsyncInvoke"
							}
						},
						{
							"id": 189597,
							"name": "generatePhysicalName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 145,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 189598,
									"name": "generatePhysicalName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.generatePhysicalName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.generatePhysicalName"
							}
						},
						{
							"id": 189507,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 693,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189508,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189509,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189511,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189512,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189514,
																	"name": "arn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189513,
																	"name": "localId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189514,
																		189513
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189510,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Function"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189511,
														189510
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189602,
							"name": "getResourceArnAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 175,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 189603,
									"name": "getResourceArnAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
										"text": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.\n"
									},
									"parameters": [
										{
											"id": 189604,
											"name": "arnAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the ARN of the resource.\nCommonly it will be called \"Arn\" (e.g. `resource.attrArn`), but sometimes\nit's the CFN resource's `ref`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189605,
											"name": "arnComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The format of the ARN of this resource. You must\nreference `this.physicalName` somewhere within the ARN in order for\ncross-environment references to work.\n\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "ArnComponents",
												"package": "aws-cdk-lib",
												"name": "ArnComponents"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceArnAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceArnAttribute"
							}
						},
						{
							"id": 189599,
							"name": "getResourceNameAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 157,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 189600,
									"name": "getResourceNameAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"name\" attribute (e.g. `bucket.bucketName`).",
										"text": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.\n"
									},
									"parameters": [
										{
											"id": 189601,
											"name": "nameAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the resource's name.\nCommonly this is the resource's `ref`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceNameAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceNameAttribute"
							}
						},
						{
							"id": 189560,
							"name": "grantInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189561,
									"name": "grantInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Grant the given identity permissions to invoke this Lambda"
									},
									"parameters": [
										{
											"id": 189562,
											"name": "grantee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IGrantable",
												"package": "aws-cdk-lib",
												"name": "IGrantable"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.grantInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantInvoke"
							}
						},
						{
							"id": 189573,
							"name": "metric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 189574,
									"name": "metric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Function"
									},
									"parameters": [
										{
											"id": 189575,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189576,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metric"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metric"
							}
						},
						{
							"id": 189586,
							"name": "metricDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 189587,
									"name": "metricDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How long execution of this Lambda takes",
										"text": "Average over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 189588,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricDuration"
							}
						},
						{
							"id": 189583,
							"name": "metricErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 189584,
									"name": "metricErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How many invocations of this Lambda fail",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 189585,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricErrors"
							}
						},
						{
							"id": 189580,
							"name": "metricInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 189581,
									"name": "metricInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is invoked",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 189582,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricInvocations"
							}
						},
						{
							"id": 189577,
							"name": "metricThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 189578,
									"name": "metricThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is throttled",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 189579,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricThrottles"
							}
						},
						{
							"id": 189607,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189608,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.toString"
							}
						},
						{
							"id": 189450,
							"name": "classifyVersionProperty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 345,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189451,
									"name": "classifyVersionProperty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Record whether specific properties in the `AWS::Lambda::Function` resource should\nalso be associated to the Version resource.\nSee 'currentVersion' section in the module README for more details."
									},
									"parameters": [
										{
											"id": 189452,
											"name": "propertyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The property to classify"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189453,
											"name": "locked",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "whether the property should be associated to the version or not.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.classifyVersionProperty"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.classifyVersionProperty"
							}
						},
						{
							"id": 189423,
							"name": "copyFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 707,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189424,
									"name": "copyFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189425,
											"name": "bundle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 189399,
														"name": "FunctionBundleProp"
													}
												]
											}
										},
										{
											"id": 189426,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189427,
											"name": "buildPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189435,
							"name": "fromDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 784,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189436,
									"name": "fromDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189437,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189438,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189439,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189348,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 189440,
											"name": "inheritedProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										},
										{
											"id": 189441,
											"name": "inheritErrorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 189459,
							"name": "fromFunctionArn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 353,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189460,
									"name": "fromFunctionArn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its ARN"
									},
									"parameters": [
										{
											"id": 189461,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189462,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189463,
											"name": "functionArn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionArn"
							}
						},
						{
							"id": 189464,
							"name": "fromFunctionAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 362,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189465,
									"name": "fromFunctionAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Creates a Lambda function object which represents a function not defined\nwithin this stack."
									},
									"parameters": [
										{
											"id": 189466,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The parent construct"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189467,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The name of the lambda construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189468,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "the attributes of the function to import\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "FunctionAttributes",
												"package": "aws-cdk-lib",
												"name": "FunctionAttributes"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionAttributes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionAttributes"
							}
						},
						{
							"id": 189454,
							"name": "fromFunctionName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 349,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189455,
									"name": "fromFunctionName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its name"
									},
									"parameters": [
										{
											"id": 189456,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189457,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189458,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionName"
							}
						},
						{
							"id": 189428,
							"name": "handleImportedLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 732,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189429,
									"name": "handleImportedLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189430,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189431,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "ILayerVersion",
											"package": "aws-cdk-lib",
											"name": "ILayerVersion"
										}
									}
								}
							]
						},
						{
							"id": 189494,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189495,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189496,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isConstruct"
							}
						},
						{
							"id": 189432,
							"name": "isInlineDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 778,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189433,
									"name": "isInlineDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189434,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "definition",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 189347,
											"name": "FunctionInlineDefinition"
										}
									}
								}
							]
						},
						{
							"id": 189491,
							"name": "isResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 106,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189492,
									"name": "isResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Check whether the given construct is a Resource"
									},
									"parameters": [
										{
											"id": 189493,
											"name": "construct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "construct",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "CfnResource",
											"package": "aws-cdk-lib",
											"name": "CfnResource"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isResource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isResource"
							}
						},
						{
							"id": 189442,
							"name": "mergeProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 818,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189443,
									"name": "mergeProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189444,
											"name": "baseProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										},
										{
											"id": 189445,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189349,
										"name": "FunctionProps"
									}
								}
							]
						},
						{
							"id": 189469,
							"name": "metricAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189470,
									"name": "metricAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Lambda"
									},
									"parameters": [
										{
											"id": 189471,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189472,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAll"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAll"
							}
						},
						{
							"id": 189485,
							"name": "metricAllConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 396,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189486,
									"name": "metricAllConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189487,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllConcurrentExecutions"
							}
						},
						{
							"id": 189476,
							"name": "metricAllDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 378,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189477,
									"name": "metricAllDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the Duration executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "average over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189478,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllDuration"
							}
						},
						{
							"id": 189473,
							"name": "metricAllErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 372,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189474,
									"name": "metricAllErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of Errors executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189475,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllErrors"
							}
						},
						{
							"id": 189479,
							"name": "metricAllInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 384,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189480,
									"name": "metricAllInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189481,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllInvocations"
							}
						},
						{
							"id": 189482,
							"name": "metricAllThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 390,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189483,
									"name": "metricAllThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of throttled invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189484,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllThrottles"
							}
						},
						{
							"id": 189488,
							"name": "metricAllUnreservedConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 402,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189489,
									"name": "metricAllUnreservedConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of unreserved concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189490,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
							}
						},
						{
							"id": 189420,
							"name": "normalizeSrcPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 703,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189421,
									"name": "normalizeSrcPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189422,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189497
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189541,
								189542,
								189502,
								189540,
								189524,
								189527,
								189522,
								189523,
								189590,
								189518,
								189517,
								189521,
								189503,
								189606,
								189526,
								189591,
								189519,
								189520,
								189589,
								189525,
								189446
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189550,
								189515,
								189554,
								189552,
								189536
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189538,
								189592,
								189569,
								189571,
								189528,
								189563,
								189556,
								189533,
								189543,
								189547,
								189594,
								189504,
								189566,
								189597,
								189507,
								189602,
								189599,
								189560,
								189573,
								189586,
								189583,
								189580,
								189577,
								189607,
								189450,
								189423,
								189435,
								189459,
								189464,
								189454,
								189428,
								189494,
								189432,
								189491,
								189442,
								189469,
								189485,
								189476,
								189473,
								189479,
								189482,
								189488,
								189420
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 440,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "aws-cdk-lib",
							"name": "Function"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189416,
					"name": "FunctionBundleCopyFilesProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure additional files to copy into the function bundle",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189417,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Source path relative to sst.json"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 412,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189418,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Destination path relative to function root in bundle"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 416,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189417,
								189418
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 408,
							"character": 17
						}
					]
				},
				{
					"id": 189400,
					"name": "FunctionBundleNodejsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure NodeJS bundling options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n   format: \"esm\",\n   minify: false\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189404,
							"name": "commandHooks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Hooks to run at various stages of bundling"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 308,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICommandHooks",
								"package": "aws-cdk-lib",
								"name": "ICommandHooks"
							}
						},
						{
							"id": 189412,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189416,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 189405,
							"name": "esbuildConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override esbuild specific settings"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 312,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189406,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189407,
											"name": "define",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Replace global identifiers with constant expressions.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      define: DOCTODO\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 327,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 189408,
											"name": "keepNames",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When minifying preserve names of functions and variables",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      keepNames: true\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 189409,
											"name": "plugins",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Path to plugin file to load esbuild plugins",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      plugins: \"path/to/plugins.js\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189407,
												189408,
												189409
											]
										}
									]
								}
							}
						},
						{
							"id": 189402,
							"name": "externalModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will not be included in the bundle. Usually used to exclude dependencies that are provided in layers",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    external: [\"prisma\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 189411,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure bundle format",
								"tags": [
									{
										"tag": "default",
										"text": "\"cjs\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    format: \"esm\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 388,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cjs"
									},
									{
										"type": "literal",
										"value": "esm"
									}
								]
							}
						},
						{
							"id": 189401,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure additional esbuild loaders for other file extensions",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    loader: {\n     \".png\": \"file\"\n    }\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 278,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Loader",
										"package": "esbuild",
										"name": "Loader"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 189410,
							"name": "minify",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable minification",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    minify: false\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 373,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189403,
							"name": "nodeModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will be excluded from the bundle and installed into node_modules instead. Useful for dependencies that cannot be bundled, like those with binary dependencies.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    nodeModules: [\"pg\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 304,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189404,
								189412,
								189405,
								189402,
								189411,
								189401,
								189410,
								189403
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 263,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 189413,
					"name": "FunctionBundlePythonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189415,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189416,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 189414,
							"name": "installCommands",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 393,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189415,
								189414
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 392,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 189396,
					"name": "FunctionNameProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189398,
							"name": "functionProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function properties"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 219,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189349,
								"name": "FunctionProps"
							}
						},
						{
							"id": 189397,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The stack the function is being created in"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189398,
								189397
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 211,
							"character": 17
						}
					]
				},
				{
					"id": 189349,
					"name": "FunctionProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189374,
							"name": "allowAllOutbound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to allow the Lambda to send all network traffic",
								"text": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 147,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowAllOutbound"
							}
						},
						{
							"id": 189388,
							"name": "allowPublicSubnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda Functions in a public subnet can NOT access the internet.\nUse this property to acknowledge this limitation and still place the function in a public subnet.",
								"tags": [
									{
										"tag": "see",
										"text": "https://stackoverflow.com/questions/52992085/why-cant-an-aws-lambda-function-inside-a-public-subnet-in-a-vpc-connect-to-the/52994841#52994841\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 265,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowPublicSubnet"
							}
						},
						{
							"id": 189391,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The system architectures compatible with this lambda function.",
								"tags": [
									{
										"tag": "default",
										"text": "Architecture.X86_64\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 282,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.architecture"
							}
						},
						{
							"id": 189361,
							"name": "bundle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure or disable bundling options",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189399,
								"name": "FunctionBundleProp"
							}
						},
						{
							"id": 189390,
							"name": "codeSigningConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Code signing config associated with this function",
								"tags": [
									{
										"tag": "default",
										"text": "- Not Sign the Code\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 277,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICodeSigningConfig",
								"package": "aws-cdk-lib",
								"name": "ICodeSigningConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.codeSigningConfig"
							}
						},
						{
							"id": 189386,
							"name": "currentVersionOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Options for the `lambda.Version` resource automatically created by the\n`fn.currentVersion` method.",
								"tags": [
									{
										"tag": "default",
										"text": "- default options as described in `VersionOptions`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 251,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "VersionOptions",
								"package": "aws-cdk-lib",
								"name": "VersionOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.currentVersionOptions"
							}
						},
						{
							"id": 189376,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SQS queue to use if DLQ is enabled.\nIf SNS topic is desired, specify `deadLetterTopic` property instead.",
								"tags": [
									{
										"tag": "default",
										"text": "- SQS queue with 14 day retention period if `deadLetterQueueEnabled` is `true`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 161,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueue"
							}
						},
						{
							"id": 189375,
							"name": "deadLetterQueueEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enabled DLQ. If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
								"tags": [
									{
										"tag": "default",
										"text": "- false unless `deadLetterQueue` is set, which implies DLQ is enabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 154,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueueEnabled"
							}
						},
						{
							"id": 189377,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SNS topic to use as a DLQ.\nNote that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
								"tags": [
									{
										"tag": "default",
										"text": "- no SNS topic\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 169,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterTopic"
							}
						},
						{
							"id": 189367,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A description of the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No description.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.description"
							}
						},
						{
							"id": 189360,
							"name": "enableLiveDev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable local development",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  enableLiveDev: false\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 173,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189368,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
								"tags": [
									{
										"tag": "default",
										"text": "- No environment variables.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189369,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 189370,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 189371,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environment"
							}
						},
						{
							"id": 189389,
							"name": "environmentEncryption",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The AWS KMS key that's used to encrypt your function's environment variables.",
								"tags": [
									{
										"tag": "default",
										"text": "- AWS Lambda creates and uses an AWS managed customer master key (CMK).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 271,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environmentEncryption"
							}
						},
						{
							"id": 189382,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Event sources for this function.",
								"text": "You can also add event sources using `addEventSource`.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No event sources.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 223,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "IEventSource",
									"package": "aws-cdk-lib",
									"name": "IEventSource"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.events"
							}
						},
						{
							"id": 189387,
							"name": "filesystem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The filesystem configuration for the lambda function",
								"tags": [
									{
										"tag": "default",
										"text": "- will not mount any filesystem\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 257,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "FileSystem",
								"package": "aws-cdk-lib",
								"name": "FileSystem"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.filesystem"
							}
						},
						{
							"id": 189350,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override the automatically generated name",
								"tags": [
									{
										"tag": "default",
										"text": "An automatically generated name\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  functionName: \"my-function\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 189351,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 189352,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 189353,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 189396,
																"name": "FunctionNameProps"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 189354,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the entry point and handler function. Of the format:\n`/path/to/file.function`.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  handler: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189372,
							"name": "initialPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Initial policy statements to add to the created Lambda Role.",
								"text": "You can call `addToRolePolicy` to the created lambda to add statements post creation.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No policy statements are added to the created Lambda role.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 94,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "PolicyStatement",
									"package": "aws-cdk-lib",
									"name": "PolicyStatement"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.initialPolicy"
							}
						},
						{
							"id": 189380,
							"name": "insightsVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Specify the version of CloudWatch Lambda insights to use for monitoring",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights.html\n\nWhen used with `DockerImageFunction` or `DockerImageCode`, the Docker image should have\nthe Lambda insights agent installed."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-Getting-Started-docker.html\n"
									},
									{
										"tag": "default",
										"text": "- No Lambda Insights\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 200,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LambdaInsightsVersion",
								"package": "aws-cdk-lib",
								"name": "LambdaInsightsVersion"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.insightsVersion"
							}
						},
						{
							"id": 189363,
							"name": "layers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure layers for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  layers: [myLayer]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 208,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ILayerVersion",
									"package": "aws-cdk-lib",
									"name": "ILayerVersion"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.layers"
							}
						},
						{
							"id": 189383,
							"name": "logRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days log events are kept in CloudWatch Logs. When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
								"tags": [
									{
										"tag": "default",
										"text": "logs.RetentionDays.INFINITE\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 231,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RetentionDays",
								"package": "aws-cdk-lib",
								"name": "RetentionDays"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetention"
							}
						},
						{
							"id": 189385,
							"name": "logRetentionRetryOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.\nThese options control the retry policy when interacting with CloudWatch APIs.",
								"tags": [
									{
										"tag": "default",
										"text": "- Default AWS SDK retry options.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 245,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogRetentionRetryOptions",
								"package": "aws-cdk-lib",
								"name": "LogRetentionRetryOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRetryOptions"
							}
						},
						{
							"id": 189384,
							"name": "logRetentionRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The IAM role for the Lambda function associated with the custom resource\nthat sets the retention policy.",
								"tags": [
									{
										"tag": "default",
										"text": "- A new role is created.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 238,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRole"
							}
						},
						{
							"id": 189394,
							"name": "maxEventAge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum age of a request that Lambda sends to a function for\nprocessing.",
								"text": "Minimum: 60 seconds\nMaximum: 6 hours\n",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.hours(6)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.maxEventAge"
							}
						},
						{
							"id": 189357,
							"name": "memorySize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The amount of memory in MB allocated.",
								"tags": [
									{
										"tag": "default",
										"text": "1024\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 2048,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.memorySize"
							}
						},
						{
							"id": 189392,
							"name": "onFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for failed invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onFailure"
							}
						},
						{
							"id": 189393,
							"name": "onSuccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for successful invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onSuccess"
							}
						},
						{
							"id": 189362,
							"name": "permissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure permissions for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  permissions: [\"ses\", Bucket]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Permissions"
							}
						},
						{
							"id": 189378,
							"name": "profiling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enable profiling.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- No profiling.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 182,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profiling"
							}
						},
						{
							"id": 189379,
							"name": "profilingGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Profiling Group.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- A new profiling group will be created if `profiling` is set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 189,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IProfilingGroup",
								"package": "aws-cdk-lib",
								"name": "IProfilingGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profilingGroup"
							}
						},
						{
							"id": 189381,
							"name": "reservedConcurrentExecutions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum of concurrent executions you want to reserve for the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No specific limit - account limit."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 215,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.reservedConcurrentExecutions"
							}
						},
						{
							"id": 189395,
							"name": "retryAttempts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum number of times to retry when the function returns an error.",
								"text": "Minimum: 0\nMaximum: 2\n",
								"tags": [
									{
										"tag": "default",
										"text": "2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.retryAttempts"
							}
						},
						{
							"id": 189373,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda execution role.",
								"text": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".\n",
								"tags": [
									{
										"tag": "default",
										"text": "- A unique role will be generated for this lambda function.\nBoth supplied and generated roles can always be changed by calling `addToRolePolicy`.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 111,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.role"
							}
						},
						{
							"id": 189356,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The runtime environment.",
								"tags": [
									{
										"tag": "default",
										"text": "\"nodejs12.x\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  runtime: \"nodejs14.x\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nodejs14.x"
									},
									{
										"type": "literal",
										"value": "nodejs"
									},
									{
										"type": "literal",
										"value": "nodejs4.3"
									},
									{
										"type": "literal",
										"value": "nodejs6.10"
									},
									{
										"type": "literal",
										"value": "nodejs8.10"
									},
									{
										"type": "literal",
										"value": "nodejs10.x"
									},
									{
										"type": "literal",
										"value": "nodejs12.x"
									},
									{
										"type": "literal",
										"value": "python2.7"
									},
									{
										"type": "literal",
										"value": "python3.6"
									},
									{
										"type": "literal",
										"value": "python3.7"
									},
									{
										"type": "literal",
										"value": "python3.8"
									},
									{
										"type": "literal",
										"value": "python3.9"
									},
									{
										"type": "literal",
										"value": "dotnetcore1.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.1"
									},
									{
										"type": "literal",
										"value": "dotnetcore3.1"
									},
									{
										"type": "literal",
										"value": "go1.x"
									},
									{
										"type": "reference",
										"qualifiedName": "Runtime",
										"package": "aws-cdk-lib",
										"name": "Runtime"
									}
								]
							}
						},
						{
							"id": 189366,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The list of security groups to associate with the Lambda's network interfaces.",
								"text": "Only used if 'vpc' is supplied.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- If the function is placed within a VPC and a security group is\nnot specified, either by this or securityGroup prop, a dedicated security\ngroup will be created for this function.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 138,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 189355,
							"name": "srcPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Root directory of the project, typically where package.json is located. Set if using a monorepo with multiple subpackages",
								"tags": [
									{
										"tag": "default",
										"text": "Defaults to the same directory as sst.json\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  srcPath: \"packages/backend\",\n  handler: \"function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189358,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The execution timeout in seconds.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 30,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 146,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"qualifiedName": "Duration",
										"package": "aws-cdk-lib",
										"name": "Duration"
									}
								]
							}
						},
						{
							"id": 189359,
							"name": "tracing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable AWS X-Ray Tracing.",
								"tags": [
									{
										"tag": "default",
										"text": "\"active\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  tracing: \"pass_through\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 159,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Tracing",
								"package": "aws-cdk-lib",
								"name": "Tracing"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.tracing"
							}
						},
						{
							"id": 189364,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "VPC network to place Lambda network interfaces",
								"text": "Specify this if the Lambda function needs to access resources in a VPC.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- Function is not placed within a VPC.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpc"
							}
						},
						{
							"id": 189365,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the network interfaces within the VPC.",
								"text": "Only used if 'vpc' is supplied. Note: internet access for Lambdas\nrequires a NAT gateway, so picking Public subnets is not allowed.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- the Vpc default strategy if not specified\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 128,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189374,
								189388,
								189391,
								189361,
								189390,
								189386,
								189376,
								189375,
								189377,
								189367,
								189360,
								189368,
								189389,
								189382,
								189387,
								189350,
								189354,
								189372,
								189380,
								189363,
								189383,
								189385,
								189384,
								189394,
								189357,
								189392,
								189393,
								189362,
								189378,
								189379,
								189381,
								189395,
								189373,
								189356,
								189366,
								189355,
								189358,
								189359,
								189364,
								189365
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 49,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "FunctionOptions",
									"package": "aws-cdk-lib",
									"name": "lambda.FunctionOptions"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "functionName"
										},
										{
											"type": "literal",
											"value": "timeout"
										},
										{
											"type": "literal",
											"value": "runtime"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 189399,
					"name": "FunctionBundleProp",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 229,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 189400,
								"name": "FunctionBundleNodejsProps"
							},
							{
								"type": "reference",
								"id": 189413,
								"name": "FunctionBundlePythonProps"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 189348,
					"name": "FunctionDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 189419,
								"name": "Function"
							},
							{
								"type": "reference",
								"id": 189349,
								"name": "FunctionProps"
							}
						]
					}
				},
				{
					"id": 189347,
					"name": "FunctionInlineDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						]
					}
				},
				{
					"id": 189346,
					"name": "HandlerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 45,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "FunctionHandlerProps"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189419
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189416,
						189400,
						189413,
						189396,
						189349
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						189399,
						189348,
						189347,
						189346
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Function.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 190141,
			"name": "GraphQLApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 190164,
					"name": "GraphQLApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 190168,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 39,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 190169,
									"name": "new GraphQLApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 190170,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190171,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190172,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190142,
												"name": "GraphQLApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 190164,
										"name": "GraphQLApi"
									},
									"overwrites": {
										"type": "reference",
										"id": 188266,
										"name": "Api.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 188265,
								"name": "Api.constructor"
							}
						},
						{
							"id": 190204,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 397,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190205,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190207,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 405,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 190209,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 413,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 190208,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 409,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 190206,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 401,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190207,
												190209,
												190208,
												190206
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 188271,
								"name": "Api.cdk"
							}
						},
						{
							"id": 190173,
							"name": "codegen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 35,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190174,
							"name": "lambdaIntegration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "HttpRouteIntegration",
								"package": "@aws-cdk/aws-apigatewayv2-alpha",
								"name": "HttpRouteIntegration"
							}
						},
						{
							"id": 190232,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 188366,
								"name": "Api.node"
							}
						},
						{
							"id": 190175,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 37,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190212,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 451,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190213,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188287,
								"name": "Api.customDomainUrl"
							}
						},
						{
							"id": 190216,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190217,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.httpApiArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188291,
								"name": "Api.httpApiArn"
							}
						},
						{
							"id": 190214,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190215,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.routes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188289,
								"name": "Api.routes"
							}
						},
						{
							"id": 190176,
							"name": "serverFunction",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 85,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190177,
									"name": "serverFunction",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 190210,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 440,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190211,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188285,
								"name": "Api.url"
							}
						},
						{
							"id": 190218,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 482,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190219,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190220,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190221,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 188201,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 188294,
										"name": "Api.addRoutes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188293,
								"name": "Api.addRoutes"
							}
						},
						{
							"id": 190225,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 519,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190226,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190227,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 188301,
										"name": "Api.attachPermissions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188300,
								"name": "Api.attachPermissions"
							}
						},
						{
							"id": 190228,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 541,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190229,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190230,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190231,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 188304,
										"name": "Api.attachPermissionsToRoute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188303,
								"name": "Api.attachPermissionsToRoute"
							}
						},
						{
							"id": 190178,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 106,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190179,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190180,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190181,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190182,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188203,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 190183,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									},
									"overwrites": {
										"type": "reference",
										"id": 188347,
										"name": "Api.createFunctionIntegration"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 188346,
								"name": "Api.createFunctionIntegration"
							}
						},
						{
							"id": 190184,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 124,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190185,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 190186,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190187,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190188,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190192,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190189,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "literal",
																		"value": true
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190191,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190193,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 190194,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 190196,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 190197,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 190198,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 190199,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													190198,
																													190199
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 190195,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							190196,
																							190195
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190190,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190192,
																		190189,
																		190191,
																		190193,
																		190190
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190200,
													"name": "local",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190201,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190202,
																	"name": "codegen",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190202
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190203,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														190187,
														190200,
														190203
													]
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 188308,
										"name": "Api.getConstructMetadata"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 188307,
								"name": "Api.getConstructMetadata"
							}
						},
						{
							"id": 190222,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 505,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190223,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190224,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 188298,
										"name": "Api.getFunction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188297,
								"name": "Api.getFunction"
							}
						},
						{
							"id": 190233,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190234,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 188368,
										"name": "Api.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188367,
								"name": "Api.toString"
							}
						},
						{
							"id": 190165,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 190166,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190167,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 188263,
										"name": "Api.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 188262,
								"name": "Api.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								190168
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190204,
								190173,
								190174,
								190232,
								190175
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								190212,
								190216,
								190214,
								190176,
								190210
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190218,
								190225,
								190228,
								190178,
								190184,
								190222,
								190233,
								190165
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/GraphQLApi.ts",
							"line": 34,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 188261,
							"name": "Api"
						}
					]
				},
				{
					"id": 190142,
					"name": "GraphQLApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190151,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.accessLog"
							}
						},
						{
							"id": 190153,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.authorizers"
							}
						},
						{
							"id": 190146,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190147,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190148,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 190149,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190148,
												190149
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cdk"
							}
						},
						{
							"id": 190143,
							"name": "codegen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to graphql-codegen configuration file",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew GraphQLApi(props.stack, \"api\", {\n  codegen: \"./graphql/codegen.yml\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190150,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cors"
							}
						},
						{
							"id": 190152,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.customDomain"
							}
						},
						{
							"id": 190154,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 150,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190155,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190158,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 190157,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 171,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													}
												]
											}
										},
										{
											"id": 190156,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 167,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										},
										{
											"id": 190159,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 183,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 190160,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190161,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 190162,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 190163,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 214,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																190162,
																190163
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190158,
												190157,
												190156,
												190159,
												190160
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.defaults"
							}
						},
						{
							"id": 190145,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190144,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to function that will be invoked to resolve GraphQL queries.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew GraphQLApi(props.stack, \"api\", {\n  codegen: \"./graphql/codegen.yml\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190151,
								190153,
								190146,
								190143,
								190150,
								190152,
								190154,
								190145,
								190144
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/GraphQLApi.ts",
							"line": 8,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 188179,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "never"
										}
									],
									"name": "ApiProps"
								},
								{
									"type": "literal",
									"value": "routes"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						190164
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						190142
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/GraphQLApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 190298,
			"name": "KinesisStream",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 190312,
					"name": "KinesisStream",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `KinesisStream` construct is a higher level CDK construct that makes it easy to create a [Kinesis Data Stream](https://aws.amazon.com/kinesis/data-streams/). You can create a stream and add a list of consumers to it.\nThis construct makes it easy to define a stream and its consumers. It also internally connects the consumers and the stream together."
					},
					"children": [
						{
							"id": 190316,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 142,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 190317,
									"name": "new KinesisStream",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 190318,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190319,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190320,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 190299,
												"name": "KinesisStreamProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 190312,
										"name": "KinesisStream"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 190321,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190322,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190323,
											"name": "stream",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Return internally created Kinesis Stream"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IStream",
												"package": "aws-cdk-lib",
												"name": "IStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190323
											]
										}
									]
								}
							}
						},
						{
							"id": 190324,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 138,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190325,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 190326,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 190327,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 189419,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 190372,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 190328,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 139,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 190329,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 140,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 190299,
								"name": "KinesisStreamProps"
							}
						},
						{
							"id": 190330,
							"name": "streamArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 163,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190331,
									"name": "streamArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created Kinesis Stream"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190332,
							"name": "streamName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190333,
									"name": "streamName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created Kinesis Stream"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190367,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 275,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190368,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190369,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190370,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190371,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 190307,
														"name": "KinesisStreamConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 190334,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 184,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190335,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add consumers to a stream after creating it",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.addConsumers({\n  consumer1: \"src/function.handler\"\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190336,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190337,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190338,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 190339,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 190340,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 189347,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 190307,
																	"name": "KinesisStreamConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190341,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 206,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190342,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the consumers. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nstream.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190343,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190344,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 221,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190345,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific consumer. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190346,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190347,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190365,
							"name": "createStream",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 259,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190366,
									"name": "createStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190351,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 246,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190352,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 190353,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190355,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190356,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190358,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 190359,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 190361,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 190362,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 190363,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 190364,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													190363,
																													190364
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 190360,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							190361,
																							190360
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190357,
																	"name": "streamName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190358,
																		190357
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190354,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "KinesisStream"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														190355,
														190354
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 190348,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190349,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the function for a specific consumer",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.getFunction(\"consumer1\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190350,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 190373,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190374,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 190313,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 190314,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190315,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								190316
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190321,
								190324,
								190372,
								190328,
								190329
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								190330,
								190332
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190367,
								190334,
								190341,
								190344,
								190365,
								190351,
								190348,
								190373,
								190313
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 131,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 190307,
					"name": "KinesisStreamConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the function consumer for the stream"
					},
					"children": [
						{
							"id": 190309,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190310,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190311,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the interally created event source",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    fun: {\n      cdk: {\n        eventSource: {\n          enabled: false\n        }\n      }\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 119,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "KinesisEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "KinesisEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190311
											]
										}
									]
								}
							}
						},
						{
							"id": 190308,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    consumer1: {\n      function: {\n        handler: \"src/consumer1.handler\",\n        timeout: 30\n      }\n    }\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190309,
								190308
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 81,
							"character": 17
						}
					]
				},
				{
					"id": 190299,
					"name": "KinesisStreamProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190304,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190305,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190306,
											"name": "stream",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created Kinesis Stream",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  cdk: {\n    stream: {\n      streamName: \"my-stream\",\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IStream",
														"package": "aws-cdk-lib",
														"name": "IStream"
													},
													{
														"type": "reference",
														"qualifiedName": "StreamProps",
														"package": "aws-cdk-lib",
														"name": "StreamProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190306
											]
										}
									]
								}
							}
						},
						{
							"id": 190303,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the function consumers for this stream",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: {\n      function: {\n        handler: \"src/consumer2.handler\",\n        timeout: 30\n      }\n    }\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 189347,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 190307,
												"name": "KinesisStreamConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 190300,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190302,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(props.stack, \"Stream\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190302
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190304,
								190303,
								190300
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 19,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						190312
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						190307,
						190299
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/KinesisStream.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189821,
			"name": "NextjsSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189848,
					"name": "NextjsSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `NextjsSite` construct is a higher level CDK construct that makes it easy to create a Next.js app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.",
						"text": "It also allows you to [automatically set the environment variables](#configuring-environment-variables) in your Next.js app directly from the outputs in your SST app.\n\n## Next.js Features\nThe `NextjsSite` construct uses the [`@sls-next/lambda-at-edge`](https://github.com/serverless-nextjs/serverless-next.js/tree/master/packages/libs/lambda-at-edge) package from the [`serverless-next.js`](https://github.com/serverless-nextjs/serverless-next.js) project to build and package your Next.js app so that it can be deployed to Lambda@Edge and CloudFront.\n\n:::note\nTo use the `NextjsSite` construct, you have to install `@sls-next/lambda-at-edge` as a dependency in your `package.json`.\n\n```bash\nnpm install --save @sls-next/lambda-at-edge\n```\n:::\n\nMost of the Next.js 11 features are supported, including:\n\n- [Static Site Generation (SSG)](https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation): Static pages are served out through the CloudFront CDN.\n- [Server Side Rendering (SSR)](https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering): Server side rendering is performed at CloudFront edge locations using Lambda@Edge.\n- [API Routes](https://nextjs.org/docs/api-routes/introduction): API requests are served from CloudFront edge locations using Lambda@Edge.\n- [Incremental Static Regeneration (ISR)](https://nextjs.org/docs/basic-features/data-fetching#incremental-static-regeneration): Regeneration is performed using Lambda functions, and the generated pages will be served out through the CloudFront CDN.\n- [Image Optimization](https://nextjs.org/docs/basic-features/image-optimization): Images are resized and optimized at CloudFront edge locations using Lambda@Edge.\n\nNext.js 12 features like middleware and AVIF image are not yet supported. You can [read more about the features supported by `serverless-next.js`](https://github.com/serverless-nextjs/serverless-next.js#features). And you can [follow the progress on Next.js 12 support here](https://github.com/serverless-nextjs/serverless-next.js/issues/2016).\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Creating a Next.js app\n\nDeploys a Next.js app in the `path/to/site` directory.\n\n```js\nnew NextjsSite(this, \"NextSite\", {\n  path: \"path/to/site\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189855,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 465,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189856,
									"name": "new NextjsSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189857,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189858,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189859,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189822,
												"name": "NextjsSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189848,
										"name": "NextjsSite"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189875,
							"name": "apiFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 461,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 189870,
							"name": "assets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 456,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Asset",
									"package": "aws-cdk-lib",
									"name": "Asset"
								}
							}
						},
						{
							"id": 189871,
							"name": "awsCliLayer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 457,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AwsCliLayer",
								"package": "aws-cdk-lib",
								"name": "AwsCliLayer"
							}
						},
						{
							"id": 189869,
							"name": "buildOutDir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 455,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 189860,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 431,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189861,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189862,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 435,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 189866,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The AWS Certificate Manager certificate for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 451,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 189864,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 443,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 189865,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 447,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										},
										{
											"id": 189863,
											"name": "regenerationQueue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 439,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Queue",
												"package": "aws-cdk-lib",
												"name": "Queue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189862,
												189866,
												189864,
												189865,
												189863
											]
										}
									]
								}
							}
						},
						{
							"id": 189873,
							"name": "edgeLambdaRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 459,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Role",
								"package": "aws-cdk-lib",
								"name": "Role"
							}
						},
						{
							"id": 189876,
							"name": "imageFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 462,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 189868,
							"name": "isPlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 454,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189874,
							"name": "mainFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 460,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 189968,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189867,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 453,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 189822,
								"name": "NextjsSiteProps"
							}
						},
						{
							"id": 189877,
							"name": "regenerationFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 463,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "aws-cdk-lib",
								"name": "Function"
							}
						},
						{
							"id": 189872,
							"name": "routesManifest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 458,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "RoutesManifest",
										"package": "@sls-next/core",
										"name": "RoutesManifest"
									}
								]
							}
						},
						{
							"id": 189850,
							"name": "imageCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for images."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 404,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 189851,
							"name": "lambdaCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for Lambda@Edge."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 419,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 189849,
							"name": "staticCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for static pages."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 389,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 189882,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 564,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189883,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189884,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 571,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189885,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189880,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 548,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189881,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 189888,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 585,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189889,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189886,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 578,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189887,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189878,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 541,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189879,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189890,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 602,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189891,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to allow the Next.js API routes and Server Side rendering `getServerSideProps` to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n### Attaching permissions\n\n```js {5}\nconst site = new NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n});\n\nsite.attachPermissions([\"sns\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189892,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189933,
							"name": "buildApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 937,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189934,
									"name": "buildApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189953,
							"name": "createCertificate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1396,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189954,
									"name": "createCertificate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										]
									}
								}
							]
						},
						{
							"id": 189939,
							"name": "createCloudFrontDistribution",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1094,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189940,
									"name": "createCloudFrontDistribution",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Distribution",
										"package": "aws-cdk-lib",
										"name": "Distribution"
									}
								}
							]
						},
						{
							"id": 189943,
							"name": "createCloudFrontImageCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1261,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189944,
									"name": "createCloudFrontImageCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 189947,
							"name": "createCloudFrontInvalidation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1277,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189948,
									"name": "createCloudFrontInvalidation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 189945,
							"name": "createCloudFrontLambdaCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1269,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189946,
									"name": "createCloudFrontLambdaCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 189941,
							"name": "createCloudFrontStaticCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1253,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189942,
									"name": "createCloudFrontStaticCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 189907,
							"name": "createEdgeFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 675,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189908,
									"name": "createEdgeFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189909,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189910,
											"name": "handlerPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 189917,
							"name": "createEdgeFunctionInNonUE1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 737,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189918,
									"name": "createEdgeFunctionInNonUE1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189919,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189920,
											"name": "assetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189921,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										},
										{
											"id": 189922,
											"name": "hasRealCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 189911,
							"name": "createEdgeFunctionInUE1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 702,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189912,
									"name": "createEdgeFunctionInUE1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189913,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189914,
											"name": "assetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189915,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										},
										{
											"id": 189916,
											"name": "hasRealCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 189923,
							"name": "createEdgeFunctionRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 794,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189924,
									"name": "createEdgeFunctionRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 189929,
							"name": "createLambdaCodeReplacer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 885,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189930,
									"name": "createLambdaCodeReplacer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189931,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189932,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 189927,
							"name": "createRegenerationFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 837,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189928,
									"name": "createRegenerationFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 189925,
							"name": "createRegenerationQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 823,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189926,
									"name": "createRegenerationQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Queue",
										"package": "aws-cdk-lib",
										"name": "Queue"
									}
								}
							]
						},
						{
							"id": 189955,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1433,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189956,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189935,
							"name": "createS3Bucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 993,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189936,
									"name": "createS3Bucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Bucket",
										"package": "aws-cdk-lib",
										"name": "Bucket"
									}
								}
							]
						},
						{
							"id": 189937,
							"name": "createS3Deployment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1004,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189938,
									"name": "createS3Deployment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 189893,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 606,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189894,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189895,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189897,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189898,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189900,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189899,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189900,
																		189899
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189896,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "NextSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189897,
														189896
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189964,
							"name": "getLambdaContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1515,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189965,
									"name": "getLambdaContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 189962,
							"name": "getS3ContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1487,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189963,
									"name": "getS3ContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 189951,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1360,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189952,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									}
								}
							]
						},
						{
							"id": 189957,
							"name": "pathPattern",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189958,
									"name": "pathPattern",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189959,
											"name": "pattern",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189960,
							"name": "readRoutesManifest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1481,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189961,
									"name": "readRoutesManifest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RoutesManifest",
										"package": "@sls-next/core",
										"name": "RoutesManifest"
									}
								}
							]
						},
						{
							"id": 189966,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1559,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189967,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189969,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189970,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189949,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1330,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189950,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189901,
							"name": "zipAppAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 616,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189902,
									"name": "zipAppAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189903,
											"name": "fileSizeLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 189904,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 189905,
							"name": "zipAppStubAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 667,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189906,
									"name": "zipAppStubAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 189852,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189853,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189854,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189855
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189875,
								189870,
								189871,
								189869,
								189860,
								189873,
								189876,
								189868,
								189874,
								189968,
								189867,
								189877,
								189872,
								189850,
								189851,
								189849
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189882,
								189884,
								189880,
								189888,
								189886,
								189878
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189890,
								189933,
								189953,
								189939,
								189943,
								189947,
								189945,
								189941,
								189907,
								189917,
								189911,
								189923,
								189929,
								189927,
								189925,
								189955,
								189935,
								189937,
								189893,
								189964,
								189962,
								189951,
								189957,
								189960,
								189966,
								189969,
								189949,
								189901,
								189905,
								189852
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/NextjsSite.ts",
							"line": 385,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189822,
					"name": "NextjsSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189823,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189824,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189825,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in bucket information to override the default settings this construct uses to create the CDK Bucket internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 51,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 189827,
											"name": "cachePolicies",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default CloudFront cache policies created internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n### Reusng CloudFront cache policies\n\nCloudFront has a limit of 20 cache policies per AWS account. This is a hard limit, and cannot be increased. Each `NextjsSite` creates 3 cache policies. If you plan to deploy multiple Next.js sites, you can have the constructs share the same cache policies by reusing them across sites.\n\n```js\nimport * as cloudfront from \"aws-cdk-lib/aws-cloudfront\";\n\nconst cachePolicies = {\n  staticCachePolicy: new cloudfront.CachePolicy(this, \"StaticCache\", NextjsSite.staticCachePolicyProps),\n  imageCachePolicy: new cloudfront.CachePolicy(this, \"ImageCache\", NextjsSite.imageCachePolicyProps),\n  lambdaCachePolicy: new cloudfront.CachePolicy(this, \"LambdaCache\", NextjsSite.lambdaCachePolicyProps),\n};\n\nnew NextjsSite(this, \"Site1\", {\n  path: \"path/to/site1\",\n  cfCachePolicies: cachePolicies,\n});\n\nnew NextjsSite(this, \"Site2\", {\n  path: \"path/to/site2\",\n  cfCachePolicies: cachePolicies,\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 83,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189828,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 189830,
															"name": "imageCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 85,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														},
														{
															"id": 189831,
															"name": "lambdaCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 86,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														},
														{
															"id": 189829,
															"name": "staticCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 84,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																189830,
																189831,
																189829
															]
														}
													]
												}
											}
										},
										{
											"id": 189826,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a value to override the default settings this construct uses to create the CDK `Distribution` internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 55,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										},
										{
											"id": 189832,
											"name": "regenerationQueue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses to create the CDK `Queue` internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "QueueProps",
												"package": "aws-cdk-lib",
												"name": "QueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189825,
												189827,
												189826,
												189832
											]
										}
									]
								}
							}
						},
						{
							"id": 189834,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n### Configuring custom domains\n\nYou can configure the website with a custom domain hosted either on [Route 53](https://aws.amazon.com/route53/) or [externally](#configuring-externally-hosted-domain).\n\n#### Using the basic config (Route 53 domains)\n\n```js {3}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: \"domain.com\",\n});\n```\n\n#### Redirect www to non-www (Route 53 domains)\n\n```js {3-6}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    domainAlias: \"www.domain.com\",\n  },\n});\n```\n\n#### Configuring domains across stages (Route 53 domains)\n\n```js {7-10}\nexport default class MyStack extends Stack {\n  constructor(scope, id, props) {\n    super(scope, id, props);\n\n    new NextjsSite(this, \"Site\", {\n      path: \"path/to/site\",\n      customDomain: {\n        domainName:\n          scope.stage === \"prod\" ? \"domain.com\" : `${scope.stage}.domain.com`,\n        domainAlias: scope.stage === \"prod\" ? \"www.domain.com\" : undefined,\n      },\n    });\n  }\n}\n```\n\n#### Using the full config (Route 53 domains)\n\n```js {3-7}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    domainAlias: \"www.domain.com\",\n    hostedZone: \"domain.com\",\n  },\n});\n```\n\n#### Importing an existing certificate (Route 53 domains)\n\n```js {7}\nimport { Certificate } from \"aws-cdk-lib/aws-certificatemanager\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    certificate: Certificate.fromCertificateArn(this, \"MyCert\", certArn),\n  },\n});\n```\n\nNote that, the certificate needs be created in the `us-east-1`(N. Virginia) region as required by AWS CloudFront.\n\n#### Specifying a hosted zone (Route 53 domains)\n\nIf you have multiple hosted zones for a given domain, you can choose the one you want to use to configure the domain.\n\n```js {7-10}\nimport { HostedZone } from \"aws-cdk-lib/aws-route53\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    hostedZone: HostedZone.fromHostedZoneAttributes(this, \"MyZone\", {\n      hostedZoneId,\n      zoneName,\n    }),\n  },\n});\n```\n\n#### Configuring externally hosted domain\n\n```js {5-8}\nimport { Certificate } from \"aws-cdk-lib/aws-certificatemanager\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    isExternalDomain: true,\n    domainName: \"domain.com\",\n    certificate: Certificate.fromCertificateArn(this, \"MyCert\", certArn),\n  },\n});\n```\n\nNote that the certificate needs be created in the `us-east-1`(N. Virginia) region as required by AWS CloudFront, and validated. After the `Distribution` has been created, create a CNAME DNS record for your domain name with the `Distribution's` URL as the value. Here are more details on [configuring SSL Certificate on externally hosted domains](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html).\n\nAlso note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "BaseSiteDomainProps"
									}
								]
							}
						},
						{
							"id": 189839,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 306,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189840,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189841,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda Functions created by this construct.",
												"tags": [
													{
														"tag": "example",
														"text": "\n### Configuring the Lambda Functions\n\nConfigure the internally created CDK [`Lambda Function`](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_lambda.Function.html) instance.\n\n```js {4-8}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  defaults: {\n    function: {\n      timeout: 20,\n      memorySize: 2048,\n      permissions: [\"sns\"],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 328,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189842,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 189844,
															"name": "memorySize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 330,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 189845,
															"name": "permissions",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 331,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"name": "Permissions"
															}
														},
														{
															"id": 189843,
															"name": "timeout",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 329,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																189844,
																189845,
																189843
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189841
											]
										}
									]
								}
							}
						},
						{
							"id": 189846,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 337,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189835,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name.",
								"tags": [
									{
										"tag": "example",
										"text": "\n### Configuring environment variables\n\nThe `NextjsSite` construct allows you to set the environment variables in your Next.js app based on outputs from other constructs in your SST app. So you don't have to hard code the config from your backend. Let's look at how.\n\nNext.js supports [setting build time environment variables](https://nextjs.org/docs/basic-features/environment-variables). In your JS files this looks like:\n\n\n```js title=\"pages/index.js\"\nconsole.log(process.env.API_URL);\nconsole.log(process.env.USER_POOL_CLIENT);\n```\n\nYou can pass these in directly from the construct.\n\n```js {3-6}\nnew NextjsSite(this, \"NextSite\", {\n  path: \"path/to/site\",\n  environment: {\n    API_URL: api.url,\n    USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n\nWhere `api.url` or `auth.cognitoUserPoolClient.userPoolClientId` are coming from other constructs in your SST app.\n\n#### While deploying\n\nOn `sst deploy`, the environment variables will first be replaced by placeholder values, `{{ API_URL }}` and `{{ USER_POOL_CLIENT }}`, when building the Next.js app. And after the referenced resources have been created, the Api and User Pool in this case, the placeholders in the HTML and JS files will then be replaced with the actual values.\n\n:::caution\nSince the actual values are determined at deploy time, you should not rely on the values at build time. For example, you cannot fetch from `process.env.API_URL` inside `getStaticProps()` at build time.\n\nThere are a couple of work arounds:\n- Hardcode the API URL\n- Read the API URL dynamically at build time (ie. from an SSM value)\n- Use [fallback pages](https://nextjs.org/docs/basic-features/data-fetching#fallback-pages) to generate the page on the fly\n:::\n\n#### While developing\n\nTo use these values while developing, run `sst start` to start the [Live Lambda Development](../live-lambda-development.md) environment.\n\n``` bash\nnpx sst start\n```\n\nThen in your Next.js app to reference these variables, add the [`sst-env`](../packages/static-site-env.md) package.\n\n```bash\nnpm install --save-dev @serverless-stack/static-site-env\n```\n\nAnd tweak the Next.js `dev` script to:\n\n```json title=\"package.json\" {2}\n\"scripts\": {\n  \"dev\": \"sst-env -- next dev\",\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n},\n```\n\nNow you can start your Next.js app as usual and it'll have the environment variables from your SST app.\n\n``` bash\nnpm run dev\n```\n\nThere are a couple of things happening behind the scenes here:\n\n1. The `sst start` command generates a file with the values specified by the `NextjsSite` construct's `environment` prop.\n2. The `sst-env` CLI will traverse up the directories to look for the root of your SST app.\n3. It'll then find the file that's generated in step 1.\n4. It'll load these as environment variables before running the start command.\n\n:::note\n`sst-env` only works if the Next.js app is located inside the SST app or inside one of its subdirectories. For example:\n\n```\n/\n  sst.json\n  nextjs-app/\n```\n:::\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 305,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189836,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 189837,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 189838,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 189833,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 96,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189847,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 341,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189823,
								189834,
								189839,
								189846,
								189835,
								189833,
								189847
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/NextjsSite.ts",
							"line": 46,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189848
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189822
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/NextjsSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189207,
			"name": "Queue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189218,
					"name": "Queue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Queue` construct is a higher level CDK construct that makes it easy to create a [SQS Queues](https://aws.amazon.com/sqs/). You can create a queue by specifying a consumer function. And then publish to the queue from any part of your serverless app.",
						"text": "This construct makes it easier to define a queue and a consumer. It also internally connects the consumer and queue together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Queue } from \"@serverless-stack/resources\";\n\nnew Queue(this, \"Queue\", {\n  consumer: \"src/queueConsumer.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189222,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189223,
									"name": "new Queue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189224,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189225,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189226,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189208,
												"name": "QueueProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189218,
										"name": "Queue"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189227,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 109,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189228,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189229,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IQueue",
												"package": "aws-cdk-lib",
												"name": "IQueue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189229
											]
										}
									]
								}
							}
						},
						{
							"id": 189230,
							"name": "consumerFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internally created consumer `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 189254,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189231,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 189232,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 189208,
								"name": "QueueProps"
							}
						},
						{
							"id": 189233,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 145,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189234,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a consumer after creating the queue. Note only one consumer can be added to a queue",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst queue = new Queue(props.stack, \"Queue\");\nqueue.addConsumer(props.stack, \"src/function.handler\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189235,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189236,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189213,
														"name": "QueueConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189237,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 194,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189238,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to the consumer function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst queue = new Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n});\nqueue.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189239,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189252,
							"name": "createQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 213,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189253,
									"name": "createQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189240,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 202,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189241,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189242,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189244,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189245,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189248,
																	"name": "consumer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 189249,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 189250,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 189251,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								189250,
																								189251
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189246,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189247,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189248,
																		189246,
																		189247
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189243,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Queue"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189244,
														189243
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189255,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189256,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189219,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189220,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189221,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189222
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189227,
								189230,
								189254,
								189231,
								189232
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189233,
								189237,
								189252,
								189240,
								189255,
								189219
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 108,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189213,
					"name": "QueueConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the consumer for the queue and invocation details"
					},
					"children": [
						{
							"id": 189215,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189216,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189217,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the consumer.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: {\n    function: \"test/lambda.handler\",\n    cdk: {\n      eventSource: {\n        batchSize: 5,\n      },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 84,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "SqsEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189217
											]
										}
									]
								}
							}
						},
						{
							"id": 189214,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: {\n    function: {\n      handler: \"src/function.handler\",\n      timeout: 10,\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189215,
								189214
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 49,
							"character": 17
						}
					]
				},
				{
					"id": 189208,
					"name": "QueueProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189209,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189210,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189211,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the queue.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n  cdk: {\n    queue: {\n      fifo: true,\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IQueue",
														"package": "aws-cdk-lib",
														"name": "IQueue"
													},
													{
														"type": "reference",
														"qualifiedName": "QueueProps",
														"package": "aws-cdk-lib",
														"name": "QueueProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189211
											]
										}
									]
								}
							}
						},
						{
							"id": 189212,
							"name": "consumer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create the consumer for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 189347,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 189213,
										"name": "QueueConsumerProps"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189209,
								189212
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189218
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189213,
						189208
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Queue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 188720,
			"name": "RDS",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188747,
					"name": "RDS",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `RDS` construct is a higher level CDK construct that makes it easy to create an [RDS Serverless Cluster](https://aws.amazon.com/rds/). It uses the following defaults:",
						"text": "- Defaults to using the [Serverless v1 On-Demand autoscaling configuration](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) to make it serverless.\n- Provides a built-in interface for running schema migrations using [Kysely](https://koskimas.github.io/kysely/#migrations).\n- Enables [Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) to allow your Lambda functions to access the database cluster without needing to deploy the functions in a VPC (virtual private cloud).\n- Enables [Backup Snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/BackupRestoreAurora.html) to make sure that you don't lose your data.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { RDS } from \"@serverless-stack/resources\";\n\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"my_database\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 188751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 149,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 188752,
									"name": "new RDS",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 188753,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 188754,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188755,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188721,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 188747,
										"name": "RDS"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 188756,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 136,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188757,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188758,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 140,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ServerlessCluster",
												"package": "aws-cdk-lib",
												"name": "ServerlessCluster"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188758
											]
										}
									]
								}
							}
						},
						{
							"id": 188759,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 142,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188761,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 147,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188760,
							"name": "migratorFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 146,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 188821,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 188762,
							"name": "clusterArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 199,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188763,
									"name": "clusterArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `ServerlessCluster` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188766,
							"name": "clusterEndpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188767,
									"name": "clusterEndpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Endpoint",
										"package": "aws-cdk-lib",
										"name": "Endpoint"
									}
								}
							]
						},
						{
							"id": 188764,
							"name": "clusterIdentifier",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 206,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188765,
									"name": "clusterIdentifier",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188768,
							"name": "secretArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 188769,
									"name": "secretArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188815,
							"name": "createMigrationCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 400,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188816,
									"name": "createMigrationCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188817,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188810,
							"name": "createMigrationsFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 347,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188811,
									"name": "createMigrationsFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188812,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188813,
											"name": "defaultDatabaseName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188814,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 188818,
							"name": "generateMigrationsHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 438,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188819,
									"name": "generateMigrationsHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188820,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 188770,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 224,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 188771,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 188772,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 188774,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 188775,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 188778,
																	"name": "clusterArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188779,
																	"name": "clusterIdentifier",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188780,
																	"name": "defaultDatabaseName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188776,
																	"name": "engine",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188781,
																	"name": "migrator",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 188782,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 188783,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 188784,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								188783,
																								188784
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 188777,
																	"name": "secretArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		188778,
																		188779,
																		188780,
																		188776,
																		188781,
																		188777
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 188773,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "RDS"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														188774,
														188773
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 188794,
							"name": "getEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 290,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188795,
									"name": "getEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188796,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188733,
												"name": "RDSEngineType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IClusterEngine",
										"package": "aws-cdk-lib",
										"name": "IClusterEngine"
									}
								}
							]
						},
						{
							"id": 188797,
							"name": "getScaling",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 310,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188798,
									"name": "getScaling",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188799,
											"name": "scaling",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 188800,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 188801,
															"name": "autoPause",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The time before the cluster is paused.",
																"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
																"tags": [
																	{
																		"tag": "default",
																		"text": "true\n"
																	},
																	{
																		"tag": "example",
																		"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 67,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 188803,
															"name": "maxCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The maximum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_16\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 81,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														},
														{
															"id": 188802,
															"name": "minCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The minimum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_2\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 74,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																188801,
																188803,
																188802
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "ServerlessScalingOptions",
										"package": "aws-cdk-lib",
										"name": "ServerlessScalingOptions"
									}
								}
							]
						},
						{
							"id": 188804,
							"name": "getVpc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 325,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188805,
									"name": "getVpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188806,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188734,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVpc",
										"package": "aws-cdk-lib",
										"name": "IVpc"
									}
								}
							]
						},
						{
							"id": 188807,
							"name": "getVpcSubnets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 335,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188808,
									"name": "getVpcSubnets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188809,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188734,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "SubnetSelection",
												"package": "aws-cdk-lib",
												"name": "SubnetSelection"
											}
										]
									}
								}
							]
						},
						{
							"id": 188822,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 188823,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 188791,
							"name": "validateMigrationsFileExists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 283,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188792,
									"name": "validateMigrationsFileExists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188793,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188785,
							"name": "validateRDSServerlessClusterProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 239,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188786,
									"name": "validateRDSServerlessClusterProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188787,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188734,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188788,
							"name": "validateRequiredProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 271,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 188789,
									"name": "validateRequiredProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188790,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188721,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188748,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188749,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 188750,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								188751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188756,
								188759,
								188761,
								188760,
								188821
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								188762,
								188766,
								188764,
								188768
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188815,
								188810,
								188818,
								188770,
								188794,
								188797,
								188804,
								188807,
								188822,
								188791,
								188785,
								188788,
								188748
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 135,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 188734,
					"name": "RDSCdkServerlessClusterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188739,
							"name": "backupRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days during which automatic DB snapshots are retained.\nAutomatic backup retention cannot be disabled on serverless clusters.\nMust be a value from 1 day to 35 days.",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.days(1)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.backupRetention"
							}
						},
						{
							"id": 188738,
							"name": "clusterIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "An optional identifier for the cluster",
								"tags": [
									{
										"tag": "default",
										"text": "- A name is automatically generated.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.clusterIdentifier"
							}
						},
						{
							"id": 188736,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Credentials for the administrative user",
								"tags": [
									{
										"tag": "default",
										"text": "- A username of 'admin' and SecretsManager-generated password\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Credentials",
								"package": "aws-cdk-lib",
								"name": "Credentials"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.credentials"
							}
						},
						{
							"id": 188740,
							"name": "deletionProtection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Indicates whether the DB cluster should have deletion protection enabled.",
								"tags": [
									{
										"tag": "default",
										"text": "- true if removalPolicy is RETAIN, false otherwise\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deletionProtection"
							}
						},
						{
							"id": 188741,
							"name": "enableDataApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to enable the Data API.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 84,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.enableDataApi"
							}
						},
						{
							"id": 188745,
							"name": "parameterGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Additional parameters to pass to the database engine",
								"tags": [
									{
										"tag": "default",
										"text": "- no parameter group.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IParameterGroup",
								"package": "aws-cdk-lib",
								"name": "IParameterGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parameterGroup"
							}
						},
						{
							"id": 188743,
							"name": "removalPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The removal policy to apply when the cluster and its instances are removed\nfrom the stack or replaced during an update.",
								"tags": [
									{
										"tag": "default",
										"text": "- RemovalPolicy.SNAPSHOT (remove the cluster and instances, but retain a snapshot of the data)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 112,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RemovalPolicy",
								"package": "aws-cdk-lib",
								"name": "RemovalPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.removalPolicy"
							}
						},
						{
							"id": 188744,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Security group.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new security group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no VPC security groups will be associated with the DB cluster.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 188737,
							"name": "storageEncryptionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The KMS key for storage encryption.",
								"tags": [
									{
										"tag": "default",
										"text": "- the default master key will be used for storage encryption\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 306,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.storageEncryptionKey"
							}
						},
						{
							"id": 188746,
							"name": "subnetGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Existing subnet group for the cluster.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new subnet group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no subnet group will be associated with the DB cluster\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ISubnetGroup",
								"package": "aws-cdk-lib",
								"name": "ISubnetGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.subnetGroup"
							}
						},
						{
							"id": 188735,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							}
						},
						{
							"id": 188742,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the instances within the VPC.\nIf provided, the `vpc` property must also be specified.",
								"tags": [
									{
										"tag": "default",
										"text": "- the VPC default strategy if not specified.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188739,
								188738,
								188736,
								188740,
								188741,
								188745,
								188743,
								188744,
								188737,
								188746,
								188735,
								188742
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 102,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "ServerlessClusterProps",
									"package": "aws-cdk-lib",
									"name": "rds.ServerlessClusterProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "vpc"
										},
										{
											"type": "literal",
											"value": "engine"
										},
										{
											"type": "literal",
											"value": "defaultDatabaseName"
										},
										{
											"type": "literal",
											"value": "scaling"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 188721,
					"name": "RDSProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188722,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188723,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188724,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internallly created RDS cluster.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  cdk: {\n    cluster: {\n      clusterIdentifier: \"my-cluster\",\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 34,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 188734,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188724
											]
										}
									]
								}
							}
						},
						{
							"id": 188726,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Name of a database which is automatically created inside the cluster."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188725,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Database engine of the cluster. Cannot be changed once set."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 188733,
								"name": "RDSEngineType"
							}
						},
						{
							"id": 188732,
							"name": "migrations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the directory that contains the migration scripts. The `RDS` construct uses [Kysely](https://koskimas.github.io/kysely/) to run and manage schema migrations. The `migrations` prop should point to the folder where your migration files are.",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"acme\",\n  migrations: \"path/to/migration/scripts\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188727,
							"name": "scaling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188728,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188729,
											"name": "autoPause",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The time before the cluster is paused.",
												"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
												"tags": [
													{
														"tag": "default",
														"text": "true\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 188731,
											"name": "maxCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The maximum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_16\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 81,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										},
										{
											"id": 188730,
											"name": "minCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The minimum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_2\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188729,
												188731,
												188730
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188722,
								188726,
								188725,
								188732,
								188727
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 188733,
					"name": "RDSEngineType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 100,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "mysql5.6"
							},
							{
								"type": "literal",
								"value": "mysql5.7"
							},
							{
								"type": "literal",
								"value": "postgresql10.14"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188747
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						188734,
						188721
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						188733
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/RDS.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 190489,
			"name": "ReactStaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 190490,
					"name": "ReactStaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ReactStaticSite` construct is designed to make it easy to work with React apps created using [Create React App](https://create-react-app.dev/) or similar projects.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal Config\n```js\nnew ReactStaticSite(this, \"ReactSite\", {\n  path: \"path/to/src\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 190494,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ReactStaticSite.ts",
									"line": 24,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 190495,
									"name": "new ReactStaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 190496,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190497,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190498,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190534,
												"name": "ReactStaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 190490,
										"name": "ReactStaticSite"
									},
									"overwrites": {
										"type": "reference",
										"id": 189754,
										"name": "StaticSite.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 189753,
								"name": "StaticSite.constructor"
							}
						},
						{
							"id": 190499,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190500,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190501,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 190504,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 190502,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 190503,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190501,
												190504,
												190502,
												190503
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189758,
								"name": "StaticSite.cdk"
							}
						},
						{
							"id": 190531,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189818,
								"name": "StaticSite.node"
							}
						},
						{
							"id": 190509,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190510,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189773,
								"name": "StaticSite.bucketArn"
							}
						},
						{
							"id": 190511,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190512,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189775,
								"name": "StaticSite.bucketName"
							}
						},
						{
							"id": 190507,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190508,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189771,
								"name": "StaticSite.customDomainUrl"
							}
						},
						{
							"id": 190515,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190516,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionDomain"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189779,
								"name": "StaticSite.distributionDomain"
							}
						},
						{
							"id": 190513,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190514,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189777,
								"name": "StaticSite.distributionId"
							}
						},
						{
							"id": 190505,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190506,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189769,
								"name": "StaticSite.url"
							}
						},
						{
							"id": 190529,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190530,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189813,
										"name": "StaticSite.createRoute53Records"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189812,
								"name": "StaticSite.createRoute53Records"
							}
						},
						{
							"id": 190517,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190518,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 190519,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190521,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190522,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190524,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190523,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190524,
																		190523
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190520,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														190521,
														190520
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189782,
										"name": "StaticSite.getConstructMetadata"
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189781,
								"name": "StaticSite.getConstructMetadata"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 190527,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190528,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189809,
										"name": "StaticSite.lookupHostedZone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189808,
								"name": "StaticSite.lookupHostedZone"
							}
						},
						{
							"id": 190532,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190533,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189820,
										"name": "StaticSite.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189819,
								"name": "StaticSite.toString"
							}
						},
						{
							"id": 190525,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190526,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189807,
										"name": "StaticSite.validateCustomDomainSettings"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189806,
								"name": "StaticSite.validateCustomDomainSettings"
							}
						},
						{
							"id": 190491,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 190492,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190493,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189751,
										"name": "StaticSite.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189750,
								"name": "StaticSite.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								190494
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190499,
								190531
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								190509,
								190511,
								190507,
								190515,
								190513,
								190505
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190529,
								190517,
								190527,
								190532,
								190525,
								190491
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ReactStaticSite.ts",
							"line": 23,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 189749,
							"name": "StaticSite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 190534,
					"name": "ReactStaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190542,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189726,
								"name": "StaticSiteProps.buildCommand"
							}
						},
						{
							"id": 190543,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189727,
								"name": "StaticSiteProps.buildOutput"
							}
						},
						{
							"id": 190535,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190536,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190537,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 190538,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190537,
												190538
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189719,
								"name": "StaticSiteProps.cdk"
							}
						},
						{
							"id": 190546,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 189735,
										"name": "StaticSiteDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189730,
								"name": "StaticSiteProps.customDomain"
							}
						},
						{
							"id": 190549,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189733,
								"name": "StaticSiteProps.disablePlaceholder"
							}
						},
						{
							"id": 190547,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189731,
								"name": "StaticSiteProps.environment"
							}
						},
						{
							"id": 190541,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189725,
								"name": "StaticSiteProps.errorPage"
							}
						},
						{
							"id": 190544,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189745,
									"name": "StaticSiteFileOptions"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189728,
								"name": "StaticSiteProps.fileOptions"
							}
						},
						{
							"id": 190540,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189724,
								"name": "StaticSiteProps.indexPage"
							}
						},
						{
							"id": 190539,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189723,
								"name": "StaticSiteProps.path"
							}
						},
						{
							"id": 190548,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189732,
								"name": "StaticSiteProps.purgeFiles"
							}
						},
						{
							"id": 190545,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189729,
								"name": "StaticSiteProps.replaceValues"
							}
						},
						{
							"id": 190550,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189734,
								"name": "StaticSiteProps.waitForInvalidation"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190542,
								190543,
								190535,
								190546,
								190549,
								190547,
								190541,
								190544,
								190540,
								190539,
								190548,
								190545,
								190550
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ReactStaticSite.ts",
							"line": 64,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 189718,
							"name": "StaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						190490
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						190534
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ReactStaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189167,
			"name": "Script",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189176,
					"name": "Script",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Script` construct is a higher level CDK construct that makes it easy to run a script in a Lambda function during the deployment process. It provides a simple way to build and bundle the script function; and allows you to pass parameter values based on outputs from other constructs in your SST app. So you don't have to hard code values in your script. You can configure a script to run before or after any of the stacks or resources are deployed in your app.",
						"text": "Since the script is running inside a Lambda function, it can interact with resources like the RDS databases, that are inside a VPC; and make AWS API calls to services that the IAM credentials in your local environment or CI might not have permissions to.\n\nA few things to note:\n- It does not run locally. It runs inside a Lambda function.\n- It gets run on every deployment.\n- It can run for a maximum of 15 minutes.\n- [Live Lambda Dev](../live-lambda-development.md) is not enabled for these functions.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal config\n\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/function.create\",\n  onUpdate: \"src/function.update\",\n  onDelete: \"src/function.delete\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 189180,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189181,
									"name": "new Script",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189182,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189183,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189184,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189168,
												"name": "ScriptProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189176,
										"name": "Script"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189185,
							"name": "createFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onCreate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 189187,
							"name": "deleteFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onDelete `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 119,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 189204,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189188,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 120,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 189168,
								"name": "ScriptProps"
							}
						},
						{
							"id": 189186,
							"name": "updateFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onUpdate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 189189,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 153,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189190,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grants additional permissions to the script",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nscript.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189191,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189202,
							"name": "checkDeprecatedFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 254,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189203,
									"name": "checkDeprecatedFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189198,
							"name": "createCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 231,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189199,
									"name": "createCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189200,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188560,
												"name": "App"
											}
										},
										{
											"id": 189201,
											"name": "crFunction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "aws-cdk-lib",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189196,
							"name": "createCustomResourceFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 216,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189197,
									"name": "createCustomResourceFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 189192,
							"name": "createUserFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 159,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189193,
									"name": "createUserFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189194,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189195,
											"name": "fnDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189348,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 189205,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189206,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189177,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189178,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189179,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189180
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189185,
								189187,
								189204,
								189188,
								189186
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189189,
								189202,
								189198,
								189196,
								189192,
								189205,
								189177
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 107,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					]
				},
				{
					"id": 189168,
					"name": "ScriptProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189170,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189171,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189172,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Script.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189172
											]
										}
									]
								}
							}
						},
						{
							"id": 189173,
							"name": "onCreate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs when the Script is created.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onCreate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 189175,
							"name": "onDelete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Create the function that runs when the Script is deleted from the stack.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onDelete: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 189174,
							"name": "onUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs on every deploy after the Script is created",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onUpdate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 189169,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object of input parameters to be passed to the script. Made available in the `event` object of the function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/script.create\",\n  params: {\n    hello: \"world\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189170,
								189173,
								189175,
								189174,
								189169
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189176
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189168
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Script.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189717,
			"name": "StaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189749,
					"name": "StaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `StaticSite` construct is a higher level CDK construct that makes it easy to create a static website. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL. In addition:",
						"text": "- Visitors to the `http://` url will be redirected to the `https://` URL.\n- If a [domain alias](#domainalias) is configured, visitors to the alias domain will be redirected to the main one. So if `www.example.com` is the domain alias for `example.com`, visitors to `www.example.com` will be redirected to `example.com`.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\nThe `StaticSite` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Creating a plain HTML site\n\nDeploys a plain HTML website in the `path/to/src` directory.\n\n```js\nimport { StaticSite } from \"@serverless-stack/resources\";\n\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n\n### Creating a React site\n\n```js\nimport { StaticSiteErrorOptions } from \"@serverless-stack/resources\";\n\nnew StaticSite(this, \"ReactSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"build\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\nIf you are using [Create React App](https://create-react-app.dev), we created the [`ReactStaticSite`](ReactStaticSite.md) construct to make it even easier to deploy React apps.\n\n### Creating a Vue.js site\n\n```js\nnew StaticSite(this, \"VueJSSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\n### Creating a Gatsby site\n\n```js\nnew StaticSite(this, \"GatsbySite\", {\n  path: \"path/to/src\",\n  errorPage: \"404.html\",\n  buildOutput: \"public\",\n  buildCommand: \"npm run build\",\n});\n```\n\n### Creating a Jekyll site\n\n```js\nnew StaticSite(this, \"JekyllSite\", {\n  path: \"path/to/src\",\n  errorPage: \"404.html\",\n  buildOutput: \"_site\",\n  buildCommand: \"bundle exec jekyll build\",\n});\n```\n\n### Creating an Angular site\n\n```js\nnew StaticSite(this, \"AngularSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"ng build --output-path dist\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\n### Creating a Svelte site\n\n```js\nnew StaticSite(this, \"SvelteSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n  environment: {\n    // Pass in the API endpoint to our app\n    VITE_APP_API_URL: api.url,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189753,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 393,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189754,
									"name": "new StaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189755,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189756,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189757,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189718,
												"name": "StaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189749,
										"name": "StaticSite"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189766,
							"name": "assets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 389,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Asset",
									"package": "aws-cdk-lib",
									"name": "Asset"
								}
							}
						},
						{
							"id": 189768,
							"name": "awsCliLayer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 391,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AwsCliLayer",
								"package": "aws-cdk-lib",
								"name": "AwsCliLayer"
							}
						},
						{
							"id": 189758,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189759,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189760,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 189763,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 189761,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 189762,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189760,
												189763,
												189761,
												189762
											]
										}
									]
								}
							}
						},
						{
							"id": 189767,
							"name": "filenamesAsset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 390,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Asset",
								"package": "aws-cdk-lib",
								"name": "Asset"
							}
						},
						{
							"id": 189765,
							"name": "isPlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 388,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189818,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189764,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 387,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 189718,
								"name": "StaticSiteProps"
							}
						},
						{
							"id": 189773,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189774,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189775,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189776,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189771,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189772,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 189779,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189780,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189777,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189778,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189769,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189770,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189789,
							"name": "buildApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 503,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189790,
									"name": "buildApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189791,
							"name": "bundleAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 539,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189792,
									"name": "bundleAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189793,
											"name": "fileSizeLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 189794,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 189795,
							"name": "bundleFilenamesAsset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 601,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189796,
									"name": "bundleFilenamesAsset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189797,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										]
									}
								}
							]
						},
						{
							"id": 189810,
							"name": "createCertificate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 907,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189811,
									"name": "createCertificate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										]
									}
								}
							]
						},
						{
							"id": 189802,
							"name": "createCfDistribution",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 722,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189803,
									"name": "createCfDistribution",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Distribution",
										"package": "aws-cdk-lib",
										"name": "Distribution"
									}
								}
							]
						},
						{
							"id": 189804,
							"name": "createCloudFrontInvalidation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 791,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189805,
									"name": "createCloudFrontInvalidation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 189812,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189813,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189798,
							"name": "createS3Bucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189799,
									"name": "createS3Bucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Bucket",
										"package": "aws-cdk-lib",
										"name": "Bucket"
									}
								}
							]
						},
						{
							"id": 189800,
							"name": "createS3Deployment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 649,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189801,
									"name": "createS3Deployment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 189781,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189782,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189783,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189785,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189786,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189788,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189787,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189788,
																		189787
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189784,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189785,
														189784
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189814,
							"name": "getS3ContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 985,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189815,
									"name": "getS3ContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 189808,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189809,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									}
								}
							]
						},
						{
							"id": 189816,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 1009,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189817,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189819,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189820,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189806,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 189807,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189750,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189751,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189752,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189753
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189766,
								189768,
								189758,
								189767,
								189765,
								189818,
								189764
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189773,
								189775,
								189771,
								189779,
								189777,
								189769
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189789,
								189791,
								189795,
								189810,
								189802,
								189804,
								189812,
								189798,
								189800,
								189781,
								189814,
								189808,
								189816,
								189819,
								189806,
								189750
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 368,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 190254,
							"name": "ViteStaticSite"
						},
						{
							"type": "reference",
							"id": 190490,
							"name": "ReactStaticSite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189735,
					"name": "StaticSiteDomainProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure StaticSite domain properties"
					},
					"children": [
						{
							"id": 189739,
							"name": "alternateNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Additional domain names for the site. Note the certificate must cover these domains"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.alternateNames"
							}
						},
						{
							"id": 189741,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189742,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189744,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/BaseSite.ts",
													"line": 30,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 189743,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/BaseSite.ts",
													"line": 29,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189744,
												189743
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.cdk"
							}
						},
						{
							"id": 189737,
							"name": "domainAlias",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The domain alias of the site."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.domainAlias"
							}
						},
						{
							"id": 189736,
							"name": "domainName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The domain name of the site."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.domainName"
							}
						},
						{
							"id": 189738,
							"name": "hostedZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The hosted zone to use for the domain."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.hostedZone"
							}
						},
						{
							"id": 189740,
							"name": "isExternalDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is hosted outside of AWS"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 27,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.isExternalDomain"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189739,
								189741,
								189737,
								189736,
								189738,
								189740
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 260,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseSiteDomainProps"
						}
					]
				},
				{
					"id": 189745,
					"name": "StaticSiteFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189748,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 265,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189746,
							"name": "exclude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 263,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 189747,
							"name": "include",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 264,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189748,
								189746,
								189747
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 262,
							"character": 17
						}
					]
				},
				{
					"id": 189718,
					"name": "StaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189726,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189727,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189719,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189720,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189721,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 189722,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189721,
												189722
											]
										}
									]
								}
							}
						},
						{
							"id": 189730,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 189735,
										"name": "StaticSiteDomainProps"
									}
								]
							}
						},
						{
							"id": 189733,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189731,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 189725,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189728,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189745,
									"name": "StaticSiteFileOptions"
								}
							}
						},
						{
							"id": 189724,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189723,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189732,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 189729,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							}
						},
						{
							"id": 189734,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189726,
								189727,
								189719,
								189730,
								189733,
								189731,
								189725,
								189728,
								189724,
								189723,
								189732,
								189729,
								189734
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 40,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 190236,
							"name": "ViteStaticSiteProps"
						},
						{
							"type": "reference",
							"id": 190534,
							"name": "ReactStaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189749
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189735,
						189745,
						189718
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/StaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 188963,
			"name": "Table",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 188997,
					"name": "Table",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Table` construct is a higher level CDK construct that makes it easy to create a [DynamoDB](https://aws.amazon.com/dynamodb/) table. It uses the following defaults:",
						"text": "- Defaults to using the [On-Demand capacity](https://aws.amazon.com/dynamodb/pricing/on-demand/) to make it perfectly serverless.\n- Enables [Point-in-Time Recovery](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html) to make sure that you don't lose your data.\n- Provides a nicer interface for defining indexes.\n"
					},
					"children": [
						{
							"id": 189001,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 237,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189002,
									"name": "new Table",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189003,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189004,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189005,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188964,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 188997,
										"name": "Table"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189006,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 224,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189007,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189008,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Table` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITable",
												"package": "aws-cdk-lib",
												"name": "ITable"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189008
											]
										}
									]
								}
							}
						},
						{
							"id": 189009,
							"name": "dynamodbTableType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 230,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "CREATED"
									},
									{
										"type": "literal",
										"value": "IMPORTED"
									}
								]
							}
						},
						{
							"id": 189017,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 235,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 189010,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189011,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 189012,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 189013,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 189419,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 189083,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189014,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 232,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 189015,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 233,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 188964,
								"name": "TableProps"
							}
						},
						{
							"id": 189016,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 234,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "StreamViewType",
								"package": "aws-cdk-lib",
								"name": "StreamViewType"
							}
						},
						{
							"id": 189024,
							"name": "tableArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 364,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189025,
									"name": "tableArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189026,
							"name": "tableName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 371,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189027,
									"name": "tableName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189061,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 528,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189062,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189063,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189064,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189065,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 188981,
														"name": "TableConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 189028,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 386,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189029,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Define additional consumers for table events",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addConsumers(this, {\n  consumer1: \"src/consumer1.main\",\n  consumer2: \"src/consumer2.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189030,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189031,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189032,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 189033,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 189034,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 189347,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 188981,
																	"name": "TableConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189018,
							"name": "addGlobalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189019,
									"name": "addGlobalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional global secondary indexes where the `key` is the name of the global secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addGlobalIndexes({\n  gsi1: {\n    partitionKey: \"pk\",\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189020,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 188986,
														"name": "TableGlobalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189021,
							"name": "addLocalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189022,
									"name": "addLocalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional local secondary indexes where the `key` is the name of the local secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addLocalIndexes({\n  lsi1: {\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189023,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 188992,
														"name": "TableLocalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189035,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 405,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189036,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to all consumers of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189037,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189038,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 419,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189039,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to a specific consumer of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189040,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189041,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189066,
							"name": "buildAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 588,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189067,
									"name": "buildAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189068,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 189069,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 189070,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 189071,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "TableFieldType"
														}
													}
												}
											}
										},
										{
											"id": 189072,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Attribute",
										"package": "aws-cdk-lib",
										"name": "Attribute"
									}
								}
							]
						},
						{
							"id": 189076,
							"name": "buildKinesisStreamSpec",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 614,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189077,
									"name": "buildKinesisStreamSpec",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189078,
											"name": "kinesisStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 190312,
												"name": "KinesisStream"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189073,
							"name": "buildStreamConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 600,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189074,
									"name": "buildStreamConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189075,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "new_image"
													},
													{
														"type": "literal",
														"value": "old_image"
													},
													{
														"type": "literal",
														"value": "new_and_old_images"
													},
													{
														"type": "literal",
														"value": "keys_only"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "StreamViewType",
												"package": "aws-cdk-lib",
												"name": "StreamViewType"
											}
										]
									}
								}
							]
						},
						{
							"id": 189059,
							"name": "createTable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 460,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189060,
									"name": "createTable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189045,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 447,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189046,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189047,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189049,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189050,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189052,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 189053,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 189055,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 189056,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 189057,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 189058,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													189057,
																													189058
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 189054,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							189055,
																							189054
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189051,
																	"name": "tableName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189052,
																		189051
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189048,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Table"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189049,
														189048
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189042,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189043,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given consumer.",
										"text": "```js\n const table = new Table(this, \"Table\", {\n   consumers: {\n     consumer1: \"./src/function.handler\",\n   }\n })\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
									},
									"parameters": [
										{
											"id": 189044,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 189084,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189085,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189079,
							"name": "validateFieldsAndIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189080,
									"name": "validateFieldsAndIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189081,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189082,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 188964,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188998,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 188999,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189000,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189001
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189006,
								189009,
								189017,
								189010,
								189083,
								189014,
								189015,
								189016
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189024,
								189026
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189061,
								189028,
								189018,
								189021,
								189035,
								189038,
								189066,
								189076,
								189073,
								189059,
								189045,
								189042,
								189084,
								189079,
								188998
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 223,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 188981,
					"name": "TableConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188983,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 171,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188984,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188985,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created event source"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 175,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DynamoEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "DynamoEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188985
											]
										}
									]
								}
							}
						},
						{
							"id": 188982,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the table."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 170,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188983,
								188982
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 166,
							"character": 17
						}
					]
				},
				{
					"id": 188986,
					"name": "TableGlobalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188989,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188990,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188991,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created global secondary index"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "GlobalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "GlobalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "partitionKey"
															},
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188991
											]
										}
									]
								}
							}
						},
						{
							"id": 188987,
							"name": "partitionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as a partition key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 183,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 188988,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188989,
								188987,
								188988
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 179,
							"character": 17
						}
					]
				},
				{
					"id": 188992,
					"name": "TableLocalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188994,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188995,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188996,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created local secondary indexes"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 208,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "LocalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "LocalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188996
											]
										}
									]
								}
							}
						},
						{
							"id": 188993,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188994,
								188993
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 199,
							"character": 17
						}
					]
				},
				{
					"id": 188964,
					"name": "TableProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 188978,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188979,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188980,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created cdk table"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITable",
														"package": "aws-cdk-lib",
														"name": "ITable"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "TableProps",
																"package": "aws-cdk-lib",
																"name": "TableProps"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "partitionKey"
																	},
																	{
																		"type": "literal",
																		"value": "sortKey"
																	}
																]
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188980
											]
										}
									]
								}
							}
						},
						{
							"id": 188977,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure DynamoDB streams and consumers",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nconst table = new Table(this, \"Table\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: \"src/consumer2.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 155,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 189347,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 188981,
												"name": "TableConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188974,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188975,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188976,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Table. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(this, \"Table\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { topicName: topic.topicName },\n      permissions: [topic],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 139,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188976
											]
										}
									]
								}
							}
						},
						{
							"id": 188965,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object defining the fields of the table. Key is the name of the field and the value is the type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188970,
							"name": "globalIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's global secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    gsi1pk: \"string\",\n    gsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"GSI1\": { partitionKey: \"gsi1pk\", sortKey: \"gsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 188986,
										"name": "TableGlobalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188972,
							"name": "kinesisStream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 190312,
								"name": "KinesisStream"
							}
						},
						{
							"id": 188971,
							"name": "localIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's local secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    lsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"lsi1\": { sortKey: \"lsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 188992,
										"name": "TableLocalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 188966,
							"name": "primaryIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188967,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 188968,
											"name": "partitionKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Define the Partition Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188969,
											"name": "sortKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the Sort Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\", sortKey: \"sk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												188968,
												188969
											]
										}
									]
								}
							}
						},
						{
							"id": 188973,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the information that will be written to the Stream.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {8}\nnew Table(props.stack, \"Table\", {\n  stream: \"new_image\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "new_image"
									},
									{
										"type": "literal",
										"value": "old_image"
									},
									{
										"type": "literal",
										"value": "new_and_old_images"
									},
									{
										"type": "literal",
										"value": "keys_only"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								188978,
								188977,
								188974,
								188965,
								188970,
								188972,
								188971,
								188966,
								188973
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188997
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						188981,
						188986,
						188992,
						188964
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Table.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 189086,
			"name": "Topic",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 189105,
					"name": "Topic",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Topic` construct is a higher level CDK construct that makes it easy to create a serverless pub/sub service. You can create a topic that has a list of subscribers. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of subscribers; Function subscribers (subscribe with a Lambda function) or Queue subscribers (subscribe with a SQS queue).\n\nThis construct makes it easier to define a topic and its subscribers. It also internally connects the subscribers and topic together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Topic } from \"@serverless-stack/resources\";\n\nnew Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189109,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 155,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 189110,
									"name": "new Topic",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 189111,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189112,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189113,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 189087,
												"name": "TopicProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189105,
										"name": "Topic"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 189114,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 145,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189115,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189116,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Topic` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 149,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITopic",
												"package": "aws-cdk-lib",
												"name": "ITopic"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189116
											]
										}
									]
								}
							}
						},
						{
							"id": 189164,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 189118,
							"name": "permissionsAttachedForAllSubscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 152,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 189119,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 189087,
								"name": "TopicProps"
							}
						},
						{
							"id": 189117,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 151,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 189419,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 189218,
											"name": "Queue"
										}
									]
								}
							}
						},
						{
							"id": 189124,
							"name": "subscriberFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 184,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189125,
									"name": "subscriberFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created function instances for the subscribers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 189419,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 189126,
							"name": "subscriptions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 193,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189127,
									"name": "subscriptions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of subscriptions for this topic"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Subscription",
											"package": "aws-cdk-lib",
											"name": "Subscription"
										}
									}
								}
							]
						},
						{
							"id": 189120,
							"name": "topicArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189121,
									"name": "topicArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189122,
							"name": "topicName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 177,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 189123,
									"name": "topicName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 189160,
							"name": "addFunctionSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189161,
									"name": "addFunctionSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189162,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189163,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189095,
														"name": "TopicFunctionSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189156,
							"name": "addQueueSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 328,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189157,
									"name": "addQueueSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189158,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189159,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 189100,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189152,
							"name": "addSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 306,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189153,
									"name": "addSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189154,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189155,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 189347,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 189095,
														"name": "TopicFunctionSubscriberProps"
													},
													{
														"type": "reference",
														"id": 189218,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 189100,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189128,
							"name": "addSubscribers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 226,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189129,
									"name": "addSubscribers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add subscribers to the topic.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.addSubscribers(this, [\"src/subscriber3.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189130,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 189131,
											"name": "subscribers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 189347,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 189095,
															"name": "TopicFunctionSubscriberProps"
														},
														{
															"type": "reference",
															"id": 189218,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 189100,
															"name": "TopicQueueSubscriberProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189132,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 250,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189133,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the subscriber functions. This allows the subscribers to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189134,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189135,
							"name": "attachPermissionsToSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 268,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189136,
									"name": "attachPermissionsToSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the list of permissions to a given subscriber by index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n\ntopic.attachPermissionsToSubscriber(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189137,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 189138,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189150,
							"name": "createTopic",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 291,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 189151,
									"name": "createTopic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 189139,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 189140,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189141,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189143,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 189144,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 189146,
																	"name": "subscribers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 189147,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 189148,
																						"name": "node",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "fn.node.addr"
																					},
																					{
																						"id": 189149,
																						"name": "stack",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							189148,
																							189149
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 189145,
																	"name": "topicArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		189146,
																		189145
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 189142,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Topic"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														189143,
														189142
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 189165,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 189166,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 189106,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 189107,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 189108,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								189109
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189114,
								189164,
								189118,
								189119,
								189117
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								189124,
								189126,
								189120,
								189122
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								189160,
								189156,
								189152,
								189128,
								189132,
								189135,
								189150,
								189139,
								189165,
								189106
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 144,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 189095,
					"name": "TopicFunctionSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    function: \"src/function.handler\",\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189097,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189098,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189099,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189099
											]
										}
									]
								}
							}
						},
						{
							"id": 189096,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the subscriber function for the topic"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189348,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189097,
								189096
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 189087,
					"name": "TopicProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 189092,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189093,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189094,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the topic."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITopic",
														"package": "aws-cdk-lib",
														"name": "ITopic"
													},
													{
														"type": "reference",
														"qualifiedName": "TopicProps",
														"package": "aws-cdk-lib",
														"name": "TopicProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189094
											]
										}
									]
								}
							}
						},
						{
							"id": 189088,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189089,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189090,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Topic. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Topic(props.stack, \"Topic\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189090
											]
										}
									]
								}
							}
						},
						{
							"id": 189091,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of subscribers to create for this topic",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Topic(this, \"Topic\", {\n  subscribers: [\n    \"src/function1.handler\",\n    \"src/function2.handler\"\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 189347,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 189095,
											"name": "TopicFunctionSubscriberProps"
										},
										{
											"type": "reference",
											"id": 189218,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 189100,
											"name": "TopicQueueSubscriberProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189092,
								189088,
								189091
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 189100,
					"name": "TopicQueueSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    queue: new Queue(this, \"Queue\", {\n      consumer: \"src/function.handler\",\n    })\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 189102,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 189103,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189104,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "SqsSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												189104
											]
										}
									]
								}
							}
						},
						{
							"id": 189101,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue that'll be added as a subscriber to the topic."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189218,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189102,
								189101
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 109,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						189105
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						189095,
						189087,
						189100
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Topic.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 190235,
			"name": "ViteStaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 190254,
					"name": "ViteStaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ViteStaticSite` construct is a higher level CDK construct that makes it easy to create a Vite single page app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.",
						"text": "It's designed to work with static sites built with [Vite](https://vitejs.dev/). It allows you to [automatically set environment variables](#configuring-environment-variables) in your Vite app directly from the outputs of your SST app. And it can also create a `.d.ts` type definition file for the environment variables.\n\nThe `ViteStaticSite` construct internally extends the [`StaticSite`](StaticSite.md) construct with the following pre-configured defaults.\n\n- [`indexPage`](StaticSite.md#indexpage) is set to `index.html`.\n- [`errorPage`](StaticSite.md#errorpage) is set to `redirect_to_index_page`. So error pages are redirected to the index page.\n- [`buildCommand`](StaticSite.md#buildcommand) is `npm run build`.\n- [`buildOutput`](StaticSite.md#buildoutput) is the `dist` folder in your Vite app.\n- [`fileOptions`](StaticSite.md#fileoptions) sets the cache control to `max-age=0,no-cache,no-store,must-revalidate` for HTML files; and `max-age=31536000,public,immutable` for JS/CSS files.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n```js\nnew ViteStaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 190258,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ViteStaticSite.ts",
									"line": 52,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 190259,
									"name": "new ViteStaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 190260,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190261,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190262,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 190236,
												"name": "ViteStaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 190254,
										"name": "ViteStaticSite"
									},
									"overwrites": {
										"type": "reference",
										"id": 189754,
										"name": "StaticSite.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 189753,
								"name": "StaticSite.constructor"
							}
						},
						{
							"id": 190263,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190264,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190265,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 190268,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 190266,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 190267,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190265,
												190268,
												190266,
												190267
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189758,
								"name": "StaticSite.cdk"
							}
						},
						{
							"id": 190295,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189818,
								"name": "StaticSite.node"
							}
						},
						{
							"id": 190273,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190274,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189773,
								"name": "StaticSite.bucketArn"
							}
						},
						{
							"id": 190275,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190276,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189775,
								"name": "StaticSite.bucketName"
							}
						},
						{
							"id": 190271,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190272,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189771,
								"name": "StaticSite.customDomainUrl"
							}
						},
						{
							"id": 190279,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190280,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionDomain"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189779,
								"name": "StaticSite.distributionDomain"
							}
						},
						{
							"id": 190277,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190278,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189777,
								"name": "StaticSite.distributionId"
							}
						},
						{
							"id": 190269,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190270,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189769,
								"name": "StaticSite.url"
							}
						},
						{
							"id": 190293,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190294,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189813,
										"name": "StaticSite.createRoute53Records"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189812,
								"name": "StaticSite.createRoute53Records"
							}
						},
						{
							"id": 190281,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190282,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 190283,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190285,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190286,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190288,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190287,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190288,
																		190287
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190284,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														190285,
														190284
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189782,
										"name": "StaticSite.getConstructMetadata"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189781,
								"name": "StaticSite.getConstructMetadata"
							}
						},
						{
							"id": 190291,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190292,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189809,
										"name": "StaticSite.lookupHostedZone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189808,
								"name": "StaticSite.lookupHostedZone"
							}
						},
						{
							"id": 190296,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190297,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189820,
										"name": "StaticSite.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189819,
								"name": "StaticSite.toString"
							}
						},
						{
							"id": 190289,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 190290,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189807,
										"name": "StaticSite.validateCustomDomainSettings"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189806,
								"name": "StaticSite.validateCustomDomainSettings"
							}
						},
						{
							"id": 190255,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 190256,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190257,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 189751,
										"name": "StaticSite.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 189750,
								"name": "StaticSite.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								190258
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190263,
								190295
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								190273,
								190275,
								190271,
								190279,
								190277,
								190269
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190293,
								190281,
								190291,
								190296,
								190289,
								190255
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ViteStaticSite.ts",
							"line": 51,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 189749,
							"name": "StaticSite"
						}
					]
				},
				{
					"id": 190236,
					"name": "ViteStaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190245,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189726,
								"name": "StaticSiteProps.buildCommand"
							}
						},
						{
							"id": 190246,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189727,
								"name": "StaticSiteProps.buildOutput"
							}
						},
						{
							"id": 190238,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190239,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190240,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 190241,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190240,
												190241
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189719,
								"name": "StaticSiteProps.cdk"
							}
						},
						{
							"id": 190249,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 189735,
										"name": "StaticSiteDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189730,
								"name": "StaticSiteProps.customDomain"
							}
						},
						{
							"id": 190252,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189733,
								"name": "StaticSiteProps.disablePlaceholder"
							}
						},
						{
							"id": 190250,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189731,
								"name": "StaticSiteProps.environment"
							}
						},
						{
							"id": 190244,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189725,
								"name": "StaticSiteProps.errorPage"
							}
						},
						{
							"id": 190247,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 189745,
									"name": "StaticSiteFileOptions"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189728,
								"name": "StaticSiteProps.fileOptions"
							}
						},
						{
							"id": 190243,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189724,
								"name": "StaticSiteProps.indexPage"
							}
						},
						{
							"id": 190242,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189723,
								"name": "StaticSiteProps.path"
							}
						},
						{
							"id": 190251,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189732,
								"name": "StaticSiteProps.purgeFiles"
							}
						},
						{
							"id": 190248,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189729,
								"name": "StaticSiteProps.replaceValues"
							}
						},
						{
							"id": 190237,
							"name": "typesPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The path where code-gen should place the type definition for environment variables",
								"tags": [
									{
										"tag": "default",
										"text": "\"src/sst-env.d.ts\""
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ViteStaticSite(props.stack, \"Site\", {\n  typesFile: \"./other/path/sst-env.d.ts\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ViteStaticSite.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190253,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 189734,
								"name": "StaticSiteProps.waitForInvalidation"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190245,
								190246,
								190238,
								190249,
								190252,
								190250,
								190244,
								190247,
								190243,
								190242,
								190251,
								190248,
								190237,
								190253
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ViteStaticSite.ts",
							"line": 11,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 189718,
							"name": "StaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						190254
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						190236
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ViteStaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 190375,
			"name": "WebSocketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 190400,
					"name": "WebSocketApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `WebSocketApi` construct is a higher level CDK construct that makes it easy to create a WebSocket API. It provides a simple way to define your routes and allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains. See the [examples](#examples) for more details.",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { WebSocketApi } from \"@serverless-stack/resources\";\n\nnew WebSocketApi(this, \"Api\", {\n  routes: {\n    $connect: \"src/connect.main\",\n    $default: \"src/default.main\",\n    $disconnect: \"src/disconnect.main\",\n    sendMessage: \"src/sendMessage.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 190404,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 207,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 190405,
									"name": "new WebSocketApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 190406,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190407,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190408,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 190376,
												"name": "WebSocketApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 190400,
										"name": "WebSocketApi"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 190416,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 198,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190422,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "reference",
										"qualifiedName": "WebSocketLambdaAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
										"name": "WebSocketLambdaAuthorizer"
									}
								]
							}
						},
						{
							"id": 190409,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 176,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190410,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190413,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created log group"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 188,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 190415,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created certificate"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 196,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 190414,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created domain name"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 190411,
											"name": "webSocketApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created websocket api"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 180,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "WebSocketApi"
											}
										},
										{
											"id": 190412,
											"name": "webSocketStage",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created websocket stage"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketStage",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "WebSocketStage"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190413,
												190415,
												190414,
												190411,
												190412
											]
										}
									]
								}
							}
						},
						{
							"id": 190417,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 199,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190418,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 190419,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 190420,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 189419,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 190486,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 190421,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 200,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 190423,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 205,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 190376,
								"name": "WebSocketApiProps"
							}
						},
						{
							"id": 190430,
							"name": "_connectionsArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 251,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190431,
									"name": "_connectionsArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190426,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 240,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190427,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Custom domain url if it's configured"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 190428,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 247,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190429,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of routes of the websocket api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 190424,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 233,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 190425,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Url of the websocket api"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190468,
							"name": "addAuthorizer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190469,
									"name": "addAuthorizer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190470,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 466,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190471,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190472,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190473,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190474,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 189348,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 189419,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 190432,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190433,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add routes to an already created WebSocket API",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes({\n  \"$connect\": \"src/connect.main\",\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190434,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 190435,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 190436,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 190437,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 190438,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"id": 189348,
															"name": "FunctionDefinition"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190442,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 307,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190443,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190444,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190445,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 323,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190446,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.attachPermissionsToRoute(\"$connect\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190447,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190448,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190475,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 533,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190476,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 190477,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 190478,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"NONE\""
														},
														{
															"id": 190479,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																190478,
																190479
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 190480,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 190481,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"CUSTOM\""
														},
														{
															"id": 190482,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"qualifiedName": "WebSocketLambdaAuthorizer",
																		"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
																		"name": "WebSocketLambdaAuthorizer"
																	}
																]
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																190481,
																190482
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 190464,
							"name": "createWebSocketApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190465,
									"name": "createWebSocketApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190466,
							"name": "createWebSocketStage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 377,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190467,
									"name": "createWebSocketStage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190449,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 337,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190450,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 190451,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190453,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 190454,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 190456,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190455,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 190457,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 190458,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 190460,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 190461,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 190462,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 190463,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													190462,
																													190463
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 190459,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "routeKey"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							190460,
																							190459
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		190456,
																		190455,
																		190457
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 190452,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "WebSocketApi"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														190453,
														190452
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 190439,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 294,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 190440,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `$connect`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst fn = api.getFunction(\"$connect\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190441,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 189419,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 190483,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 546,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190484,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190485,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 190487,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190488,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 190401,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 190402,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 190403,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								190404
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190416,
								190422,
								190409,
								190417,
								190486,
								190421,
								190423
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								190430,
								190426,
								190428,
								190424
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								190468,
								190470,
								190432,
								190442,
								190445,
								190475,
								190464,
								190466,
								190449,
								190439,
								190483,
								190487,
								190401
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 175,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 190396,
					"name": "WebSocketApiCdkStageProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190398,
							"name": "autoDeploy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether updates to an API automatically trigger a new deployment.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-apigatewayv2-alpha/lib/common/stage.d.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.autoDeploy"
							}
						},
						{
							"id": 190399,
							"name": "domainMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The options for custom domain and api mapping",
								"tags": [
									{
										"tag": "default",
										"text": "- no custom domain and api mapping configuration\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-apigatewayv2-alpha/lib/common/stage.d.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "DomainMappingOptions",
								"package": "@aws-cdk/aws-apigatewayv2-alpha",
								"name": "DomainMappingOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.domainMapping"
							}
						},
						{
							"id": 190397,
							"name": "stageName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 151,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190398,
								190399,
								190397
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 149,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "WebSocketStageProps",
									"package": "@aws-cdk/aws-apigatewayv2-alpha",
									"name": "apig.WebSocketStageProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "webSocketApi"
										},
										{
											"type": "literal",
											"value": "stageName"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 190388,
					"name": "WebSocketApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190393,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190394,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190395,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 145,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "WebSocketLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190395
											]
										}
									]
								}
							}
						},
						{
							"id": 190392,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 143,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 189419,
								"name": "Function"
							}
						},
						{
							"id": 190391,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 142,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 190390,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 141,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 190389,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 140,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190393,
								190392,
								190391,
								190390,
								190389
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 139,
							"character": 17
						}
					]
				},
				{
					"id": 190376,
					"name": "WebSocketApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 190382,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  accessLog: true\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  accessLog: {\n    retention: \"one_week\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 190384,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "reference",
										"id": 190388,
										"name": "WebSocketApiLambdaAuthorizer"
									}
								]
							}
						},
						{
							"id": 190377,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190378,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190379,
											"name": "webSocketApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created WebSocket API",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(props.stack, \"WebSocketApi\", {\n  cdk: {\n    webSocketApi: {\n      apiName: \"my-websocket-api\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 38,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IWebSocketApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IWebSocketApi"
													},
													{
														"type": "reference",
														"qualifiedName": "WebSocketApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "WebSocketApiProps"
													}
												]
											}
										},
										{
											"id": 190380,
											"name": "webSocketStage",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created WebSocket Stage",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(props.stack, \"WebSocketApi\", {\n  cdk: {\n    webSocketStage: {\n      autoDeploy: false\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IWebSocketStage",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IWebSocketStage"
													},
													{
														"type": "reference",
														"id": 190396,
														"name": "WebSocketApiCdkStageProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190379,
												190380
											]
										}
									]
								}
							}
						},
						{
							"id": 190383,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 112,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 190385,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 117,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 190386,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 190387,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 134,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 189349,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												190387
											]
										}
									]
								}
							}
						},
						{
							"id": 190381,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The routes for the Websocket API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  routes: {\n    $connect    : \"src/connect.main\",\n    $default    : \"src/default.main\",\n    $disconnect : \"src/disconnect.main\",\n    sendMessage : \"src/sendMessage.main\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 189348,
										"name": "FunctionDefinition"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								190382,
								190384,
								190377,
								190383,
								190385,
								190381
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						190400
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						190396,
						190388,
						190376
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/WebSocketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				188177,
				188370,
				188557,
				189971,
				188824,
				189257,
				188671,
				189609,
				189345,
				190141,
				190298,
				189821,
				189207,
				188720,
				190489,
				189167,
				189717,
				188963,
				189086,
				190235,
				190375
			]
		}
	]
}