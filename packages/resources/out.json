{
	"id": 258138,
	"name": "@serverless-stack/resources",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 258139,
			"name": "Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258223,
					"name": "Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Api construct is a higher level CDK construct that makes it easy to create an API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains.",
						"tags": [
							{
								"tag": "example",
								"text": "\nThe `Api` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Using the minimal config\n\n```ts\nimport { Api } from \"@serverless-stack/resources\";\n\nnew Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n    \"POST   /notes\": \"src/create.main\",\n    \"GET    /notes/{id}\": \"src/get.main\",\n    \"PUT    /notes/{id}\": \"src/update.main\",\n    \"DELETE /notes/{id}\": \"src/delete.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258227,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 430,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258228,
									"name": "new Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 258229,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 258230,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258231,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258232,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 258141,
												"typeArguments": [
													{
														"type": "reference",
														"id": 258229,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 258229,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258223,
										"typeArguments": [
											{
												"type": "reference",
												"id": 258229,
												"name": "Authorizers"
											}
										],
										"name": "Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258240,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 423,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258245,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 427,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IHttpRouteAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "IHttpRouteAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258233,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 404,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258234,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258236,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 412,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 258238,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 420,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 258237,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 416,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 258235,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 408,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258236,
												258238,
												258237,
												258235
											]
										}
									]
								}
							}
						},
						{
							"id": 258328,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258246,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 428,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 258239,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 422,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 258141,
								"typeArguments": [
									{
										"type": "reference",
										"id": 258229,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 258229,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiProps"
							}
						},
						{
							"id": 258241,
							"name": "routesData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 424,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258242,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 258243,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 258244,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 259080,
													"name": "Fn"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"qualifiedName": "IApplicationListener",
													"package": "aws-cdk-lib",
													"name": "elb.IApplicationListener"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 258249,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258250,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 258253,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 472,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258254,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258251,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258252,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 258247,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 447,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258248,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258288,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 681,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258289,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258290,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258229,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258291,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 761,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258292,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258293,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258294,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258295,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258163,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 258229,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258255,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 489,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258256,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created. Specify an object with the key being the route as a string and the value is either a [`FunctionDefinition`](Function.md#functiondefinition) or the [`ApiFunctionRouteProps`](#apifunctionrouteprops).",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258257,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258258,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 258163,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 258229,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258262,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 526,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258263,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258264,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258265,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 548,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258266,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258267,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258268,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258314,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 980,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258315,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258316,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 258165,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 258229,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiFunctionRouteProps"
													},
													{
														"type": "reference",
														"id": 258172,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 258229,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiHttpRouteProps"
													},
													{
														"type": "reference",
														"id": 258181,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 258229,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiAlbRouteProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 258317,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 258320,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 258318,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"none\""
														},
														{
															"id": 258319,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "HttpNoneAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "HttpNoneAuthorizer"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																258320,
																258318,
																258319
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 258321,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 258324,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 258322,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "user_pool"
																	},
																	{
																		"type": "literal",
																		"value": "jwt"
																	},
																	{
																		"type": "literal",
																		"value": "lambda"
																	}
																]
															}
														},
														{
															"id": 258323,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "IHttpRouteAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "IHttpRouteAuthorizer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																258324,
																258322,
																258323
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 258302,
							"name": "createAlbIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 894,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258303,
									"name": "createAlbIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258304,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258305,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258306,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258181,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 258229,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiAlbRouteProps"
											}
										},
										{
											"id": 258307,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 258308,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 915,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 258309,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258310,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258311,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258312,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258165,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 258229,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 258313,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 258286,
							"name": "createHttpApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 580,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258287,
									"name": "createHttpApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258296,
							"name": "createHttpIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 873,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258297,
									"name": "createHttpIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258298,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258299,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258300,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258172,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 258229,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiHttpRouteProps"
											}
										},
										{
											"id": 258301,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 258269,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 562,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258270,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258271,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258273,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258274,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258278,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258275,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "false"
																},
																{
																	"id": 258277,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258279,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 258280,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 258282,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 258283,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 258284,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 258285,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													258284,
																													258285
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 258281,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							258282,
																							258281
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258276,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258278,
																		258275,
																		258277,
																		258279,
																		258276
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258272,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258273,
														258272
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258259,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 512,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258260,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258261,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 258325,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 1015,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258326,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258327,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258329,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258330,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258224,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258225,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258226,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258227
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258240,
								258245,
								258233,
								258328,
								258246,
								258239,
								258241
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								258249,
								258253,
								258251,
								258247
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258288,
								258291,
								258255,
								258262,
								258265,
								258314,
								258302,
								258308,
								258286,
								258296,
								258269,
								258259,
								258325,
								258329,
								258224
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 398,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 258331,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 259825,
							"name": "GraphQLApi"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258181,
					"name": "ApiAlbRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to an ALB",
						"tags": [
							{
								"tag": "example",
								"text": "\nDOCTODO: Need to complete example\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"alb\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258188,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 258187,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 258189,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 258189,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 258183,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 317,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258184,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258185,
											"name": "albListener",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The listener to the application load balancer used for the integration."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 321,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IApplicationListener",
												"package": "aws-cdk-lib",
												"name": "IApplicationListener"
											}
										},
										{
											"id": 258186,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 322,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpAlbIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpAlbIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258185,
												258186
											]
										}
									]
								}
							}
						},
						{
							"id": 258182,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 316,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "alb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258188,
								258187,
								258183,
								258182
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 314,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 258189,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 258189,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 258165,
					"name": "ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258170,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 258169,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 258171,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 258171,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 258167,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition used to create the function for this route."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258168,
							"name": "payloadFormatVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The payload format version for the route.",
								"tags": [
									{
										"tag": "default",
										"text": "\"2.0\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 266,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "1.0"
									},
									{
										"type": "literal",
										"value": "2.0"
									}
								]
							}
						},
						{
							"id": 258166,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 256,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258170,
								258169,
								258167,
								258168,
								258166
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 254,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 258171,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 258171,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 258172,
					"name": "ApiHttpRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to another URL",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"url\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258179,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 258178,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 258180,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 258180,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 258175,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 292,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258176,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258177,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Override the underlying CDK integration"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 296,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUrlIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpUrlIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258177
											]
										}
									]
								}
							}
						},
						{
							"id": 258173,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is a constant"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 287,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "url"
							}
						},
						{
							"id": 258174,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL to forward to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258179,
								258178,
								258175,
								258173,
								258174
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 282,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 258180,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 258180,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 258202,
					"name": "ApiJwtAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258208,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 356,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258209,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258210,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpJwtAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpJwtAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258210
											]
										}
									]
								}
							}
						},
						{
							"id": 258212,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 258204,
							"name": "jwt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 352,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258205,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258207,
											"name": "audience",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 354,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 258206,
											"name": "issuer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 353,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258207,
												258206
											]
										}
									]
								}
							}
						},
						{
							"id": 258211,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 258203,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 351,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "jwt"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258208,
								258212,
								258204,
								258211,
								258203
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 350,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 258213,
					"name": "ApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258218,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 367,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258219,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258220,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 368,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258220
											]
										}
									]
								}
							}
						},
						{
							"id": 258215,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 364,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258222,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 258221,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 258216,
							"name": "responseTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 365,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "SIMPLE"
										},
										{
											"type": "literal",
											"value": "IAM"
										}
									]
								}
							}
						},
						{
							"id": 258217,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 366,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							}
						},
						{
							"id": 258214,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 363,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258218,
								258215,
								258222,
								258221,
								258216,
								258217,
								258214
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 362,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 258141,
					"name": "ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258148,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 258150,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258161,
								"name": "Authorizers"
							}
						},
						{
							"id": 258142,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258143,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258144,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 258145,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258144,
												258145
											]
										}
									]
								}
							}
						},
						{
							"id": 258147,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							}
						},
						{
							"id": 258149,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 258151,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure various defaults to be applied accross all routes"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258152,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258155,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 185,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 258154,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 258162,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 258162,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 258153,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n  routes: {\n    \"GET  /notes\": \"src/list.main\",\n    \"POST /notes\": \"src/create.main\",\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 174,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										},
										{
											"id": 258156,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 190,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 258157,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 191,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 258158,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 258159,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 206,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 258160,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 221,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																258159,
																258160
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258155,
												258154,
												258153,
												258156,
												258157
											]
										}
									]
								}
							}
						},
						{
							"id": 258146,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\n{\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 258163,
										"typeArguments": [
											{
												"type": "reference",
												"id": 258162,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258148,
								258150,
								258142,
								258147,
								258149,
								258151,
								258146
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 35,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 258161,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258162,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 258161,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 258190,
					"name": "ApiUserPoolAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258197,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 344,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258198,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258199,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 345,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUserPoolAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpUserPoolAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258199
											]
										}
									]
								}
							}
						},
						{
							"id": 258201,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 258200,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 258191,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 338,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pool"
							}
						},
						{
							"id": 258192,
							"name": "userPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 339,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258193,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258195,
											"name": "clientIds",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 341,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 258194,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 340,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258196,
											"name": "region",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258195,
												258194,
												258196
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258197,
								258201,
								258200,
								258191,
								258192
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 337,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 258140,
					"name": "ApiPayloadFormatVersion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "PayloadFormatVersions"
							}
						}
					}
				},
				{
					"id": 258163,
					"name": "ApiRouteProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 226,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 258164,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 259008,
								"name": "FunctionInlineDefinition"
							},
							{
								"type": "reference",
								"id": 258165,
								"typeArguments": [
									{
										"type": "reference",
										"id": 258164,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiFunctionRouteProps"
							},
							{
								"type": "reference",
								"id": 258172,
								"typeArguments": [
									{
										"type": "reference",
										"id": 258164,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiHttpRouteProps"
							},
							{
								"type": "reference",
								"id": 258181,
								"typeArguments": [
									{
										"type": "reference",
										"id": 258164,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiAlbRouteProps"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258223
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258181,
						258165,
						258172,
						258202,
						258213,
						258141,
						258190
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						258140,
						258163
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 260195,
			"name": "ApiGatewayV1Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 260271,
					"name": "ApiGatewayV1Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 260275,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 173,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 260276,
									"name": "new ApiGatewayV1Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 260277,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiGatewayV1ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 260278,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260279,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260280,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 260196,
												"typeArguments": [
													{
														"type": "reference",
														"id": 260277,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 260277,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 260271,
										"typeArguments": [
											{
												"type": "reference",
												"id": 260277,
												"name": "Authorizers"
											}
										],
										"name": "ApiGatewayV1Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 260288,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 166,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260287,
							"name": "_deployment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 165,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Deployment",
								"package": "aws-cdk-lib",
								"name": "Deployment"
							}
						},
						{
							"id": 260298,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 170,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IAuthorizer",
										"package": "aws-cdk-lib",
										"name": "IAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 260281,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 159,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260282,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260284,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 161,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 260286,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 163,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Certificate",
														"package": "aws-cdk-lib",
														"name": "Certificate"
													},
													{
														"type": "reference",
														"qualifiedName": "DnsValidatedCertificate",
														"package": "aws-cdk-lib",
														"name": "DnsValidatedCertificate"
													}
												]
											}
										},
										{
											"id": 260285,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 162,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "aws-cdk-lib",
												"name": "DomainName"
											}
										},
										{
											"id": 260283,
											"name": "restApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RestApi",
												"package": "aws-cdk-lib",
												"name": "RestApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260284,
												260286,
												260285,
												260283
											]
										}
									]
								}
							}
						},
						{
							"id": 260294,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 169,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260295,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 260296,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 260297,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 259080,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 260289,
							"name": "importedResources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 167,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260290,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 260291,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 260292,
												"name": "path",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "IResource",
											"package": "aws-cdk-lib",
											"name": "apig.IResource"
										}
									}
								}
							}
						},
						{
							"id": 260378,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 260299,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 171,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 260293,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 168,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 260196,
								"typeArguments": [
									{
										"type": "reference",
										"id": 260277,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 260277,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiGatewayV1ApiProps"
							}
						},
						{
							"id": 260302,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 196,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260303,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 260304,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 200,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260305,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 260300,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 192,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260301,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 260361,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 679,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260362,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260363,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 260277,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260364,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 763,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260365,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260366,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260367,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260368,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 260277,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 260306,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 204,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260307,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260308,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260309,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 260277,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiGatewayV1ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260375,
							"name": "assertDomainNameIsLowerCase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 898,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260376,
									"name": "assertDomainNameIsLowerCase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260377,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260313,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 223,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260314,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260315,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260332,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 247,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260333,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260334,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260335,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260338,
							"name": "buildCorsConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 371,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260339,
									"name": "buildCorsConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260340,
											"name": "cors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "CorsOptions",
												"package": "aws-cdk-lib",
												"name": "CorsOptions"
											}
										]
									}
								}
							]
						},
						{
							"id": 260369,
							"name": "buildRouteMethodOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 853,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260370,
									"name": "buildRouteMethodOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260371,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 260216,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 260277,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiFunctionRouteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "MethodOptions",
										"package": "aws-cdk-lib",
										"name": "MethodOptions"
									}
								}
							]
						},
						{
							"id": 260347,
							"name": "createARecords",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 613,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260348,
									"name": "createARecords",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260349,
											"name": "hostedZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										},
										{
											"id": 260350,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260351,
											"name": "apigDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IDomainName",
												"package": "aws-cdk-lib",
												"name": "IDomainName"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260344,
							"name": "createCustomDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 405,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260345,
									"name": "createCustomDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260346,
											"name": "customDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 260255,
														"name": "ApiGatewayV1ApiCustomDomainProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260341,
							"name": "createGatewayResponseForCors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 383,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260342,
									"name": "createGatewayResponseForCors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260343,
											"name": "cors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260336,
							"name": "createRestApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 261,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260337,
									"name": "createRestApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260316,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 230,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260317,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 260318,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 260320,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 260321,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 260322,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260324,
																	"name": "restApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260325,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 260326,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 260328,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 260329,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 260330,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 260331,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													260330,
																													260331
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 260327,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							260328,
																							260327
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260323,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		260322,
																		260324,
																		260325,
																		260323
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 260319,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "ApiGatewayV1Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														260320,
														260319
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 260310,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 219,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260311,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260312,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 260358,
							"name": "getResourceForPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 658,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260359,
									"name": "getResourceForPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260360,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IResource",
										"package": "aws-cdk-lib",
										"name": "IResource"
									}
								}
							]
						},
						{
							"id": 260352,
							"name": "importResources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 643,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260353,
									"name": "importResources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260354,
											"name": "resources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 260355,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 260356,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 260357,
																"name": "path",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260372,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 894,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260373,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260374,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 260379,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 260380,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 260272,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 260273,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260274,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								260275
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260288,
								260287,
								260298,
								260281,
								260294,
								260289,
								260378,
								260299,
								260293
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								260302,
								260304,
								260300
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								260361,
								260364,
								260306,
								260375,
								260313,
								260332,
								260338,
								260369,
								260347,
								260344,
								260341,
								260336,
								260316,
								260310,
								260358,
								260352,
								260372,
								260379,
								260272
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 150,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 260381,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiGatewayV1ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 260255,
					"name": "ApiGatewayV1ApiCustomDomainProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260266,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 139,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260267,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260270,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 142,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 260268,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 140,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IDomainName",
												"package": "aws-cdk-lib",
												"name": "IDomainName"
											}
										},
										{
											"id": 260269,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 141,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260270,
												260268,
												260269
											]
										}
									]
								}
							}
						},
						{
							"id": 260256,
							"name": "domainName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 129,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260259,
							"name": "endpointType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 132,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "edge"
									},
									{
										"type": "literal",
										"value": "regional"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						},
						{
							"id": 260257,
							"name": "hostedZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 130,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260260,
							"name": "mtls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260261,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260262,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 134,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 258942,
												"name": "Bucket"
											}
										},
										{
											"id": 260263,
											"name": "key",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 135,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260264,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260262,
												260263,
												260264
											]
										}
									]
								}
							}
						},
						{
							"id": 260258,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 131,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260265,
							"name": "securityPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 138,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "TLS 1.0"
									},
									{
										"type": "literal",
										"value": "TLS 1.2"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260266,
								260256,
								260259,
								260257,
								260260,
								260258,
								260265
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 128,
							"character": 17
						}
					]
				},
				{
					"id": 260216,
					"name": "ApiGatewayV1ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260219,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 260218,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 260224,
											"name": "AuthorizerKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 260224,
											"name": "AuthorizerKeys"
										}
									}
								]
							}
						},
						{
							"id": 260220,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260221,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260223,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 81,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaIntegrationOptions",
												"package": "aws-cdk-lib",
												"name": "LambdaIntegrationOptions"
											}
										},
										{
											"id": 260222,
											"name": "method",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 77,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "MethodOptions",
														"package": "aws-cdk-lib",
														"name": "MethodOptions"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "authorizationScopes"
															},
															{
																"type": "literal",
																"value": "authorizer"
															},
															{
																"type": "literal",
																"value": "authorizationType"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260223,
												260222
											]
										}
									]
								}
							}
						},
						{
							"id": 260217,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260219,
								260218,
								260220,
								260217
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 69,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 260224,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 260245,
					"name": "ApiGatewayV1ApiLambdaRequestAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260253,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 260249,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260250,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260251,
											"name": "assumeRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 123,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IRole",
												"package": "aws-cdk-lib",
												"name": "IRole"
											}
										},
										{
											"id": 260252,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 124,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "TokenAuthorizer",
												"package": "aws-cdk-lib",
												"name": "TokenAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260251,
												260252
											]
										}
									]
								}
							}
						},
						{
							"id": 260247,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 260248,
							"name": "identitySources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 260254,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 92,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 260246,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 119,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda_request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260253,
								260249,
								260247,
								260248,
								260254,
								260246
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 117,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 260234,
					"name": "ApiGatewayV1ApiLambdaTokenAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260243,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 260239,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 111,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260240,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260241,
											"name": "assumeRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IRole",
												"package": "aws-cdk-lib",
												"name": "IRole"
											}
										},
										{
											"id": 260242,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "TokenAuthorizer",
												"package": "aws-cdk-lib",
												"name": "TokenAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260241,
												260242
											]
										}
									]
								}
							}
						},
						{
							"id": 260236,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 260237,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260244,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 92,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 260235,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda_token"
							}
						},
						{
							"id": 260238,
							"name": "validationRegex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 110,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260243,
								260239,
								260236,
								260237,
								260244,
								260235,
								260238
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 105,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 260196,
					"name": "ApiGatewayV1ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260206,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 260208,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 54,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 260214,
								"name": "Authorizers"
							}
						},
						{
							"id": 260197,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 46,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260198,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260200,
											"name": "importedPaths",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 48,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 260201,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 260202,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 260203,
																"name": "path",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 260199,
											"name": "restApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 47,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IRestApi",
														"package": "aws-cdk-lib",
														"name": "IRestApi"
													},
													{
														"type": "reference",
														"qualifiedName": "RestApiProps",
														"package": "aws-cdk-lib",
														"name": "RestApiProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260200,
												260199
											]
										}
									]
								}
							}
						},
						{
							"id": 260205,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 260207,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 260255,
										"name": "ApiGatewayV1ApiCustomDomainProps"
									}
								]
							}
						},
						{
							"id": 260209,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260210,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260213,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 61,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 260212,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 260215,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 260215,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 260211,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 56,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260213,
												260212,
												260211
											]
										}
									]
								}
							}
						},
						{
							"id": 260204,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 50,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 260215,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiGatewayV1ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260206,
								260208,
								260197,
								260205,
								260207,
								260209,
								260204
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 39,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 260214,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiGatewayV1ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 260215,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 260214,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 260225,
					"name": "ApiGatewayV1ApiUserPoolsAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260232,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 260229,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260230,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260231,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 101,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CognitoUserPoolsAuthorizer",
												"package": "aws-cdk-lib",
												"name": "CognitoUserPoolsAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260231
											]
										}
									]
								}
							}
						},
						{
							"id": 260228,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260233,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 92,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 260226,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pools"
							}
						},
						{
							"id": 260227,
							"name": "userPoolIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260232,
								260229,
								260228,
								260233,
								260226,
								260227
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 95,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						260271
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						260255,
						260216,
						260245,
						260234,
						260196,
						260225
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259632,
			"name": "AppSyncApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259694,
					"name": "AppSyncApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 259698,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 308,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259699,
									"name": "new AppSyncApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259700,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259701,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259702,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259633,
												"name": "AppSyncApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259694,
										"name": "AppSyncApi"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 259703,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 293,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259704,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259705,
											"name": "graphqlApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created appsync api"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 297,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "GraphqlApi",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "GraphqlApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259705
											]
										}
									]
								}
							}
						},
						{
							"id": 259710,
							"name": "dataSourcesByDsKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 300,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259711,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259712,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259713,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "BaseDataSource",
											"package": "@aws-cdk/aws-appsync-alpha",
											"name": "appsync.BaseDataSource"
										}
									}
								}
							}
						},
						{
							"id": 259714,
							"name": "dsKeysByResKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 303,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259715,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259716,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259717,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 259706,
							"name": "functionsByDsKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 299,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259707,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259708,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259709,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 259080,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 259799,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 259722,
							"name": "permissionsAttachedForAllFunctions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 305,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 259723,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 306,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 259633,
								"name": "AppSyncApiProps"
							}
						},
						{
							"id": 259718,
							"name": "resolversByResKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 304,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259719,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259720,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259721,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "Resolver",
											"package": "@aws-cdk/aws-appsync-alpha",
											"name": "appsync.Resolver"
										}
									}
								}
							}
						},
						{
							"id": 259724,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 336,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259725,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259773,
							"name": "addDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 547,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259774,
									"name": "addDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259775,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259776,
											"name": "dsKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259777,
											"name": "dsValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 259642,
														"name": "AppSyncApiLambdaDataSourceProps"
													},
													{
														"type": "reference",
														"id": 259647,
														"name": "AppSyncApiDynamoDbDataSourceProps"
													},
													{
														"type": "reference",
														"id": 259657,
														"name": "AppSyncApiRdsDataSourceProps"
													},
													{
														"type": "reference",
														"id": 259670,
														"name": "AppSyncApiHttpDataSourceProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 259726,
							"name": "addDataSources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259727,
									"name": "addDataSources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add data sources after the construct has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addDataSources(props.stack, {\n  billingDS: \"src/billing.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259728,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259729,
											"name": "dataSources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259730,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 259731,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 259732,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 259008,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 259642,
																	"name": "AppSyncApiLambdaDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 259647,
																	"name": "AppSyncApiDynamoDbDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 259657,
																	"name": "AppSyncApiRdsDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 259670,
																	"name": "AppSyncApiHttpDataSourceProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259778,
							"name": "addResolver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 648,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259779,
									"name": "addResolver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259780,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259781,
											"name": "resKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259782,
											"name": "resValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 259680,
														"name": "AppSyncApiResolverProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 259733,
							"name": "addResolvers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 384,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259734,
									"name": "addResolvers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add resolvers the construct has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addResolvers(this, {\n  \"Mutation charge\": \"billingDS\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259735,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259736,
											"name": "resolvers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259737,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 259738,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 259739,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 259008,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 259680,
																	"name": "AppSyncApiResolverProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259764,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 476,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259765,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all function datasources",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259766,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259767,
							"name": "attachPermissionsToDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 490,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259768,
									"name": "attachPermissionsToDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific function datasource. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\napi.attachPermissionsToRoute(\"Mutation charge\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259769,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259770,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259795,
							"name": "buildDataSourceKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 799,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259796,
									"name": "buildDataSourceKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259797,
											"name": "typeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259798,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259792,
							"name": "buildMappingTemplate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 783,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259793,
									"name": "buildMappingTemplate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259794,
											"name": "mapping",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "MappingTemplate"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "MappingTemplate",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "MappingTemplate"
											}
										]
									}
								}
							]
						},
						{
							"id": 259771,
							"name": "createGraphApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 504,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259772,
									"name": "createGraphApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259740,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 403,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259741,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259742,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259744,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259745,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259747,
																	"name": "appSyncApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259748,
																	"name": "dataSources",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 259749,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 259751,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 259752,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 259753,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 259754,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													259753,
																													259754
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 259750,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							259751,
																							259750
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259746,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259747,
																		259748,
																		259746
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259743,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "AppSync"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259744,
														259743
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 259758,
							"name": "getDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259759,
									"name": "getDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a datasource by name",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.getDataSource(\"billingDS\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259760,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "BaseDataSource",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "BaseDataSource"
											}
										]
									}
								}
							]
						},
						{
							"id": 259755,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 425,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259756,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given resolver.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst func = api.getFunction(\"Mutation charge\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259757,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 259761,
							"name": "getResolver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 462,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259762,
									"name": "getResolver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a resolver",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.getResolver(\"Mutation charge\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259763,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Resolver",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "Resolver"
											}
										]
									}
								}
							]
						},
						{
							"id": 259786,
							"name": "isDataSourceResolverProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 774,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259787,
									"name": "isDataSourceResolverProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259788,
											"name": "object",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259680,
												"name": "AppSyncApiResolverProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 259783,
							"name": "isLambdaResolverProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 770,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259784,
									"name": "isLambdaResolverProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259785,
											"name": "object",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259680,
												"name": "AppSyncApiResolverProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 259789,
							"name": "normalizeResolverKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 778,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259790,
									"name": "normalizeResolverKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259791,
											"name": "resolverKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259800,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259801,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 259695,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259696,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259697,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259698
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259703,
								259710,
								259714,
								259706,
								259799,
								259722,
								259723,
								259718
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259724
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259773,
								259726,
								259778,
								259733,
								259764,
								259767,
								259795,
								259792,
								259771,
								259740,
								259758,
								259755,
								259761,
								259786,
								259783,
								259789,
								259800,
								259695
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 292,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 259688,
					"name": "AppSyncApiCdkGraphqlProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259691,
							"name": "authorizationConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Optional authorization configuration",
								"tags": [
									{
										"tag": "default",
										"text": "- API Key authorization\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 253,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AuthorizationConfig",
								"package": "@aws-cdk/aws-appsync-alpha",
								"name": "AuthorizationConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.authorizationConfig"
							}
						},
						{
							"id": 259692,
							"name": "logConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Logging configuration for this api",
								"tags": [
									{
										"tag": "default",
										"text": "- None\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 259,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogConfig",
								"package": "@aws-cdk/aws-appsync-alpha",
								"name": "LogConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logConfig"
							}
						},
						{
							"id": 259689,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 284,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259690,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 285,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"qualifiedName": "Schema",
										"package": "@aws-cdk/aws-appsync-alpha",
										"name": "Schema"
									}
								]
							}
						},
						{
							"id": 259693,
							"name": "xrayEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A flag indicating whether or not X-Ray tracing is enabled for the GraphQL API.",
								"tags": [
									{
										"tag": "default",
										"text": "- false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 274,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.xrayEnabled"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259691,
								259692,
								259689,
								259690,
								259693
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 282,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "GraphqlApiProps",
									"package": "@aws-cdk/aws-appsync-alpha",
									"name": "appsync.GraphqlApiProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "schema"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 259647,
					"name": "AppSyncApiDynamoDbDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    table: {\n      type: \"table\",\n      table: MyTable\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259650,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 161,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259651,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259652,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 162,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259653,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 259654,
															"name": "table",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 163,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "Table",
																"package": "aws-cdk-lib",
																"name": "Table"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																259654
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259652
											]
										}
									]
								}
							}
						},
						{
							"id": 259656,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 259655,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 259649,
							"name": "table",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target table"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 160,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258658,
								"name": "Table"
							}
						},
						{
							"id": 259648,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is a dynamodb table"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "dynamodb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259650,
								259656,
								259655,
								259649,
								259648
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 151,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 259670,
					"name": "AppSyncApiHttpDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define an http data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    http: {\n      type: \"http\",\n      endpoint: \"https://example.com\"\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259673,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 231,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259674,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259675,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259676,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 259677,
															"name": "authorizationConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 233,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "AwsIamConfig",
																"package": "@aws-cdk/aws-appsync-alpha",
																"name": "AwsIamConfig"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																259677
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259675
											]
										}
									]
								}
							}
						},
						{
							"id": 259679,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 259672,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "URL to forward requests to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259678,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 259671,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is an HTTP endpoint"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "http"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259673,
								259679,
								259672,
								259678,
								259671
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 221,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 259642,
					"name": "AppSyncApiLambdaDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    lambda: {\n      type: \"function\",\n      function: \"src/function.handler\"\n    },\n  },\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 259646,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 259644,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Function definition"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 259645,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 259643,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String literal to signify that this data source is a function"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 129,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259646,
								259644,
								259645,
								259643
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 124,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 259633,
					"name": "AppSyncApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259634,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259635,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259636,
											"name": "graphqlApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IGraphqlApi",
														"package": "@aws-cdk/aws-appsync-alpha",
														"name": "IGraphqlApi"
													},
													{
														"type": "reference",
														"id": 259688,
														"name": "AppSyncApiCdkGraphqlProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259636
											]
										}
									]
								}
							}
						},
						{
							"id": 259637,
							"name": "dataSources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define datasources. Can be a function, dynamodb table, rds cluster or http endpoint",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew AppSyncApi(this, \"GraphqlApi\", {\n  dataSources: {\n    notes: \"src/notes.main\",\n  },\n  resolvers: {\n    \"Query    listNotes\": \"notes\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 259008,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 259642,
												"name": "AppSyncApiLambdaDataSourceProps"
											},
											{
												"type": "reference",
												"id": 259647,
												"name": "AppSyncApiDynamoDbDataSourceProps"
											},
											{
												"type": "reference",
												"id": 259657,
												"name": "AppSyncApiRdsDataSourceProps"
											},
											{
												"type": "reference",
												"id": 259670,
												"name": "AppSyncApiHttpDataSourceProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 259639,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259640,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259641,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the AppSyncApi. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew AppSync(props.stack, \"AppSync\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 93,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259641
											]
										}
									]
								}
							}
						},
						{
							"id": 259638,
							"name": "resolvers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The resolvers for this API. Takes an object, with the key being the type name and field name as a string and the value is either a string with the name of existing data source.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew AppSyncApi(this, \"GraphqlApi\", {\n  resolvers: {\n    \"Query    listNotes\": \"src/list.main\",\n    \"Query    getNoteById\": \"src/get.main\",\n    \"Mutation createNote\": \"src/create.main\",\n    \"Mutation updateNote\": \"src/update.main\",\n    \"Mutation deleteNote\": \"src/delete.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 259008,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 259680,
												"name": "AppSyncApiResolverProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259634,
								259637,
								259639,
								259638
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 259657,
					"name": "AppSyncApiRdsDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    rds: {\n      type: \"rds\",\n      table: MyRDSCluster\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259661,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259662,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259663,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 198,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259664,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 259667,
															"name": "databaseName",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 201,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 259666,
															"name": "secretStore",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 200,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ISecret",
																"package": "aws-cdk-lib",
																"name": "ISecret"
															}
														},
														{
															"id": 259665,
															"name": "serverlessCluster",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "IServerlessCluster",
																"package": "aws-cdk-lib",
																"name": "IServerlessCluster"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																259667,
																259666,
																259665
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259663
											]
										}
									]
								}
							}
						},
						{
							"id": 259660,
							"name": "databaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the database to connect to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 196,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259669,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 259668,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 259659,
							"name": "rds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target RDS construct"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 192,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258408,
								"name": "RDS"
							}
						},
						{
							"id": 259658,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is an RDS database"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "rds"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259661,
								259660,
								259669,
								259668,
								259659,
								259658
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 183,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 259680,
					"name": "AppSyncApiResolverProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define full resolver config"
					},
					"children": [
						{
							"id": 259685,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259686,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259687,
											"name": "resolver",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 261,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ResolverProps",
														"package": "@aws-cdk/aws-appsync-alpha",
														"name": "ResolverProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "api"
															},
															{
																"type": "literal",
																"value": "fieldName"
															},
															{
																"type": "literal",
																"value": "typeName"
															},
															{
																"type": "literal",
																"value": "dataSource"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259687
											]
										}
									]
								}
							}
						},
						{
							"id": 259681,
							"name": "dataSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 245,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259682,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function to invoke for the resolver"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 259683,
							"name": "requestMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "VTL request mapping template\nDOCTODO: can probably use examples"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "MappingTemplate"
							}
						},
						{
							"id": 259684,
							"name": "responseMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "VTL response mapping template\nDOCTODO: can probably use examples"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "MappingTemplate"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259685,
								259681,
								259682,
								259683,
								259684
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 241,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259694
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259688,
						259647,
						259670,
						259642,
						259633,
						259657,
						259680
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/AppSyncApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258485,
			"name": "Auth",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258548,
					"name": "Auth",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Auth` construct is a higher level CDK construct that makes it easy to configure a [Cognito User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [Cognito Identity Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html). Also, allows setting up Auth0, Facebook, Google, Twitter, Apple, and Amazon as authentication providers."
					},
					"children": [
						{
							"id": 258552,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 121,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258553,
									"name": "new Auth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258554,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258555,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258556,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258486,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258548,
										"name": "Auth"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258557,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 110,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258558,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258562,
											"name": "authRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 114,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 258561,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										},
										{
											"id": 258563,
											"name": "unauthRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 115,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 258559,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPool",
												"package": "aws-cdk-lib",
												"name": "IUserPool"
											}
										},
										{
											"id": 258560,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPoolClient",
												"package": "aws-cdk-lib",
												"name": "IUserPoolClient"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258562,
												258561,
												258563,
												258559,
												258560
											]
										}
									]
								}
							}
						},
						{
							"id": 258565,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 118,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258566,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 258567,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 258568,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 259080,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 258621,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258569,
							"name": "permissionsAttachedForAllTriggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 258564,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 258486,
								"name": "AuthProps"
							}
						},
						{
							"id": 258570,
							"name": "cognitoIdentityPoolId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 317,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258571,
									"name": "cognitoIdentityPoolId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258609,
							"name": "addTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 411,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258610,
									"name": "addTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258611,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258612,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 258509,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 258613,
											"name": "triggerValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259009,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 258614,
											"name": "functionProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 258606,
							"name": "addTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258607,
									"name": "addTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258608,
											"name": "cognitoProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258499,
												"name": "AuthCognitoProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258572,
							"name": "attachPermissionsForAuthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 321,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258573,
									"name": "attachPermissionsForAuthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258574,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258581,
							"name": "attachPermissionsForTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 336,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258582,
									"name": "attachPermissionsForTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258583,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 258509,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 258584,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258578,
							"name": "attachPermissionsForTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 329,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258579,
									"name": "attachPermissionsForTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258580,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258575,
							"name": "attachPermissionsForUnauthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 325,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258576,
									"name": "attachPermissionsForUnauthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258577,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258603,
							"name": "checkDeprecatedProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 368,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258604,
									"name": "checkDeprecatedProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258605,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258486,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258615,
							"name": "createAuthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258616,
									"name": "createAuthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258617,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 258618,
							"name": "createUnauthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258619,
									"name": "createUnauthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258620,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 258588,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 354,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258589,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258590,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258592,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258593,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258594,
																	"name": "identityPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258596,
																	"name": "triggers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 258597,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 258599,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 258600,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 258601,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 258602,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													258601,
																													258602
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 258598,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							258599,
																							258598
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258595,
																	"name": "userPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258594,
																		258596,
																		258595
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258591,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Auth"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258592,
														258591
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258585,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258586,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258587,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 258509,
													"name": "AuthUserPoolTriggers"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 258622,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258623,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258549,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258550,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258551,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258552
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258557,
								258565,
								258621,
								258569,
								258564
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								258570
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258609,
								258606,
								258572,
								258581,
								258578,
								258575,
								258603,
								258615,
								258618,
								258588,
								258585,
								258622,
								258549
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 109,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258525,
					"name": "AuthAmazonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258526,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258526
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 76,
							"character": 17
						}
					]
				},
				{
					"id": 258527,
					"name": "AuthAppleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258528,
							"name": "servicesId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258528
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 80,
							"character": 17
						}
					]
				},
				{
					"id": 258522,
					"name": "AuthAuth0Props",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258524,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258523,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258524,
								258523
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 71,
							"character": 17
						}
					]
				},
				{
					"id": 258536,
					"name": "AuthCdkCfnIdentityPoolProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258538,
							"name": "allowClassicFlow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enables the Basic (Classic) authentication flow.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowClassicFlow"
							}
						},
						{
							"id": 258537,
							"name": "allowUnauthenticatedIdentities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 258539,
							"name": "cognitoEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The events to configure.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoEvents"
							}
						},
						{
							"id": 258540,
							"name": "cognitoIdentityProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Cognito user pools and their client IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"qualifiedName": "IResolvable",
													"package": "aws-cdk-lib",
													"name": "IResolvable"
												},
												{
													"type": "reference",
													"qualifiedName": "CfnIdentityPool.CognitoIdentityProviderProperty",
													"package": "aws-cdk-lib",
													"name": "CognitoIdentityProviderProperty"
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoIdentityProviders"
							}
						},
						{
							"id": 258541,
							"name": "cognitoStreams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Configuration options for configuring Amazon Cognito streams.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.CognitoStreamsProperty",
										"package": "aws-cdk-lib",
										"name": "CognitoStreamsProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoStreams"
							}
						},
						{
							"id": 258542,
							"name": "developerProviderName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The \"domain\" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 100\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.developerProviderName"
							}
						},
						{
							"id": 258543,
							"name": "identityPoolName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of your Amazon Cognito identity pool.",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.identityPoolName"
							}
						},
						{
							"id": 258544,
							"name": "openIdConnectProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the OpenID connect providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.openIdConnectProviderArns"
							}
						},
						{
							"id": 258545,
							"name": "pushSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The configuration options to be applied to the identity pool.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.PushSyncProperty",
										"package": "aws-cdk-lib",
										"name": "PushSyncProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.pushSync"
							}
						},
						{
							"id": 258546,
							"name": "samlProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.samlProviderArns"
							}
						},
						{
							"id": 258547,
							"name": "supportedLoginProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that map provider names to provider app IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 88,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.supportedLoginProviders"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258538,
								258537,
								258539,
								258540,
								258541,
								258542,
								258543,
								258544,
								258545,
								258546,
								258547
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 97,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "CfnIdentityPoolProps",
									"package": "aws-cdk-lib",
									"name": "cognito.CfnIdentityPoolProps"
								},
								{
									"type": "literal",
									"value": "allowUnauthenticatedIdentities"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 258499,
					"name": "AuthCognitoProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258500,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258501,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258502,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPool",
														"package": "aws-cdk-lib",
														"name": "IUserPool"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolProps",
														"package": "aws-cdk-lib",
														"name": "UserPoolProps"
													}
												]
											}
										},
										{
											"id": 258503,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 46,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPoolClient",
														"package": "aws-cdk-lib",
														"name": "IUserPoolClient"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolClientOptions",
														"package": "aws-cdk-lib",
														"name": "UserPoolClientOptions"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258502,
												258503
											]
										}
									]
								}
							}
						},
						{
							"id": 258504,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258505,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258506,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 49,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258506
											]
										}
									]
								}
							}
						},
						{
							"id": 258508,
							"name": "signInAliases",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SignInAliases",
								"package": "aws-cdk-lib",
								"name": "SignInAliases"
							}
						},
						{
							"id": 258507,
							"name": "triggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258509,
								"name": "AuthUserPoolTriggers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258500,
								258504,
								258508,
								258507
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 258529,
					"name": "AuthFacebookProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258530,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258530
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 84,
							"character": 17
						}
					]
				},
				{
					"id": 258531,
					"name": "AuthGoogleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258532,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258532
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 88,
							"character": 17
						}
					]
				},
				{
					"id": 258486,
					"name": "AuthProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258489,
							"name": "amazon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258525,
								"name": "AuthAmazonProps"
							}
						},
						{
							"id": 258490,
							"name": "apple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258527,
								"name": "AuthAppleProps"
							}
						},
						{
							"id": 258488,
							"name": "auth0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258522,
								"name": "AuthAuth0Props"
							}
						},
						{
							"id": 258494,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258495,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258496,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 36,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 258536,
												"name": "AuthCdkCfnIdentityPoolProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258496
											]
										}
									]
								}
							}
						},
						{
							"id": 258487,
							"name": "cognito",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 258499,
										"name": "AuthCognitoProps"
									}
								]
							}
						},
						{
							"id": 258497,
							"name": "cognitoUserPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPool",
								"package": "aws-cdk-lib",
								"name": "IUserPool"
							}
						},
						{
							"id": 258498,
							"name": "cognitoUserPoolClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPoolClient",
								"package": "aws-cdk-lib",
								"name": "IUserPoolClient"
							}
						},
						{
							"id": 258491,
							"name": "facebook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258529,
								"name": "AuthFacebookProps"
							}
						},
						{
							"id": 258492,
							"name": "google",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258531,
								"name": "AuthGoogleProps"
							}
						},
						{
							"id": 258493,
							"name": "twitter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258533,
								"name": "AuthTwitterProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258489,
								258490,
								258488,
								258494,
								258487,
								258497,
								258498,
								258491,
								258492,
								258493
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 258533,
					"name": "AuthTwitterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258534,
							"name": "consumerKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258535,
							"name": "consumerSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 94,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258534,
								258535
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 92,
							"character": 17
						}
					]
				},
				{
					"id": 258509,
					"name": "AuthUserPoolTriggers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258510,
							"name": "createAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258511,
							"name": "customEmailSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258512,
							"name": "customMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258513,
							"name": "customSmsSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258514,
							"name": "defineAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258515,
							"name": "postAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258516,
							"name": "postConfirmation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258517,
							"name": "preAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258518,
							"name": "preSignUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258519,
							"name": "preTokenGeneration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258520,
							"name": "userMigration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258521,
							"name": "verifyAuthChallengeResponse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258510,
								258511,
								258512,
								258513,
								258514,
								258515,
								258516,
								258517,
								258518,
								258519,
								258520,
								258521
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 56,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258548
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258525,
						258527,
						258522,
						258536,
						258499,
						258529,
						258531,
						258486,
						258533,
						258509
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Auth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258918,
			"name": "Bucket",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258942,
					"name": "Bucket",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Bucket` construct is a higher level CDK construct that makes it easy to create an S3 Bucket and to define its notifications. It also internally connects the notifications and bucket together.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Bucket } from \"@serverless-stack/resources\";\n\nnew Bucket(this, \"Bucket\");\n```\n\n### Removing the S3 Bucket\n\nOnly empty S3 buckets can be deleted. However, you can configure the bucket to automatically delete all objects upon removal.\n\n```js\nimport * as cdk from \"aws-cdk-lib\";\n\nnew Bucket(this, \"Bucket\", {\n  s3Bucket: {\n    autoDeleteObjects: true,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258946,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 198,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258947,
									"name": "new Bucket",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258948,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258949,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258950,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 258919,
												"name": "BucketProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258942,
										"name": "Bucket"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258951,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 188,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258952,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258953,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258953
											]
										}
									]
								}
							}
						},
						{
							"id": 259003,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258954,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 194,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 259080,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 258879,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 258766,
											"name": "Topic"
										}
									]
								}
							}
						},
						{
							"id": 258955,
							"name": "permissionsAttachedForAllNotifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 195,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 258956,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 196,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 258919,
								"name": "BucketProps"
							}
						},
						{
							"id": 258957,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258958,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258959,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258960,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258961,
							"name": "notificationFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 227,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258962,
									"name": "notificationFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created functions for the notifications."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 259080,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 258999,
							"name": "addFunctionNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 423,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259000,
									"name": "addFunctionNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259001,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259002,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258930,
														"name": "BucketFunctionNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258987,
							"name": "addNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 323,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258988,
									"name": "addNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258989,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258990,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 258766,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 258930,
														"name": "BucketFunctionNotificationProps"
													},
													{
														"type": "reference",
														"id": 258934,
														"name": "BucketQueueNotificationProps"
													},
													{
														"type": "reference",
														"id": 258938,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258963,
							"name": "addNotifications",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258964,
									"name": "addNotifications",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add notification subscriptions after the bucket has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst bucket = new Bucket(this, \"Bucket\");\nbucket.addNotifications(this, [\"src/notification.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258965,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258966,
											"name": "notifications",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 259008,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 258879,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 258766,
															"name": "Topic"
														},
														{
															"type": "reference",
															"id": 258930,
															"name": "BucketFunctionNotificationProps"
														},
														{
															"type": "reference",
															"id": 258934,
															"name": "BucketQueueNotificationProps"
														},
														{
															"type": "reference",
															"id": 258938,
															"name": "BucketTopicNotificationProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258991,
							"name": "addQueueNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 353,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258992,
									"name": "addQueueNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258993,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258994,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 258934,
														"name": "BucketQueueNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258995,
							"name": "addTopicNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258996,
									"name": "addTopicNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258997,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258998,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 258766,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 258938,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258967,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258968,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to all bucket notifications",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258969,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258970,
							"name": "attachPermissionsToNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 288,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258971,
									"name": "attachPermissionsToNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to a specific bucket notification",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258972,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 258973,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258985,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 311,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258986,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258974,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 301,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258975,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258976,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258978,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258979,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258980,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258981,
																	"name": "notifications",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 258982,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {},
																						"children": [
																							{
																								"id": 258983,
																								"name": "node",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "fn.node.addr"
																							},
																							{
																								"id": 258984,
																								"name": "stack",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "..."
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"kind": 1024,
																								"children": [
																									258983,
																									258984
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258980,
																		258981
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258977,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Bucket"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258978,
														258977
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 259004,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259005,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258943,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258944,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258945,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258946
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258951,
								259003,
								258954,
								258955,
								258956
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								258957,
								258959,
								258961
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258999,
								258987,
								258963,
								258991,
								258995,
								258967,
								258970,
								258985,
								258974,
								259004,
								258943
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 187,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258927,
					"name": "BucketFilter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258928,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key starts with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258929,
							"name": "suffix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key ends with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258928,
								258929
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 85,
							"character": 17
						}
					]
				},
				{
					"id": 258930,
					"name": "BucketFunctionNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [{\n    function: \"src/notification.main\",\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258932,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 258933,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 258927,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 258931,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258932,
								258933,
								258931
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 108,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 258919,
					"name": "BucketProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258924,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258925,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258926,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Allows you to override default settings this construct uses internally to ceate the bucket",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  cdk: {\n    bucket: {\n      bucketName: \"my-bucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Bucket",
														"package": "aws-cdk-lib",
														"name": "Bucket"
													},
													{
														"type": "reference",
														"qualifiedName": "BucketProps",
														"package": "aws-cdk-lib",
														"name": "BucketProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258926
											]
										}
									]
								}
							}
						},
						{
							"id": 258920,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258921,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258922,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258922
											]
										}
									]
								}
							}
						},
						{
							"id": 258923,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create notifications for various bucket events",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [\"src/notification.main\"],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 259008,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 258879,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 258766,
											"name": "Topic"
										},
										{
											"type": "reference",
											"id": 258930,
											"name": "BucketFunctionNotificationProps"
										},
										{
											"type": "reference",
											"id": 258934,
											"name": "BucketQueueNotificationProps"
										},
										{
											"type": "reference",
											"id": 258938,
											"name": "BucketTopicNotificationProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258924,
								258920,
								258923
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 258934,
					"name": "BucketQueueNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Queue(props.stack, \"Queue\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258936,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 258937,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 258927,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 258935,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258879,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258936,
								258937,
								258935
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 128,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 258938,
					"name": "BucketTopicNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a topic listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Topic(props.stack, \"Topic\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258940,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 258941,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 258927,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 258939,
							"name": "topic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The topic to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258766,
								"name": "Topic"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258940,
								258941,
								258939
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 148,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258942
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258927,
						258930,
						258919,
						258934,
						258938
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Bucket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258332,
			"name": "Cron",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258345,
					"name": "Cron",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Cron` construct is a higher level CDK construct that makes it easy to create a cron job. You can create a cron job by handler function and specifying the schedule it needs to run on. Internally this construct uses a [EventBridge Rule](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_events.Rule.html)."
					},
					"children": [
						{
							"id": 258349,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 135,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258350,
									"name": "new Cron",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258351,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258352,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258353,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258333,
												"name": "CronProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258345,
										"name": "Cron"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258354,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 123,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258355,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258356,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK EventBridge Rule instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 127,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258356
											]
										}
									]
								}
							}
						},
						{
							"id": 258357,
							"name": "jobFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created Function instance that'll be run on schedule."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258378,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258358,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 258333,
								"name": "CronProps"
							}
						},
						{
							"id": 258359,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 151,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258360,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of [permissions](../util/Permissions.md) to the `jobFunction`. This allows the function to access other AWS resources.",
										"text": "Internally calls [`Function.attachPermissions`](Function.md#attachpermissions).\n\n"
									},
									"parameters": [
										{
											"id": 258361,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258374,
							"name": "createEventsRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 167,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258375,
									"name": "createEventsRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258376,
							"name": "createRuleTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 197,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258377,
									"name": "createRuleTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 258362,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 155,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258363,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258364,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258366,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258367,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258370,
																	"name": "job",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 258371,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 258372,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 258373,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								258372,
																								258373
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258369,
																	"name": "ruleName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258368,
																	"name": "schedule",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "cfnRule.scheduleExpression"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258370,
																		258369,
																		258368
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258365,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Cron"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258366,
														258365
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258379,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258380,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258346,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258347,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258348,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258349
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258354,
								258357,
								258378,
								258358
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258359,
								258374,
								258376,
								258362,
								258379,
								258346
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 122,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258340,
					"name": "CronJobProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258342,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258343,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258344,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258344
											]
										}
									]
								}
							}
						},
						{
							"id": 258341,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function that will be executed when the job runs.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\n  new Cron(this, \"Cron\", {\n    job: {\n      function: \"src/lambda.main\",\n    },\n  });\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258342,
								258341
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 93,
							"character": 17
						}
					]
				},
				{
					"id": 258333,
					"name": "CronProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258334,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258335,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258337,
											"name": "cronOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created cron expression."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 23,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CronOptions",
												"package": "aws-cdk-lib",
												"name": "CronOptions"
											}
										},
										{
											"id": 258336,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RuleProps",
												"package": "aws-cdk-lib",
												"name": "RuleProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258337,
												258336
											]
										}
									]
								}
							}
						},
						{
							"id": 258338,
							"name": "job",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The definition of the function to be executed",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Cron(this, \"Cron\", {\n  function : \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 259008,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 258340,
										"name": "CronJobProps"
									}
								]
							}
						},
						{
							"id": 258339,
							"name": "schedule",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The schedule for the cron job. The string format takes a [rate expression](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents-expressions.html).",
								"text": "```\n\"rate(_Value Unit_)\"\n\n// For example, every 5 minutes\n\"rate(5 minutes)\"\n```\n\n```\n\"cron(Minutes Hours Day-of-month Month Day-of-week Year)\"\n\n// For example, 10:15 AM (UTC) every day\n\"cron(15 10 * * ? *)\"\n```\n\n```txt\n// Repeat every 5 minutes\n\n\"5 minutes\"\n\n// The equivalent rate expression\n\"rate(5 minutes)\"\n```\n\n```txt\n// 10:15 AM (UTC) every day\n\n// As cdk.aws-events.CronOptions\n{ minute: \"15\", hour: \"10\" }\n\n// The equivalent cron expression\n\"cron(15 10 * * ? *)\"\n```\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Cron } from \"@serverless-stack/resources\";\n\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"rate(1 minute)\",\n});\n```\n\n```js\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"cron(15 10 * * ? *)\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "rate(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "cron(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258334,
								258338,
								258339
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258345
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258340,
						258333
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Cron.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259270,
			"name": "EventBus",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259302,
					"name": "EventBus",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `EventBus` construct is a higher level CDK construct that makes it easy to create an [EventBridge Event Bus](https://aws.amazon.com/eventbridge/). You can create a bus that has a list of rules and targets. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of targets; Function targets (with a Lambda function) or Queue targets (with an SQS queue). See the [examples](#examples) for more details.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Using the minimal config\n\n```js\nimport { EventBus } from \"@serverless-stack/resources\";\n\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n```\n\nNote that, `rule1` here is simply a key to identify the rule.\n"
							}
						]
					},
					"children": [
						{
							"id": 259306,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 248,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259307,
									"name": "new EventBus",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259308,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259309,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259310,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259271,
												"name": "EventBusProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259302,
										"name": "EventBus"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 259311,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 238,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259312,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259313,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `EventBus` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IEventBus",
												"package": "aws-cdk-lib",
												"name": "IEventBus"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259313
											]
										}
									]
								}
							}
						},
						{
							"id": 259375,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 259318,
							"name": "permissionsAttachedForAllTargets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 245,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 259319,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 246,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 259271,
								"name": "EventBusProps"
							}
						},
						{
							"id": 259314,
							"name": "targetsData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 244,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259315,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259316,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259317,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259080,
														"name": "Fn"
													},
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													}
												]
											}
										}
									}
								}
							}
						},
						{
							"id": 259320,
							"name": "eventBusArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 263,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259321,
									"name": "eventBusArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259322,
							"name": "eventBusName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 270,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259323,
									"name": "eventBusName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259369,
							"name": "addFunctionTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 466,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259370,
									"name": "addFunctionTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259371,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259372,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259373,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 259374,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 259292,
														"name": "EventBusFunctionTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259363,
							"name": "addQueueTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 440,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259364,
									"name": "addQueueTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259365,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259366,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259367,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 259368,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 259297,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259352,
							"name": "addRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 385,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259353,
									"name": "addRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259354,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259355,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259356,
											"name": "rule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259279,
												"name": "EventBusRuleProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259324,
							"name": "addRules",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 287,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259325,
									"name": "addRules",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add rules after the EventBus has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nbus.addRules(this, {\n  rule2: {\n    eventPattern: { source: [\"myevent\"] },\n    targets: [\"src/target3.main\", \"src/target4.main\"],\n  },\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259326,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259327,
											"name": "rules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 259279,
														"name": "EventBusRuleProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259357,
							"name": "addTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 421,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259358,
									"name": "addTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259359,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259360,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259361,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 259362,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 259292,
														"name": "EventBusFunctionTargetProps"
													},
													{
														"type": "reference",
														"id": 259297,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259328,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 304,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259329,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to all event targets in this EventBus.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {10}\nbus.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259330,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259331,
							"name": "attachPermissionsToTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259332,
									"name": "attachPermissionsToTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to a specific event bus rule target",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {10}\nconst bus = new EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n\nbus.attachPermissionsToTarget(\"rule1\", 0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259333,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259334,
											"name": "targetIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 259335,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259350,
							"name": "createEventBus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 365,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259351,
									"name": "createEventBus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259336,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 352,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259337,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259338,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259340,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259341,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259342,
																	"name": "eventBusName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259343,
																	"name": "rules",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 259344,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 259345,
																						"name": "key",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					},
																					{
																						"id": 259346,
																						"name": "targets",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "reflection",
																										"declaration": {
																											"id": 259347,
																											"name": "__type",
																											"kind": 65536,
																											"kindString": "Type literal",
																											"flags": {},
																											"children": [
																												{
																													"id": 259348,
																													"name": "node",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "fn.node.addr"
																												},
																												{
																													"id": 259349,
																													"name": "stack",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "..."
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"kind": 1024,
																													"children": [
																														259348,
																														259349
																													]
																												}
																											]
																										}
																									}
																								]
																							}
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							259345,
																							259346
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259342,
																		259343
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259339,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "EventBus"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259340,
														259339
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 259376,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259377,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 259303,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259304,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259305,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259306
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259311,
								259375,
								259318,
								259319,
								259314
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259320,
								259322
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259369,
								259363,
								259352,
								259324,
								259357,
								259328,
								259331,
								259350,
								259336,
								259376,
								259303
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 237,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 259292,
					"name": "EventBusFunctionTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus function target"
					},
					"children": [
						{
							"id": 259294,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 181,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259295,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259296,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 182,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259296
											]
										}
									]
								}
							}
						},
						{
							"id": 259293,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to trigger",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        { function: \"src/function.handler\" },\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 180,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259294,
								259293
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 163,
							"character": 17
						}
					]
				},
				{
					"id": 259271,
					"name": "EventBusProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259276,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259277,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259278,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created EventBus",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  cdk: {\n    eventBus: {\n      eventBusName: \"MyEventBus\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IEventBus",
														"package": "aws-cdk-lib",
														"name": "IEventBus"
													},
													{
														"type": "reference",
														"qualifiedName": "EventBusProps",
														"package": "aws-cdk-lib",
														"name": "EventBusProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259278
											]
										}
									]
								}
							}
						},
						{
							"id": 259272,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259273,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259274,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the EventBus. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259274
											]
										}
									]
								}
							}
						},
						{
							"id": 259275,
							"name": "rules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The rules for the eventbus",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {5}\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\"],\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 259279,
										"name": "EventBusRuleProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259276,
								259272,
								259275
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 259297,
					"name": "EventBusQueueTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259299,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259300,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259301,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 205,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsQueueProps",
												"package": "aws-cdk-lib",
												"name": "SqsQueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259301
											]
										}
									]
								}
							}
						},
						{
							"id": 259298,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to trigger",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        { queue: new sst.Queue(props.stack, \"Queue\") },\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258879,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259299,
								259298
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 186,
							"character": 17
						}
					]
				},
				{
					"id": 259279,
					"name": "EventBusRuleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus rule"
					},
					"children": [
						{
							"id": 259289,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 145,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259290,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259291,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Rule` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js {4}\nnew EventBus(this, \"Bus\", {\n  DOCTODO\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 156,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "RuleProps",
														"package": "aws-cdk-lib",
														"name": "RuleProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "eventBus"
															},
															{
																"type": "literal",
																"value": "targets"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259291
											]
										}
									]
								}
							}
						},
						{
							"id": 259280,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259281,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259283,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Fields to match on the detail field",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detail: { FOO: 1 }  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 105,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259284,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 259285,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 259286,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 259287,
											"name": "detailType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of detailTypes to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detailTypes: [\"foo\"]  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 120,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 259282,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of sources to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259283,
												259287,
												259282
											]
										}
									]
								}
							}
						},
						{
							"id": 259288,
							"name": "targets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure targets for this rule. Can be a function or queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        \"src/function.handler\",\n        new Queue(props.stack, \"MyQueue\"),\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 139,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 259008,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 258879,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 259292,
											"name": "EventBusFunctionTargetProps"
										},
										{
											"type": "reference",
											"id": 259297,
											"name": "EventBusQueueTargetProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259289,
								259280,
								259288
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 74,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259302
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259292,
						259271,
						259297,
						259279
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/EventBus.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259006,
			"name": "Function",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259080,
					"name": "Function",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A construct for a Lambda Function that allows you to [develop your it locally](live-lambda-development.md). Supports JS, TypeScript, Python, Golang, and C#. It also applies a couple of defaults:",
						"text": "- Sets the default memory setting to 1024MB.\n- Sets the default Lambda function timeout to 10 seconds.\n- [Enables AWS X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-tracing.html) by default so you can trace your serverless applications.\n- `AWS_NODEJS_CONNECTION_REUSE_ENABLED` is turned on. Meaning that the Lambda function will automatically reuse TCP connections when working with the AWS SDK. [Read more about this here](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/node-reusing-connections.html).\n- Sets the `IS_LOCAL` environment variable for the Lambda function when it is invoked locally through the `sst start` command.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Creating a Function\n\n```js\nimport { Function } from \"@serverless-stack/resources\";\n\nnew Function(this, \"MySnsLambda\", {\n  handler: \"src/sns/index.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259158,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 444,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259159,
									"name": "new Function",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259160,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259161,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259162,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									},
									"overwrites": {
										"type": "reference",
										"name": "lambda.Function.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "lambda.Function.constructor"
							}
						},
						{
							"id": 259202,
							"name": "_connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Actual connections object for this Lambda",
								"text": "May be unset, in which case this Lambda is not configured use in a VPC.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 215,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Connections",
								"package": "aws-cdk-lib",
								"name": "Connections"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._connections"
							}
						},
						{
							"id": 259203,
							"name": "_invocationGrants",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Mapping of invocation principals to grants. Used to de-dupe `grantInvoke()` calls.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 221,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._invocationGrants"
							}
						},
						{
							"id": 259163,
							"name": "_isLiveDevEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 441,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259201,
							"name": "_skipPermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether the user decides to skip adding permissions.\nThe only use case is for cross-account, imported lambdas\nwhere the user commits to modifying the permisssions\non the imported lambda outside CDK.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 208,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._skipPermissions"
							}
						},
						{
							"id": 259185,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 434,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.architecture"
							}
						},
						{
							"id": 259188,
							"name": "canCreatePermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 440,
									"character": 23
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.canCreatePermissions"
							}
						},
						{
							"id": 259183,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 426,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterQueue"
							}
						},
						{
							"id": 259184,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 430,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterTopic"
							}
						},
						{
							"id": 259251,
							"name": "env",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 108,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ResourceEnvironment",
								"package": "aws-cdk-lib",
								"name": "ResourceEnvironment"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.env"
							}
						},
						{
							"id": 259179,
							"name": "functionArn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "ARN of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 410,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionArn"
							}
						},
						{
							"id": 259178,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 406,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionName"
							}
						},
						{
							"id": 259182,
							"name": "grantPrincipal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The principal this Lambda Function is running as"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 422,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IPrincipal",
								"package": "aws-cdk-lib",
								"name": "IPrincipal"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantPrincipal"
							}
						},
						{
							"id": 259164,
							"name": "localId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 442,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259267,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.node"
							}
						},
						{
							"id": 259187,
							"name": "permissionsNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 439,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.permissionsNode"
							}
						},
						{
							"id": 259252,
							"name": "physicalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns a string-encoded token that resolves to the physical name that\nshould be passed to the CloudFormation resource.",
								"text": "This value will resolve to one of the following:\n- a concrete value (e.g. `\"my-awesome-bucket\"`)\n- `undefined`, when a name should be generated by CloudFormation\n- a concrete name generated automatically during synthesis, in\n  cross-environment scenarios.\n\n"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 120,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.physicalName"
							}
						},
						{
							"id": 259180,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Execution role associated with this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 414,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.role"
							}
						},
						{
							"id": 259181,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The runtime configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 418,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Runtime",
								"package": "aws-cdk-lib",
								"name": "Runtime"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.runtime"
							}
						},
						{
							"id": 259250,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 107,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Stack",
								"package": "aws-cdk-lib",
								"name": "Stack"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.stack"
							}
						},
						{
							"id": 259186,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The timeout configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 438,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.timeout"
							}
						},
						{
							"id": 259107,
							"name": "_VER_PROPS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 335,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259108,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259109,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259110,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._VER_PROPS"
							}
						},
						{
							"id": 259211,
							"name": "connections",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 237,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 259212,
									"name": "connections",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Access the Connections object",
										"text": "Will fail if not a VPC-enabled Lambda Function\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Connections",
										"package": "aws-cdk-lib",
										"name": "Connections"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.connections"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.connections"
							}
						},
						{
							"id": 259176,
							"name": "currentVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 333,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 259177,
									"name": "currentVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a `lambda.Version` which represents the current version of this\nLambda function. A new version will be created every time the function's\nconfiguration changes.",
										"text": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Version",
										"package": "aws-cdk-lib",
										"name": "Version"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.currentVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.currentVersion"
							}
						},
						{
							"id": 259215,
							"name": "isBoundToVpc",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 244,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 259216,
									"name": "isBoundToVpc",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Whether or not this Lambda function was bound to a VPC",
										"text": "If this is is `false`, trying to access the `connections` object will fail.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isBoundToVpc"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isBoundToVpc"
							}
						},
						{
							"id": 259213,
							"name": "latestVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 238,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 259214,
									"name": "latestVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.latestVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.latestVersion"
							}
						},
						{
							"id": 259197,
							"name": "logGroup",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 477,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 259198,
									"name": "logGroup",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The LogGroup where the Lambda function's logs are made available.",
										"text": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ILogGroup",
										"package": "aws-cdk-lib",
										"name": "ILogGroup"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.logGroup"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.logGroup"
							}
						},
						{
							"id": 259199,
							"name": "_checkEdgeCompatibility",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 479,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259200,
									"name": "_checkEdgeCompatibility",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "internal",
												"text": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._checkEdgeCompatibility"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._checkEdgeCompatibility"
							}
						},
						{
							"id": 259253,
							"name": "_enableCrossEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259254,
									"name": "_enableCrossEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Called when this resource is referenced across environments\n(account/region) to order to request that a physical name will be generated\nfor this resource during synthesis, so the resource can be referenced\nthrough it's absolute name/arn.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._enableCrossEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._enableCrossEnvironment"
							}
						},
						{
							"id": 259230,
							"name": "_functionNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 257,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 259231,
									"name": "_functionNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns the construct tree node that corresponds to the lambda function.\nFor use internally for constructs, when the tree is set up in non-standard ways. Ex: SingletonFunction.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Node",
										"package": "constructs",
										"name": "Node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._functionNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._functionNode"
							}
						},
						{
							"id": 259232,
							"name": "_isStackAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 272,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 259233,
									"name": "_isStackAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Given the function arn, check if the account id matches this account",
										"text": "Function ARNs look like this:\n\n  arn:aws:lambda:region:account-id:function:function-name\n\n..which means that in order to extract the `account-id` component from the ARN, we can\nsplit the ARN using \":\" and select the component in index 4.\n",
										"returns": "true if account id of function matches the account specified on the stack, false otherwise.\n",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._isStackAccount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._isStackAccount"
							}
						},
						{
							"id": 259189,
							"name": "addEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 458,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259190,
									"name": "addEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds an environment variable to this Lambda function.\nIf this is a ref to a Lambda function, this operation results in a no-op."
									},
									"parameters": [
										{
											"id": 259191,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable key."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259192,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable's value."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259193,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Environment variable options.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EnvironmentOptions",
												"package": "aws-cdk-lib",
												"name": "EnvironmentOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEnvironment"
							}
						},
						{
							"id": 259224,
							"name": "addEventSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259225,
									"name": "addEventSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 259226,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IEventSource",
												"package": "aws-cdk-lib",
												"name": "IEventSource"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSource"
							}
						},
						{
							"id": 259217,
							"name": "addEventSourceMapping",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 245,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259218,
									"name": "addEventSourceMapping",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 259219,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259220,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventSourceMappingOptions",
												"package": "aws-cdk-lib",
												"name": "EventSourceMappingOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "EventSourceMapping",
										"package": "aws-cdk-lib",
										"name": "EventSourceMapping"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSourceMapping"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSourceMapping"
							}
						},
						{
							"id": 259194,
							"name": "addLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 466,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259195,
									"name": "addLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds one or more Lambda Layers to this Lambda function.",
										"tags": [
											{
												"tag": "throws",
												"text": "if there are already 5 layers on this function, or the layer is incompatible with this function's runtime.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259196,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "the layers to be added.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addLayers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addLayers"
							}
						},
						{
							"id": 259204,
							"name": "addPermission",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 227,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259205,
									"name": "addPermission",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a permission to the Lambda resource policy."
									},
									"parameters": [
										{
											"id": 259206,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The id for the permission construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259207,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The permission to grant to this Lambda function. @see Permission for details.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Permission",
												"package": "aws-cdk-lib",
												"name": "Permission"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addPermission"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addPermission"
							}
						},
						{
							"id": 259208,
							"name": "addToRolePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259209,
									"name": "addToRolePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a statement to the IAM role assumed by the instance."
									},
									"parameters": [
										{
											"id": 259210,
											"name": "statement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "PolicyStatement",
												"package": "aws-cdk-lib",
												"name": "PolicyStatement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addToRolePolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addToRolePolicy"
							}
						},
						{
							"id": 259255,
							"name": "applyRemovalPolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259256,
									"name": "applyRemovalPolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Apply the given removal policy to this resource",
										"text": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).\n"
									},
									"parameters": [
										{
											"id": 259257,
											"name": "policy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RemovalPolicy",
												"package": "aws-cdk-lib",
												"name": "RemovalPolicy"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.applyRemovalPolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.applyRemovalPolicy"
							}
						},
						{
							"id": 259165,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 687,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259166,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nfn.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259167,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259227,
							"name": "configureAsyncInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259228,
									"name": "configureAsyncInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 259229,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventInvokeConfigOptions",
												"package": "aws-cdk-lib",
												"name": "EventInvokeConfigOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.configureAsyncInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.configureAsyncInvoke"
							}
						},
						{
							"id": 259258,
							"name": "generatePhysicalName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 145,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 259259,
									"name": "generatePhysicalName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.generatePhysicalName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.generatePhysicalName"
							}
						},
						{
							"id": 259168,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 693,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259169,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259170,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259172,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259173,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259175,
																	"name": "arn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259174,
																	"name": "localId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259175,
																		259174
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259171,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Function"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259172,
														259171
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 259263,
							"name": "getResourceArnAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 175,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 259264,
									"name": "getResourceArnAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
										"text": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.\n"
									},
									"parameters": [
										{
											"id": 259265,
											"name": "arnAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the ARN of the resource.\nCommonly it will be called \"Arn\" (e.g. `resource.attrArn`), but sometimes\nit's the CFN resource's `ref`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259266,
											"name": "arnComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The format of the ARN of this resource. You must\nreference `this.physicalName` somewhere within the ARN in order for\ncross-environment references to work.\n\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "ArnComponents",
												"package": "aws-cdk-lib",
												"name": "ArnComponents"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceArnAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceArnAttribute"
							}
						},
						{
							"id": 259260,
							"name": "getResourceNameAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 157,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 259261,
									"name": "getResourceNameAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"name\" attribute (e.g. `bucket.bucketName`).",
										"text": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.\n"
									},
									"parameters": [
										{
											"id": 259262,
											"name": "nameAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the resource's name.\nCommonly this is the resource's `ref`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceNameAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceNameAttribute"
							}
						},
						{
							"id": 259221,
							"name": "grantInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259222,
									"name": "grantInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Grant the given identity permissions to invoke this Lambda"
									},
									"parameters": [
										{
											"id": 259223,
											"name": "grantee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IGrantable",
												"package": "aws-cdk-lib",
												"name": "IGrantable"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.grantInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantInvoke"
							}
						},
						{
							"id": 259234,
							"name": "metric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 259235,
									"name": "metric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Function"
									},
									"parameters": [
										{
											"id": 259236,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259237,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metric"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metric"
							}
						},
						{
							"id": 259247,
							"name": "metricDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 259248,
									"name": "metricDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How long execution of this Lambda takes",
										"text": "Average over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 259249,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricDuration"
							}
						},
						{
							"id": 259244,
							"name": "metricErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 259245,
									"name": "metricErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How many invocations of this Lambda fail",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 259246,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricErrors"
							}
						},
						{
							"id": 259241,
							"name": "metricInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 259242,
									"name": "metricInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is invoked",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 259243,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricInvocations"
							}
						},
						{
							"id": 259238,
							"name": "metricThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 259239,
									"name": "metricThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is throttled",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 259240,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricThrottles"
							}
						},
						{
							"id": 259268,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259269,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.toString"
							}
						},
						{
							"id": 259111,
							"name": "classifyVersionProperty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 345,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259112,
									"name": "classifyVersionProperty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Record whether specific properties in the `AWS::Lambda::Function` resource should\nalso be associated to the Version resource.\nSee 'currentVersion' section in the module README for more details."
									},
									"parameters": [
										{
											"id": 259113,
											"name": "propertyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The property to classify"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259114,
											"name": "locked",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "whether the property should be associated to the version or not.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.classifyVersionProperty"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.classifyVersionProperty"
							}
						},
						{
							"id": 259084,
							"name": "copyFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 707,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259085,
									"name": "copyFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259086,
											"name": "bundle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 259060,
														"name": "FunctionBundleProp"
													}
												]
											}
										},
										{
											"id": 259087,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259088,
											"name": "buildPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259096,
							"name": "fromDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 784,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259097,
									"name": "fromDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259098,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259099,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259100,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259009,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 259101,
											"name": "inheritedProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										},
										{
											"id": 259102,
											"name": "inheritErrorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 259120,
							"name": "fromFunctionArn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 353,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259121,
									"name": "fromFunctionArn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its ARN"
									},
									"parameters": [
										{
											"id": 259122,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259123,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259124,
											"name": "functionArn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionArn"
							}
						},
						{
							"id": 259125,
							"name": "fromFunctionAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 362,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259126,
									"name": "fromFunctionAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Creates a Lambda function object which represents a function not defined\nwithin this stack."
									},
									"parameters": [
										{
											"id": 259127,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The parent construct"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259128,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The name of the lambda construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259129,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "the attributes of the function to import\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "FunctionAttributes",
												"package": "aws-cdk-lib",
												"name": "FunctionAttributes"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionAttributes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionAttributes"
							}
						},
						{
							"id": 259115,
							"name": "fromFunctionName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 349,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259116,
									"name": "fromFunctionName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its name"
									},
									"parameters": [
										{
											"id": 259117,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259118,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259119,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionName"
							}
						},
						{
							"id": 259089,
							"name": "handleImportedLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 732,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259090,
									"name": "handleImportedLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259091,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259092,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "ILayerVersion",
											"package": "aws-cdk-lib",
											"name": "ILayerVersion"
										}
									}
								}
							]
						},
						{
							"id": 259155,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259156,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259157,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isConstruct"
							}
						},
						{
							"id": 259093,
							"name": "isInlineDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 778,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259094,
									"name": "isInlineDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259095,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "definition",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 259008,
											"name": "FunctionInlineDefinition"
										}
									}
								}
							]
						},
						{
							"id": 259152,
							"name": "isResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 106,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259153,
									"name": "isResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Check whether the given construct is a Resource"
									},
									"parameters": [
										{
											"id": 259154,
											"name": "construct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "construct",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "CfnResource",
											"package": "aws-cdk-lib",
											"name": "CfnResource"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isResource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isResource"
							}
						},
						{
							"id": 259103,
							"name": "mergeProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 818,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259104,
									"name": "mergeProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259105,
											"name": "baseProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										},
										{
											"id": 259106,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259010,
										"name": "FunctionProps"
									}
								}
							]
						},
						{
							"id": 259130,
							"name": "metricAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259131,
									"name": "metricAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Lambda"
									},
									"parameters": [
										{
											"id": 259132,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259133,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAll"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAll"
							}
						},
						{
							"id": 259146,
							"name": "metricAllConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 396,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259147,
									"name": "metricAllConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259148,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllConcurrentExecutions"
							}
						},
						{
							"id": 259137,
							"name": "metricAllDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 378,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259138,
									"name": "metricAllDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the Duration executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "average over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259139,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllDuration"
							}
						},
						{
							"id": 259134,
							"name": "metricAllErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 372,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259135,
									"name": "metricAllErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of Errors executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259136,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllErrors"
							}
						},
						{
							"id": 259140,
							"name": "metricAllInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 384,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259141,
									"name": "metricAllInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259142,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllInvocations"
							}
						},
						{
							"id": 259143,
							"name": "metricAllThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 390,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259144,
									"name": "metricAllThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of throttled invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259145,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllThrottles"
							}
						},
						{
							"id": 259149,
							"name": "metricAllUnreservedConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 402,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259150,
									"name": "metricAllUnreservedConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of unreserved concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259151,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
							}
						},
						{
							"id": 259081,
							"name": "normalizeSrcPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 703,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259082,
									"name": "normalizeSrcPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259083,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259158
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259202,
								259203,
								259163,
								259201,
								259185,
								259188,
								259183,
								259184,
								259251,
								259179,
								259178,
								259182,
								259164,
								259267,
								259187,
								259252,
								259180,
								259181,
								259250,
								259186,
								259107
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259211,
								259176,
								259215,
								259213,
								259197
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259199,
								259253,
								259230,
								259232,
								259189,
								259224,
								259217,
								259194,
								259204,
								259208,
								259255,
								259165,
								259227,
								259258,
								259168,
								259263,
								259260,
								259221,
								259234,
								259247,
								259244,
								259241,
								259238,
								259268,
								259111,
								259084,
								259096,
								259120,
								259125,
								259115,
								259089,
								259155,
								259093,
								259152,
								259103,
								259130,
								259146,
								259137,
								259134,
								259140,
								259143,
								259149,
								259081
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 440,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "aws-cdk-lib",
							"name": "Function"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 259077,
					"name": "FunctionBundleCopyFilesProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure additional files to copy into the function bundle",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259078,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Source path relative to sst.json"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 412,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259079,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Destination path relative to function root in bundle"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 416,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259078,
								259079
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 408,
							"character": 17
						}
					]
				},
				{
					"id": 259061,
					"name": "FunctionBundleNodejsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure NodeJS bundling options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n   format: \"esm\",\n   minify: false\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259065,
							"name": "commandHooks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Hooks to run at various stages of bundling"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 308,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICommandHooks",
								"package": "aws-cdk-lib",
								"name": "ICommandHooks"
							}
						},
						{
							"id": 259073,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 259077,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 259066,
							"name": "esbuildConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override esbuild specific settings"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 312,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259067,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259068,
											"name": "define",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Replace global identifiers with constant expressions.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      define: DOCTODO\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 327,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 259069,
											"name": "keepNames",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When minifying preserve names of functions and variables",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      keepNames: true\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 259070,
											"name": "plugins",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Path to plugin file to load esbuild plugins",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      plugins: \"path/to/plugins.js\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259068,
												259069,
												259070
											]
										}
									]
								}
							}
						},
						{
							"id": 259063,
							"name": "externalModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will not be included in the bundle. Usually used to exclude dependencies that are provided in layers",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    external: [\"prisma\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 259072,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure bundle format",
								"tags": [
									{
										"tag": "default",
										"text": "\"cjs\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    format: \"esm\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 388,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cjs"
									},
									{
										"type": "literal",
										"value": "esm"
									}
								]
							}
						},
						{
							"id": 259062,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure additional esbuild loaders for other file extensions",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    loader: {\n     \".png\": \"file\"\n    }\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 278,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Loader",
										"package": "esbuild",
										"name": "Loader"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 259071,
							"name": "minify",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable minification",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    minify: false\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 373,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259064,
							"name": "nodeModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will be excluded from the bundle and installed into node_modules instead. Useful for dependencies that cannot be bundled, like those with binary dependencies.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    nodeModules: [\"pg\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 304,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259065,
								259073,
								259066,
								259063,
								259072,
								259062,
								259071,
								259064
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 263,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 259074,
					"name": "FunctionBundlePythonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259076,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 259077,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 259075,
							"name": "installCommands",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 393,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259076,
								259075
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 392,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 259057,
					"name": "FunctionNameProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259059,
							"name": "functionProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function properties"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 219,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259010,
								"name": "FunctionProps"
							}
						},
						{
							"id": 259058,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The stack the function is being created in"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259059,
								259058
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 211,
							"character": 17
						}
					]
				},
				{
					"id": 259010,
					"name": "FunctionProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259035,
							"name": "allowAllOutbound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to allow the Lambda to send all network traffic",
								"text": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 147,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowAllOutbound"
							}
						},
						{
							"id": 259049,
							"name": "allowPublicSubnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda Functions in a public subnet can NOT access the internet.\nUse this property to acknowledge this limitation and still place the function in a public subnet.",
								"tags": [
									{
										"tag": "see",
										"text": "https://stackoverflow.com/questions/52992085/why-cant-an-aws-lambda-function-inside-a-public-subnet-in-a-vpc-connect-to-the/52994841#52994841\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 265,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowPublicSubnet"
							}
						},
						{
							"id": 259052,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The system architectures compatible with this lambda function.",
								"tags": [
									{
										"tag": "default",
										"text": "Architecture.X86_64\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 282,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.architecture"
							}
						},
						{
							"id": 259022,
							"name": "bundle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure or disable bundling options",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259060,
								"name": "FunctionBundleProp"
							}
						},
						{
							"id": 259051,
							"name": "codeSigningConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Code signing config associated with this function",
								"tags": [
									{
										"tag": "default",
										"text": "- Not Sign the Code\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 277,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICodeSigningConfig",
								"package": "aws-cdk-lib",
								"name": "ICodeSigningConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.codeSigningConfig"
							}
						},
						{
							"id": 259047,
							"name": "currentVersionOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Options for the `lambda.Version` resource automatically created by the\n`fn.currentVersion` method.",
								"tags": [
									{
										"tag": "default",
										"text": "- default options as described in `VersionOptions`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 251,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "VersionOptions",
								"package": "aws-cdk-lib",
								"name": "VersionOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.currentVersionOptions"
							}
						},
						{
							"id": 259037,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SQS queue to use if DLQ is enabled.\nIf SNS topic is desired, specify `deadLetterTopic` property instead.",
								"tags": [
									{
										"tag": "default",
										"text": "- SQS queue with 14 day retention period if `deadLetterQueueEnabled` is `true`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 161,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueue"
							}
						},
						{
							"id": 259036,
							"name": "deadLetterQueueEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enabled DLQ. If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
								"tags": [
									{
										"tag": "default",
										"text": "- false unless `deadLetterQueue` is set, which implies DLQ is enabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 154,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueueEnabled"
							}
						},
						{
							"id": 259038,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SNS topic to use as a DLQ.\nNote that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
								"tags": [
									{
										"tag": "default",
										"text": "- no SNS topic\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 169,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterTopic"
							}
						},
						{
							"id": 259028,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A description of the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No description.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.description"
							}
						},
						{
							"id": 259021,
							"name": "enableLiveDev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable local development",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  enableLiveDev: false\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 173,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259029,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
								"tags": [
									{
										"tag": "default",
										"text": "- No environment variables.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259030,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259031,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259032,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environment"
							}
						},
						{
							"id": 259050,
							"name": "environmentEncryption",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The AWS KMS key that's used to encrypt your function's environment variables.",
								"tags": [
									{
										"tag": "default",
										"text": "- AWS Lambda creates and uses an AWS managed customer master key (CMK).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 271,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environmentEncryption"
							}
						},
						{
							"id": 259043,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Event sources for this function.",
								"text": "You can also add event sources using `addEventSource`.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No event sources.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 223,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "IEventSource",
									"package": "aws-cdk-lib",
									"name": "IEventSource"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.events"
							}
						},
						{
							"id": 259048,
							"name": "filesystem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The filesystem configuration for the lambda function",
								"tags": [
									{
										"tag": "default",
										"text": "- will not mount any filesystem\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 257,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "FileSystem",
								"package": "aws-cdk-lib",
								"name": "FileSystem"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.filesystem"
							}
						},
						{
							"id": 259011,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override the automatically generated name",
								"tags": [
									{
										"tag": "default",
										"text": "An automatically generated name\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  functionName: \"my-function\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 259012,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 259013,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 259014,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 259057,
																"name": "FunctionNameProps"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 259015,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the entry point and handler function. Of the format:\n`/path/to/file.function`.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  handler: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259033,
							"name": "initialPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Initial policy statements to add to the created Lambda Role.",
								"text": "You can call `addToRolePolicy` to the created lambda to add statements post creation.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No policy statements are added to the created Lambda role.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 94,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "PolicyStatement",
									"package": "aws-cdk-lib",
									"name": "PolicyStatement"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.initialPolicy"
							}
						},
						{
							"id": 259041,
							"name": "insightsVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Specify the version of CloudWatch Lambda insights to use for monitoring",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights.html\n\nWhen used with `DockerImageFunction` or `DockerImageCode`, the Docker image should have\nthe Lambda insights agent installed."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-Getting-Started-docker.html\n"
									},
									{
										"tag": "default",
										"text": "- No Lambda Insights\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 200,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LambdaInsightsVersion",
								"package": "aws-cdk-lib",
								"name": "LambdaInsightsVersion"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.insightsVersion"
							}
						},
						{
							"id": 259024,
							"name": "layers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure layers for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  layers: [myLayer]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 208,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ILayerVersion",
									"package": "aws-cdk-lib",
									"name": "ILayerVersion"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.layers"
							}
						},
						{
							"id": 259044,
							"name": "logRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days log events are kept in CloudWatch Logs. When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
								"tags": [
									{
										"tag": "default",
										"text": "logs.RetentionDays.INFINITE\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 231,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RetentionDays",
								"package": "aws-cdk-lib",
								"name": "RetentionDays"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetention"
							}
						},
						{
							"id": 259046,
							"name": "logRetentionRetryOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.\nThese options control the retry policy when interacting with CloudWatch APIs.",
								"tags": [
									{
										"tag": "default",
										"text": "- Default AWS SDK retry options.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 245,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogRetentionRetryOptions",
								"package": "aws-cdk-lib",
								"name": "LogRetentionRetryOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRetryOptions"
							}
						},
						{
							"id": 259045,
							"name": "logRetentionRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The IAM role for the Lambda function associated with the custom resource\nthat sets the retention policy.",
								"tags": [
									{
										"tag": "default",
										"text": "- A new role is created.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 238,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRole"
							}
						},
						{
							"id": 259055,
							"name": "maxEventAge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum age of a request that Lambda sends to a function for\nprocessing.",
								"text": "Minimum: 60 seconds\nMaximum: 6 hours\n",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.hours(6)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.maxEventAge"
							}
						},
						{
							"id": 259018,
							"name": "memorySize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The amount of memory in MB allocated.",
								"tags": [
									{
										"tag": "default",
										"text": "1024\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 2048,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.memorySize"
							}
						},
						{
							"id": 259053,
							"name": "onFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for failed invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onFailure"
							}
						},
						{
							"id": 259054,
							"name": "onSuccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for successful invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onSuccess"
							}
						},
						{
							"id": 259023,
							"name": "permissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure permissions for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  permissions: [\"ses\", Bucket]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Permissions"
							}
						},
						{
							"id": 259039,
							"name": "profiling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enable profiling.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- No profiling.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 182,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profiling"
							}
						},
						{
							"id": 259040,
							"name": "profilingGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Profiling Group.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- A new profiling group will be created if `profiling` is set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 189,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IProfilingGroup",
								"package": "aws-cdk-lib",
								"name": "IProfilingGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profilingGroup"
							}
						},
						{
							"id": 259042,
							"name": "reservedConcurrentExecutions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum of concurrent executions you want to reserve for the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No specific limit - account limit."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 215,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.reservedConcurrentExecutions"
							}
						},
						{
							"id": 259056,
							"name": "retryAttempts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum number of times to retry when the function returns an error.",
								"text": "Minimum: 0\nMaximum: 2\n",
								"tags": [
									{
										"tag": "default",
										"text": "2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.retryAttempts"
							}
						},
						{
							"id": 259034,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda execution role.",
								"text": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".\n",
								"tags": [
									{
										"tag": "default",
										"text": "- A unique role will be generated for this lambda function.\nBoth supplied and generated roles can always be changed by calling `addToRolePolicy`.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 111,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.role"
							}
						},
						{
							"id": 259017,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The runtime environment.",
								"tags": [
									{
										"tag": "default",
										"text": "\"nodejs12.x\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  runtime: \"nodejs14.x\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nodejs14.x"
									},
									{
										"type": "literal",
										"value": "nodejs"
									},
									{
										"type": "literal",
										"value": "nodejs4.3"
									},
									{
										"type": "literal",
										"value": "nodejs6.10"
									},
									{
										"type": "literal",
										"value": "nodejs8.10"
									},
									{
										"type": "literal",
										"value": "nodejs10.x"
									},
									{
										"type": "literal",
										"value": "nodejs12.x"
									},
									{
										"type": "literal",
										"value": "python2.7"
									},
									{
										"type": "literal",
										"value": "python3.6"
									},
									{
										"type": "literal",
										"value": "python3.7"
									},
									{
										"type": "literal",
										"value": "python3.8"
									},
									{
										"type": "literal",
										"value": "python3.9"
									},
									{
										"type": "literal",
										"value": "dotnetcore1.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.1"
									},
									{
										"type": "literal",
										"value": "dotnetcore3.1"
									},
									{
										"type": "literal",
										"value": "go1.x"
									},
									{
										"type": "reference",
										"qualifiedName": "Runtime",
										"package": "aws-cdk-lib",
										"name": "Runtime"
									}
								]
							}
						},
						{
							"id": 259027,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The list of security groups to associate with the Lambda's network interfaces.",
								"text": "Only used if 'vpc' is supplied.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- If the function is placed within a VPC and a security group is\nnot specified, either by this or securityGroup prop, a dedicated security\ngroup will be created for this function.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 138,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 259016,
							"name": "srcPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Root directory of the project, typically where package.json is located. Set if using a monorepo with multiple subpackages",
								"tags": [
									{
										"tag": "default",
										"text": "Defaults to the same directory as sst.json\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  srcPath: \"packages/backend\",\n  handler: \"function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259019,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The execution timeout in seconds.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 30,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 146,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"qualifiedName": "Duration",
										"package": "aws-cdk-lib",
										"name": "Duration"
									}
								]
							}
						},
						{
							"id": 259020,
							"name": "tracing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable AWS X-Ray Tracing.",
								"tags": [
									{
										"tag": "default",
										"text": "\"active\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  tracing: \"pass_through\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 159,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Tracing",
								"package": "aws-cdk-lib",
								"name": "Tracing"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.tracing"
							}
						},
						{
							"id": 259025,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "VPC network to place Lambda network interfaces",
								"text": "Specify this if the Lambda function needs to access resources in a VPC.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- Function is not placed within a VPC.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpc"
							}
						},
						{
							"id": 259026,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the network interfaces within the VPC.",
								"text": "Only used if 'vpc' is supplied. Note: internet access for Lambdas\nrequires a NAT gateway, so picking Public subnets is not allowed.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- the Vpc default strategy if not specified\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 128,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259035,
								259049,
								259052,
								259022,
								259051,
								259047,
								259037,
								259036,
								259038,
								259028,
								259021,
								259029,
								259050,
								259043,
								259048,
								259011,
								259015,
								259033,
								259041,
								259024,
								259044,
								259046,
								259045,
								259055,
								259018,
								259053,
								259054,
								259023,
								259039,
								259040,
								259042,
								259056,
								259034,
								259017,
								259027,
								259016,
								259019,
								259020,
								259025,
								259026
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 49,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "FunctionOptions",
									"package": "aws-cdk-lib",
									"name": "lambda.FunctionOptions"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "functionName"
										},
										{
											"type": "literal",
											"value": "timeout"
										},
										{
											"type": "literal",
											"value": "runtime"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 259060,
					"name": "FunctionBundleProp",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 229,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 259061,
								"name": "FunctionBundleNodejsProps"
							},
							{
								"type": "reference",
								"id": 259074,
								"name": "FunctionBundlePythonProps"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 259009,
					"name": "FunctionDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 259080,
								"name": "Function"
							},
							{
								"type": "reference",
								"id": 259010,
								"name": "FunctionProps"
							}
						]
					}
				},
				{
					"id": 259008,
					"name": "FunctionInlineDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						]
					}
				},
				{
					"id": 259007,
					"name": "HandlerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 45,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "FunctionHandlerProps"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259080
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259077,
						259061,
						259074,
						259057,
						259010
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						259060,
						259009,
						259008,
						259007
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Function.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 259802,
			"name": "GraphQLApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259825,
					"name": "GraphQLApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 259829,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 39,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259830,
									"name": "new GraphQLApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259831,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259832,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259833,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259803,
												"name": "GraphQLApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259825,
										"name": "GraphQLApi"
									},
									"overwrites": {
										"type": "reference",
										"id": 258228,
										"name": "Api.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 258227,
								"name": "Api.constructor"
							}
						},
						{
							"id": 259865,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 404,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259866,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259868,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 412,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 259870,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 420,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 259869,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 416,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 259867,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 408,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259868,
												259870,
												259869,
												259867
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 258233,
								"name": "Api.cdk"
							}
						},
						{
							"id": 259834,
							"name": "codegen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 35,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259835,
							"name": "lambdaIntegration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "HttpRouteIntegration",
								"package": "@aws-cdk/aws-apigatewayv2-alpha",
								"name": "HttpRouteIntegration"
							}
						},
						{
							"id": 259893,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 258328,
								"name": "Api.node"
							}
						},
						{
							"id": 259836,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 37,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259873,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259874,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258249,
								"name": "Api.customDomainUrl"
							}
						},
						{
							"id": 259877,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 472,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259878,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.httpApiArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258253,
								"name": "Api.httpApiArn"
							}
						},
						{
							"id": 259875,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259876,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.routes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258251,
								"name": "Api.routes"
							}
						},
						{
							"id": 259837,
							"name": "serverFunction",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 85,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259838,
									"name": "serverFunction",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 259871,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 447,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259872,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258247,
								"name": "Api.url"
							}
						},
						{
							"id": 259879,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 489,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259880,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created. Specify an object with the key being the route as a string and the value is either a [`FunctionDefinition`](Function.md#functiondefinition) or the [`ApiFunctionRouteProps`](#apifunctionrouteprops).",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259881,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259882,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 258163,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 258256,
										"name": "Api.addRoutes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258255,
								"name": "Api.addRoutes"
							}
						},
						{
							"id": 259886,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 526,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259887,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259888,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 258263,
										"name": "Api.attachPermissions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258262,
								"name": "Api.attachPermissions"
							}
						},
						{
							"id": 259889,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 548,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259890,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259891,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259892,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 258266,
										"name": "Api.attachPermissionsToRoute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258265,
								"name": "Api.attachPermissionsToRoute"
							}
						},
						{
							"id": 259839,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 106,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259840,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259841,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259842,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259843,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258165,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 259844,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									},
									"overwrites": {
										"type": "reference",
										"id": 258309,
										"name": "Api.createFunctionIntegration"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 258308,
								"name": "Api.createFunctionIntegration"
							}
						},
						{
							"id": 259845,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 124,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259846,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259847,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259848,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259849,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259853,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259850,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "literal",
																		"value": true
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259852,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259854,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 259855,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 259857,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 259858,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 259859,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 259860,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													259859,
																													259860
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 259856,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							259857,
																							259856
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259851,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259853,
																		259850,
																		259852,
																		259854,
																		259851
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259861,
													"name": "local",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259862,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259863,
																	"name": "codegen",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259863
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259864,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259848,
														259861,
														259864
													]
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 258270,
										"name": "Api.getConstructMetadata"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 258269,
								"name": "Api.getConstructMetadata"
							}
						},
						{
							"id": 259883,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 512,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259884,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259885,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 258260,
										"name": "Api.getFunction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258259,
								"name": "Api.getFunction"
							}
						},
						{
							"id": 259894,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259895,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 258330,
										"name": "Api.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258329,
								"name": "Api.toString"
							}
						},
						{
							"id": 259826,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259827,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259828,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 258225,
										"name": "Api.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 258224,
								"name": "Api.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259829
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259865,
								259834,
								259835,
								259893,
								259836
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259873,
								259877,
								259875,
								259837,
								259871
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259879,
								259886,
								259889,
								259839,
								259845,
								259883,
								259894,
								259826
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/GraphQLApi.ts",
							"line": 34,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 258223,
							"name": "Api"
						}
					]
				},
				{
					"id": 259803,
					"name": "GraphQLApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259812,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.accessLog"
							}
						},
						{
							"id": 259814,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.authorizers"
							}
						},
						{
							"id": 259807,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259808,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259809,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 259810,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259809,
												259810
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cdk"
							}
						},
						{
							"id": 259804,
							"name": "codegen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to graphql-codegen configuration file",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew GraphQLApi(props.stack, \"api\", {\n  codegen: \"./graphql/codegen.yml\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259811,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cors"
							}
						},
						{
							"id": 259813,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.customDomain"
							}
						},
						{
							"id": 259815,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure various defaults to be applied accross all routes"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259816,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259819,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 185,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 259818,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													}
												]
											}
										},
										{
											"id": 259817,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n  routes: {\n    \"GET  /notes\": \"src/list.main\",\n    \"POST /notes\": \"src/create.main\",\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 174,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										},
										{
											"id": 259820,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 190,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 259821,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 191,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259822,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 259823,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 206,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 259824,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 221,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																259823,
																259824
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259819,
												259818,
												259817,
												259820,
												259821
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.defaults"
							}
						},
						{
							"id": 259806,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259805,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to function that will be invoked to resolve GraphQL queries.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew GraphQLApi(props.stack, \"api\", {\n  codegen: \"./graphql/codegen.yml\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259812,
								259814,
								259807,
								259804,
								259811,
								259813,
								259815,
								259806,
								259805
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/GraphQLApi.ts",
							"line": 8,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 258141,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "never"
										}
									],
									"name": "ApiProps"
								},
								{
									"type": "literal",
									"value": "routes"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259825
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259803
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/GraphQLApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259959,
			"name": "KinesisStream",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259973,
					"name": "KinesisStream",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `KinesisStream` construct is a higher level CDK construct that makes it easy to create a [Kinesis Data Stream](https://aws.amazon.com/kinesis/data-streams/). You can create a stream and add a list of consumers to it.\nThis construct makes it easy to define a stream and its consumers. It also internally connects the consumers and the stream together."
					},
					"children": [
						{
							"id": 259977,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 142,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259978,
									"name": "new KinesisStream",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259979,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259980,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259981,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259960,
												"name": "KinesisStreamProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259973,
										"name": "KinesisStream"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 259982,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259983,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259984,
											"name": "stream",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Return internally created Kinesis Stream"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IStream",
												"package": "aws-cdk-lib",
												"name": "IStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259984
											]
										}
									]
								}
							}
						},
						{
							"id": 259985,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 138,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259986,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259987,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259988,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 259080,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 260033,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 259989,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 139,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 259990,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 140,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 259960,
								"name": "KinesisStreamProps"
							}
						},
						{
							"id": 259991,
							"name": "streamArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 163,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259992,
									"name": "streamArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created Kinesis Stream"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259993,
							"name": "streamName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259994,
									"name": "streamName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created Kinesis Stream"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 260028,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 275,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260029,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260030,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260031,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260032,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 259968,
														"name": "KinesisStreamConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 259995,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 184,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259996,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add consumers to a stream after creating it",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.addConsumers({\n  consumer1: \"src/function.handler\"\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259997,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259998,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259999,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 260000,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 260001,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 259008,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 259968,
																	"name": "KinesisStreamConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260002,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 206,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260003,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the consumers. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nstream.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260004,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260005,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 221,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260006,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific consumer. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260007,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260008,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260026,
							"name": "createStream",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 259,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260027,
									"name": "createStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260012,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 246,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260013,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 260014,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 260016,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 260017,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 260019,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 260020,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 260022,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 260023,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 260024,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 260025,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													260024,
																													260025
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 260021,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							260022,
																							260021
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260018,
																	"name": "streamName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		260019,
																		260018
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 260015,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "KinesisStream"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														260016,
														260015
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 260009,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260010,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the function for a specific consumer",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.getFunction(\"consumer1\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260011,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 260034,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 260035,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 259974,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259975,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259976,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259977
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259982,
								259985,
								260033,
								259989,
								259990
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259991,
								259993
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								260028,
								259995,
								260002,
								260005,
								260026,
								260012,
								260009,
								260034,
								259974
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 131,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 259968,
					"name": "KinesisStreamConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the function consumer for the stream"
					},
					"children": [
						{
							"id": 259970,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259971,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259972,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the interally created event source",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    fun: {\n      cdk: {\n        eventSource: {\n          enabled: false\n        }\n      }\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 119,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "KinesisEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "KinesisEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259972
											]
										}
									]
								}
							}
						},
						{
							"id": 259969,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    consumer1: {\n      function: {\n        handler: \"src/consumer1.handler\",\n        timeout: 30\n      }\n    }\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259970,
								259969
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 81,
							"character": 17
						}
					]
				},
				{
					"id": 259960,
					"name": "KinesisStreamProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259965,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259966,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259967,
											"name": "stream",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created Kinesis Stream",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  cdk: {\n    stream: {\n      streamName: \"my-stream\",\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IStream",
														"package": "aws-cdk-lib",
														"name": "IStream"
													},
													{
														"type": "reference",
														"qualifiedName": "StreamProps",
														"package": "aws-cdk-lib",
														"name": "StreamProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259967
											]
										}
									]
								}
							}
						},
						{
							"id": 259964,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the function consumers for this stream",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: {\n      function: {\n        handler: \"src/consumer2.handler\",\n        timeout: 30\n      }\n    }\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 259008,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 259968,
												"name": "KinesisStreamConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 259961,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259962,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259963,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(props.stack, \"Stream\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259963
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259965,
								259964,
								259961
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 19,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259973
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259968,
						259960
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/KinesisStream.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259482,
			"name": "NextjsSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259509,
					"name": "NextjsSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `NextjsSite` construct is a higher level CDK construct that makes it easy to create a Next.js app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.",
						"text": "It also allows you to [automatically set the environment variables](#configuring-environment-variables) in your Next.js app directly from the outputs in your SST app.\n\n## Next.js Features\nThe `NextjsSite` construct uses the [`@sls-next/lambda-at-edge`](https://github.com/serverless-nextjs/serverless-next.js/tree/master/packages/libs/lambda-at-edge) package from the [`serverless-next.js`](https://github.com/serverless-nextjs/serverless-next.js) project to build and package your Next.js app so that it can be deployed to Lambda@Edge and CloudFront.\n\n:::note\nTo use the `NextjsSite` construct, you have to install `@sls-next/lambda-at-edge` as a dependency in your `package.json`.\n\n```bash\nnpm install --save @sls-next/lambda-at-edge\n```\n:::\n\nMost of the Next.js 11 features are supported, including:\n\n- [Static Site Generation (SSG)](https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation): Static pages are served out through the CloudFront CDN.\n- [Server Side Rendering (SSR)](https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering): Server side rendering is performed at CloudFront edge locations using Lambda@Edge.\n- [API Routes](https://nextjs.org/docs/api-routes/introduction): API requests are served from CloudFront edge locations using Lambda@Edge.\n- [Incremental Static Regeneration (ISR)](https://nextjs.org/docs/basic-features/data-fetching#incremental-static-regeneration): Regeneration is performed using Lambda functions, and the generated pages will be served out through the CloudFront CDN.\n- [Image Optimization](https://nextjs.org/docs/basic-features/image-optimization): Images are resized and optimized at CloudFront edge locations using Lambda@Edge.\n\nNext.js 12 features like middleware and AVIF image are not yet supported. You can [read more about the features supported by `serverless-next.js`](https://github.com/serverless-nextjs/serverless-next.js#features). And you can [follow the progress on Next.js 12 support here](https://github.com/serverless-nextjs/serverless-next.js/issues/2016).\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Creating a Next.js app\n\nDeploys a Next.js app in the `path/to/site` directory.\n\n```js\nnew NextjsSite(this, \"NextSite\", {\n  path: \"path/to/site\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259516,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 465,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259517,
									"name": "new NextjsSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259518,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259519,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259520,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259483,
												"name": "NextjsSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259509,
										"name": "NextjsSite"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 259536,
							"name": "apiFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 461,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 259531,
							"name": "assets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 456,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Asset",
									"package": "aws-cdk-lib",
									"name": "Asset"
								}
							}
						},
						{
							"id": 259532,
							"name": "awsCliLayer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 457,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AwsCliLayer",
								"package": "aws-cdk-lib",
								"name": "AwsCliLayer"
							}
						},
						{
							"id": 259530,
							"name": "buildOutDir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 455,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 259521,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 431,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259522,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259523,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 435,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 259527,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The AWS Certificate Manager certificate for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 451,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 259525,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 443,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 259526,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 447,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										},
										{
											"id": 259524,
											"name": "regenerationQueue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 439,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Queue",
												"package": "aws-cdk-lib",
												"name": "Queue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259523,
												259527,
												259525,
												259526,
												259524
											]
										}
									]
								}
							}
						},
						{
							"id": 259534,
							"name": "edgeLambdaRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 459,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Role",
								"package": "aws-cdk-lib",
								"name": "Role"
							}
						},
						{
							"id": 259537,
							"name": "imageFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 462,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 259529,
							"name": "isPlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 454,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259535,
							"name": "mainFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 460,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 259629,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 259528,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 453,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 259483,
								"name": "NextjsSiteProps"
							}
						},
						{
							"id": 259538,
							"name": "regenerationFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 463,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "aws-cdk-lib",
								"name": "Function"
							}
						},
						{
							"id": 259533,
							"name": "routesManifest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 458,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "RoutesManifest",
										"package": "@sls-next/core",
										"name": "RoutesManifest"
									}
								]
							}
						},
						{
							"id": 259511,
							"name": "imageCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for images."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 404,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 259512,
							"name": "lambdaCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for Lambda@Edge."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 419,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 259510,
							"name": "staticCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for static pages."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 389,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 259543,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 564,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259544,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259545,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 571,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259546,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259541,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 548,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259542,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 259549,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 585,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259550,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259547,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 578,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259548,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259539,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 541,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259540,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259551,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 602,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259552,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to allow the Next.js API routes and Server Side rendering `getServerSideProps` to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n### Attaching permissions\n\n```js {5}\nconst site = new NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n});\n\nsite.attachPermissions([\"sns\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259553,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259594,
							"name": "buildApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 937,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259595,
									"name": "buildApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259614,
							"name": "createCertificate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1396,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259615,
									"name": "createCertificate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										]
									}
								}
							]
						},
						{
							"id": 259600,
							"name": "createCloudFrontDistribution",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1094,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259601,
									"name": "createCloudFrontDistribution",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Distribution",
										"package": "aws-cdk-lib",
										"name": "Distribution"
									}
								}
							]
						},
						{
							"id": 259604,
							"name": "createCloudFrontImageCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1261,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259605,
									"name": "createCloudFrontImageCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 259608,
							"name": "createCloudFrontInvalidation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1277,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259609,
									"name": "createCloudFrontInvalidation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 259606,
							"name": "createCloudFrontLambdaCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1269,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259607,
									"name": "createCloudFrontLambdaCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 259602,
							"name": "createCloudFrontStaticCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1253,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259603,
									"name": "createCloudFrontStaticCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 259568,
							"name": "createEdgeFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 675,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259569,
									"name": "createEdgeFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259570,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259571,
											"name": "handlerPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 259578,
							"name": "createEdgeFunctionInNonUE1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 737,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259579,
									"name": "createEdgeFunctionInNonUE1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259580,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259581,
											"name": "assetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259582,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										},
										{
											"id": 259583,
											"name": "hasRealCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 259572,
							"name": "createEdgeFunctionInUE1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 702,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259573,
									"name": "createEdgeFunctionInUE1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259574,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259575,
											"name": "assetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259576,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										},
										{
											"id": 259577,
											"name": "hasRealCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 259584,
							"name": "createEdgeFunctionRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 794,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259585,
									"name": "createEdgeFunctionRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 259590,
							"name": "createLambdaCodeReplacer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 885,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259591,
									"name": "createLambdaCodeReplacer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259592,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259593,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 259588,
							"name": "createRegenerationFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 837,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259589,
									"name": "createRegenerationFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 259586,
							"name": "createRegenerationQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 823,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259587,
									"name": "createRegenerationQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Queue",
										"package": "aws-cdk-lib",
										"name": "Queue"
									}
								}
							]
						},
						{
							"id": 259616,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1433,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259617,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259596,
							"name": "createS3Bucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 993,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259597,
									"name": "createS3Bucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Bucket",
										"package": "aws-cdk-lib",
										"name": "Bucket"
									}
								}
							]
						},
						{
							"id": 259598,
							"name": "createS3Deployment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1004,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259599,
									"name": "createS3Deployment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 259554,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 606,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259555,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259556,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259558,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259559,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259561,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259560,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259561,
																		259560
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259557,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "NextSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259558,
														259557
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 259625,
							"name": "getLambdaContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1515,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259626,
									"name": "getLambdaContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 259623,
							"name": "getS3ContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1487,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259624,
									"name": "getS3ContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 259612,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1360,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259613,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									}
								}
							]
						},
						{
							"id": 259618,
							"name": "pathPattern",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259619,
									"name": "pathPattern",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259620,
											"name": "pattern",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259621,
							"name": "readRoutesManifest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1481,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259622,
									"name": "readRoutesManifest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RoutesManifest",
										"package": "@sls-next/core",
										"name": "RoutesManifest"
									}
								}
							]
						},
						{
							"id": 259627,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1559,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259628,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259630,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259631,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 259610,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1330,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259611,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259562,
							"name": "zipAppAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 616,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259563,
									"name": "zipAppAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259564,
											"name": "fileSizeLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 259565,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 259566,
							"name": "zipAppStubAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 667,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259567,
									"name": "zipAppStubAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 259513,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259514,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259515,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259516
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259536,
								259531,
								259532,
								259530,
								259521,
								259534,
								259537,
								259529,
								259535,
								259629,
								259528,
								259538,
								259533,
								259511,
								259512,
								259510
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259543,
								259545,
								259541,
								259549,
								259547,
								259539
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259551,
								259594,
								259614,
								259600,
								259604,
								259608,
								259606,
								259602,
								259568,
								259578,
								259572,
								259584,
								259590,
								259588,
								259586,
								259616,
								259596,
								259598,
								259554,
								259625,
								259623,
								259612,
								259618,
								259621,
								259627,
								259630,
								259610,
								259562,
								259566,
								259513
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/NextjsSite.ts",
							"line": 385,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 259483,
					"name": "NextjsSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259484,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259485,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259486,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in bucket information to override the default settings this construct uses to create the CDK Bucket internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 51,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 259488,
											"name": "cachePolicies",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default CloudFront cache policies created internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n### Reusng CloudFront cache policies\n\nCloudFront has a limit of 20 cache policies per AWS account. This is a hard limit, and cannot be increased. Each `NextjsSite` creates 3 cache policies. If you plan to deploy multiple Next.js sites, you can have the constructs share the same cache policies by reusing them across sites.\n\n```js\nimport * as cloudfront from \"aws-cdk-lib/aws-cloudfront\";\n\nconst cachePolicies = {\n  staticCachePolicy: new cloudfront.CachePolicy(this, \"StaticCache\", NextjsSite.staticCachePolicyProps),\n  imageCachePolicy: new cloudfront.CachePolicy(this, \"ImageCache\", NextjsSite.imageCachePolicyProps),\n  lambdaCachePolicy: new cloudfront.CachePolicy(this, \"LambdaCache\", NextjsSite.lambdaCachePolicyProps),\n};\n\nnew NextjsSite(this, \"Site1\", {\n  path: \"path/to/site1\",\n  cfCachePolicies: cachePolicies,\n});\n\nnew NextjsSite(this, \"Site2\", {\n  path: \"path/to/site2\",\n  cfCachePolicies: cachePolicies,\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 83,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259489,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 259491,
															"name": "imageCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 85,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														},
														{
															"id": 259492,
															"name": "lambdaCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 86,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														},
														{
															"id": 259490,
															"name": "staticCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 84,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																259491,
																259492,
																259490
															]
														}
													]
												}
											}
										},
										{
											"id": 259487,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a value to override the default settings this construct uses to create the CDK `Distribution` internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 55,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										},
										{
											"id": 259493,
											"name": "regenerationQueue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses to create the CDK `Queue` internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "QueueProps",
												"package": "aws-cdk-lib",
												"name": "QueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259486,
												259488,
												259487,
												259493
											]
										}
									]
								}
							}
						},
						{
							"id": 259495,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n### Configuring custom domains\n\nYou can configure the website with a custom domain hosted either on [Route 53](https://aws.amazon.com/route53/) or [externally](#configuring-externally-hosted-domain).\n\n#### Using the basic config (Route 53 domains)\n\n```js {3}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: \"domain.com\",\n});\n```\n\n#### Redirect www to non-www (Route 53 domains)\n\n```js {3-6}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    domainAlias: \"www.domain.com\",\n  },\n});\n```\n\n#### Configuring domains across stages (Route 53 domains)\n\n```js {7-10}\nexport default class MyStack extends Stack {\n  constructor(scope, id, props) {\n    super(scope, id, props);\n\n    new NextjsSite(this, \"Site\", {\n      path: \"path/to/site\",\n      customDomain: {\n        domainName:\n          scope.stage === \"prod\" ? \"domain.com\" : `${scope.stage}.domain.com`,\n        domainAlias: scope.stage === \"prod\" ? \"www.domain.com\" : undefined,\n      },\n    });\n  }\n}\n```\n\n#### Using the full config (Route 53 domains)\n\n```js {3-7}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    domainAlias: \"www.domain.com\",\n    hostedZone: \"domain.com\",\n  },\n});\n```\n\n#### Importing an existing certificate (Route 53 domains)\n\n```js {7}\nimport { Certificate } from \"aws-cdk-lib/aws-certificatemanager\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    certificate: Certificate.fromCertificateArn(this, \"MyCert\", certArn),\n  },\n});\n```\n\nNote that, the certificate needs be created in the `us-east-1`(N. Virginia) region as required by AWS CloudFront.\n\n#### Specifying a hosted zone (Route 53 domains)\n\nIf you have multiple hosted zones for a given domain, you can choose the one you want to use to configure the domain.\n\n```js {7-10}\nimport { HostedZone } from \"aws-cdk-lib/aws-route53\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    hostedZone: HostedZone.fromHostedZoneAttributes(this, \"MyZone\", {\n      hostedZoneId,\n      zoneName,\n    }),\n  },\n});\n```\n\n#### Configuring externally hosted domain\n\n```js {5-8}\nimport { Certificate } from \"aws-cdk-lib/aws-certificatemanager\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    isExternalDomain: true,\n    domainName: \"domain.com\",\n    certificate: Certificate.fromCertificateArn(this, \"MyCert\", certArn),\n  },\n});\n```\n\nNote that the certificate needs be created in the `us-east-1`(N. Virginia) region as required by AWS CloudFront, and validated. After the `Distribution` has been created, create a CNAME DNS record for your domain name with the `Distribution's` URL as the value. Here are more details on [configuring SSL Certificate on externally hosted domains](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html).\n\nAlso note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "BaseSiteDomainProps"
									}
								]
							}
						},
						{
							"id": 259500,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 306,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259501,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259502,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda Functions created by this construct.",
												"tags": [
													{
														"tag": "example",
														"text": "\n### Configuring the Lambda Functions\n\nConfigure the internally created CDK [`Lambda Function`](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_lambda.Function.html) instance.\n\n```js {4-8}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  defaults: {\n    function: {\n      timeout: 20,\n      memorySize: 2048,\n      permissions: [\"sns\"],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 328,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 259503,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 259505,
															"name": "memorySize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 330,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 259506,
															"name": "permissions",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 331,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"name": "Permissions"
															}
														},
														{
															"id": 259504,
															"name": "timeout",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 329,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																259505,
																259506,
																259504
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259502
											]
										}
									]
								}
							}
						},
						{
							"id": 259507,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 337,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259496,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name.",
								"tags": [
									{
										"tag": "example",
										"text": "\n### Configuring environment variables\n\nThe `NextjsSite` construct allows you to set the environment variables in your Next.js app based on outputs from other constructs in your SST app. So you don't have to hard code the config from your backend. Let's look at how.\n\nNext.js supports [setting build time environment variables](https://nextjs.org/docs/basic-features/environment-variables). In your JS files this looks like:\n\n\n```js title=\"pages/index.js\"\nconsole.log(process.env.API_URL);\nconsole.log(process.env.USER_POOL_CLIENT);\n```\n\nYou can pass these in directly from the construct.\n\n```js {3-6}\nnew NextjsSite(this, \"NextSite\", {\n  path: \"path/to/site\",\n  environment: {\n    API_URL: api.url,\n    USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n\nWhere `api.url` or `auth.cognitoUserPoolClient.userPoolClientId` are coming from other constructs in your SST app.\n\n#### While deploying\n\nOn `sst deploy`, the environment variables will first be replaced by placeholder values, `{{ API_URL }}` and `{{ USER_POOL_CLIENT }}`, when building the Next.js app. And after the referenced resources have been created, the Api and User Pool in this case, the placeholders in the HTML and JS files will then be replaced with the actual values.\n\n:::caution\nSince the actual values are determined at deploy time, you should not rely on the values at build time. For example, you cannot fetch from `process.env.API_URL` inside `getStaticProps()` at build time.\n\nThere are a couple of work arounds:\n- Hardcode the API URL\n- Read the API URL dynamically at build time (ie. from an SSM value)\n- Use [fallback pages](https://nextjs.org/docs/basic-features/data-fetching#fallback-pages) to generate the page on the fly\n:::\n\n#### While developing\n\nTo use these values while developing, run `sst start` to start the [Live Lambda Development](../live-lambda-development.md) environment.\n\n``` bash\nnpx sst start\n```\n\nThen in your Next.js app to reference these variables, add the [`sst-env`](../packages/static-site-env.md) package.\n\n```bash\nnpm install --save-dev @serverless-stack/static-site-env\n```\n\nAnd tweak the Next.js `dev` script to:\n\n```json title=\"package.json\" {2}\n\"scripts\": {\n  \"dev\": \"sst-env -- next dev\",\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n},\n```\n\nNow you can start your Next.js app as usual and it'll have the environment variables from your SST app.\n\n``` bash\nnpm run dev\n```\n\nThere are a couple of things happening behind the scenes here:\n\n1. The `sst start` command generates a file with the values specified by the `NextjsSite` construct's `environment` prop.\n2. The `sst-env` CLI will traverse up the directories to look for the root of your SST app.\n3. It'll then find the file that's generated in step 1.\n4. It'll load these as environment variables before running the start command.\n\n:::note\n`sst-env` only works if the Next.js app is located inside the SST app or inside one of its subdirectories. For example:\n\n```\n/\n  sst.json\n  nextjs-app/\n```\n:::\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 305,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259497,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 259498,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 259499,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 259494,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 96,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259508,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 341,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259484,
								259495,
								259500,
								259507,
								259496,
								259494,
								259508
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/NextjsSite.ts",
							"line": 46,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259509
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259483
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/NextjsSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258868,
			"name": "Queue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258879,
					"name": "Queue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Queue` construct is a higher level CDK construct that makes it easy to create a [SQS Queues](https://aws.amazon.com/sqs/). You can create a queue by specifying a consumer function. And then publish to the queue from any part of your serverless app.",
						"text": "This construct makes it easier to define a queue and a consumer. It also internally connects the consumer and queue together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Queue } from \"@serverless-stack/resources\";\n\nnew Queue(this, \"Queue\", {\n  consumer: \"src/queueConsumer.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258883,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258884,
									"name": "new Queue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258885,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258886,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258887,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 258869,
												"name": "QueueProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258879,
										"name": "Queue"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258888,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 109,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258889,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258890,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IQueue",
												"package": "aws-cdk-lib",
												"name": "IQueue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258890
											]
										}
									]
								}
							}
						},
						{
							"id": 258891,
							"name": "consumerFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internally created consumer `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258915,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258892,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 258893,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 258869,
								"name": "QueueProps"
							}
						},
						{
							"id": 258894,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 145,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258895,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a consumer after creating the queue. Note only one consumer can be added to a queue",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst queue = new Queue(props.stack, \"Queue\");\nqueue.addConsumer(props.stack, \"src/function.handler\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258896,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258897,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258874,
														"name": "QueueConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258898,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 194,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258899,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to the consumer function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst queue = new Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n});\nqueue.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258900,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258913,
							"name": "createQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 213,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258914,
									"name": "createQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258901,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 202,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258902,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258903,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258905,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258906,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258909,
																	"name": "consumer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 258910,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 258911,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 258912,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								258911,
																								258912
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258907,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258908,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258909,
																		258907,
																		258908
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258904,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Queue"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258905,
														258904
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258916,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258917,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258880,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258881,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258882,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258883
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258888,
								258891,
								258915,
								258892,
								258893
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258894,
								258898,
								258913,
								258901,
								258916,
								258880
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 108,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258874,
					"name": "QueueConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the consumer for the queue and invocation details"
					},
					"children": [
						{
							"id": 258876,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258877,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258878,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the consumer.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: {\n    function: \"test/lambda.handler\",\n    cdk: {\n      eventSource: {\n        batchSize: 5,\n      },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 84,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "SqsEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258878
											]
										}
									]
								}
							}
						},
						{
							"id": 258875,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: {\n    function: {\n      handler: \"src/function.handler\",\n      timeout: 10,\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258876,
								258875
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 49,
							"character": 17
						}
					]
				},
				{
					"id": 258869,
					"name": "QueueProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258870,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258871,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258872,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the queue.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n  cdk: {\n    queue: {\n      fifo: true,\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IQueue",
														"package": "aws-cdk-lib",
														"name": "IQueue"
													},
													{
														"type": "reference",
														"qualifiedName": "QueueProps",
														"package": "aws-cdk-lib",
														"name": "QueueProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258872
											]
										}
									]
								}
							}
						},
						{
							"id": 258873,
							"name": "consumer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create the consumer for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 259008,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 258874,
										"name": "QueueConsumerProps"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258870,
								258873
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258879
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258874,
						258869
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Queue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258381,
			"name": "RDS",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258408,
					"name": "RDS",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `RDS` construct is a higher level CDK construct that makes it easy to create an [RDS Serverless Cluster](https://aws.amazon.com/rds/). It uses the following defaults:",
						"text": "- Defaults to using the [Serverless v1 On-Demand autoscaling configuration](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) to make it serverless.\n- Provides a built-in interface for running schema migrations using [Kysely](https://koskimas.github.io/kysely/#migrations).\n- Enables [Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) to allow your Lambda functions to access the database cluster without needing to deploy the functions in a VPC (virtual private cloud).\n- Enables [Backup Snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/BackupRestoreAurora.html) to make sure that you don't lose your data.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { RDS } from \"@serverless-stack/resources\";\n\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"my_database\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 258412,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 149,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258413,
									"name": "new RDS",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258414,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258415,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258416,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258382,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258408,
										"name": "RDS"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258417,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 136,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258418,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258419,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 140,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ServerlessCluster",
												"package": "aws-cdk-lib",
												"name": "ServerlessCluster"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258419
											]
										}
									]
								}
							}
						},
						{
							"id": 258420,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 142,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258422,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 147,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258421,
							"name": "migratorFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 146,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258482,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258423,
							"name": "clusterArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 199,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258424,
									"name": "clusterArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `ServerlessCluster` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258427,
							"name": "clusterEndpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258428,
									"name": "clusterEndpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Endpoint",
										"package": "aws-cdk-lib",
										"name": "Endpoint"
									}
								}
							]
						},
						{
							"id": 258425,
							"name": "clusterIdentifier",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 206,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258426,
									"name": "clusterIdentifier",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258429,
							"name": "secretArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258430,
									"name": "secretArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258476,
							"name": "createMigrationCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 400,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258477,
									"name": "createMigrationCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258478,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258471,
							"name": "createMigrationsFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 347,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258472,
									"name": "createMigrationsFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258473,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258474,
											"name": "defaultDatabaseName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258475,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 258479,
							"name": "generateMigrationsHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 438,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258480,
									"name": "generateMigrationsHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258481,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258431,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 224,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258432,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258433,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258435,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258436,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258439,
																	"name": "clusterArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258440,
																	"name": "clusterIdentifier",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258441,
																	"name": "defaultDatabaseName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258437,
																	"name": "engine",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258442,
																	"name": "migrator",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 258443,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 258444,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 258445,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								258444,
																								258445
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258438,
																	"name": "secretArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258439,
																		258440,
																		258441,
																		258437,
																		258442,
																		258438
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258434,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "RDS"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258435,
														258434
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258455,
							"name": "getEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 290,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258456,
									"name": "getEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258457,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258394,
												"name": "RDSEngineType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IClusterEngine",
										"package": "aws-cdk-lib",
										"name": "IClusterEngine"
									}
								}
							]
						},
						{
							"id": 258458,
							"name": "getScaling",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 310,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258459,
									"name": "getScaling",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258460,
											"name": "scaling",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 258461,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 258462,
															"name": "autoPause",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The time before the cluster is paused.",
																"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
																"tags": [
																	{
																		"tag": "default",
																		"text": "true\n"
																	},
																	{
																		"tag": "example",
																		"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 67,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 258464,
															"name": "maxCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The maximum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_16\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 81,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														},
														{
															"id": 258463,
															"name": "minCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The minimum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_2\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 74,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																258462,
																258464,
																258463
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "ServerlessScalingOptions",
										"package": "aws-cdk-lib",
										"name": "ServerlessScalingOptions"
									}
								}
							]
						},
						{
							"id": 258465,
							"name": "getVpc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 325,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258466,
									"name": "getVpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258467,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258395,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVpc",
										"package": "aws-cdk-lib",
										"name": "IVpc"
									}
								}
							]
						},
						{
							"id": 258468,
							"name": "getVpcSubnets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 335,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258469,
									"name": "getVpcSubnets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258470,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258395,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "SubnetSelection",
												"package": "aws-cdk-lib",
												"name": "SubnetSelection"
											}
										]
									}
								}
							]
						},
						{
							"id": 258483,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258484,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258452,
							"name": "validateMigrationsFileExists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 283,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258453,
									"name": "validateMigrationsFileExists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258454,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258446,
							"name": "validateRDSServerlessClusterProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 239,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258447,
									"name": "validateRDSServerlessClusterProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258448,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258395,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258449,
							"name": "validateRequiredProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 271,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258450,
									"name": "validateRequiredProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258451,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258382,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258409,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258410,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258411,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258412
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258417,
								258420,
								258422,
								258421,
								258482
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								258423,
								258427,
								258425,
								258429
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258476,
								258471,
								258479,
								258431,
								258455,
								258458,
								258465,
								258468,
								258483,
								258452,
								258446,
								258449,
								258409
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 135,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258395,
					"name": "RDSCdkServerlessClusterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258400,
							"name": "backupRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days during which automatic DB snapshots are retained.\nAutomatic backup retention cannot be disabled on serverless clusters.\nMust be a value from 1 day to 35 days.",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.days(1)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.backupRetention"
							}
						},
						{
							"id": 258399,
							"name": "clusterIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "An optional identifier for the cluster",
								"tags": [
									{
										"tag": "default",
										"text": "- A name is automatically generated.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.clusterIdentifier"
							}
						},
						{
							"id": 258397,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Credentials for the administrative user",
								"tags": [
									{
										"tag": "default",
										"text": "- A username of 'admin' and SecretsManager-generated password\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Credentials",
								"package": "aws-cdk-lib",
								"name": "Credentials"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.credentials"
							}
						},
						{
							"id": 258401,
							"name": "deletionProtection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Indicates whether the DB cluster should have deletion protection enabled.",
								"tags": [
									{
										"tag": "default",
										"text": "- true if removalPolicy is RETAIN, false otherwise\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deletionProtection"
							}
						},
						{
							"id": 258402,
							"name": "enableDataApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to enable the Data API.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 84,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.enableDataApi"
							}
						},
						{
							"id": 258406,
							"name": "parameterGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Additional parameters to pass to the database engine",
								"tags": [
									{
										"tag": "default",
										"text": "- no parameter group.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IParameterGroup",
								"package": "aws-cdk-lib",
								"name": "IParameterGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parameterGroup"
							}
						},
						{
							"id": 258404,
							"name": "removalPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The removal policy to apply when the cluster and its instances are removed\nfrom the stack or replaced during an update.",
								"tags": [
									{
										"tag": "default",
										"text": "- RemovalPolicy.SNAPSHOT (remove the cluster and instances, but retain a snapshot of the data)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 112,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RemovalPolicy",
								"package": "aws-cdk-lib",
								"name": "RemovalPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.removalPolicy"
							}
						},
						{
							"id": 258405,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Security group.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new security group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no VPC security groups will be associated with the DB cluster.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 258398,
							"name": "storageEncryptionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The KMS key for storage encryption.",
								"tags": [
									{
										"tag": "default",
										"text": "- the default master key will be used for storage encryption\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 306,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.storageEncryptionKey"
							}
						},
						{
							"id": 258407,
							"name": "subnetGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Existing subnet group for the cluster.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new subnet group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no subnet group will be associated with the DB cluster\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ISubnetGroup",
								"package": "aws-cdk-lib",
								"name": "ISubnetGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.subnetGroup"
							}
						},
						{
							"id": 258396,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							}
						},
						{
							"id": 258403,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the instances within the VPC.\nIf provided, the `vpc` property must also be specified.",
								"tags": [
									{
										"tag": "default",
										"text": "- the VPC default strategy if not specified.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258400,
								258399,
								258397,
								258401,
								258402,
								258406,
								258404,
								258405,
								258398,
								258407,
								258396,
								258403
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 102,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "ServerlessClusterProps",
									"package": "aws-cdk-lib",
									"name": "rds.ServerlessClusterProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "vpc"
										},
										{
											"type": "literal",
											"value": "engine"
										},
										{
											"type": "literal",
											"value": "defaultDatabaseName"
										},
										{
											"type": "literal",
											"value": "scaling"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 258382,
					"name": "RDSProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258383,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258384,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258385,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internallly created RDS cluster.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  cdk: {\n    cluster: {\n      clusterIdentifier: \"my-cluster\",\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 34,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 258395,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258385
											]
										}
									]
								}
							}
						},
						{
							"id": 258387,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Name of a database which is automatically created inside the cluster."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258386,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Database engine of the cluster. Cannot be changed once set."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258394,
								"name": "RDSEngineType"
							}
						},
						{
							"id": 258393,
							"name": "migrations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the directory that contains the migration scripts. The `RDS` construct uses [Kysely](https://koskimas.github.io/kysely/) to run and manage schema migrations. The `migrations` prop should point to the folder where your migration files are.",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"acme\",\n  migrations: \"path/to/migration/scripts\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258388,
							"name": "scaling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258389,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258390,
											"name": "autoPause",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The time before the cluster is paused.",
												"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
												"tags": [
													{
														"tag": "default",
														"text": "true\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 258392,
											"name": "maxCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The maximum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_16\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 81,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										},
										{
											"id": 258391,
											"name": "minCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The minimum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_2\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258390,
												258392,
												258391
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258383,
								258387,
								258386,
								258393,
								258388
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 258394,
					"name": "RDSEngineType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 100,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "mysql5.6"
							},
							{
								"type": "literal",
								"value": "mysql5.7"
							},
							{
								"type": "literal",
								"value": "postgresql10.14"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258408
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258395,
						258382
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						258394
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/RDS.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 260150,
			"name": "ReactStaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 260151,
					"name": "ReactStaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 260155,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ReactStaticSite.ts",
									"line": 12,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 260156,
									"name": "new ReactStaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 260157,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260158,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260159,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259379,
												"name": "StaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 260151,
										"name": "ReactStaticSite"
									},
									"overwrites": {
										"type": "reference",
										"id": 259415,
										"name": "StaticSite.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 259414,
								"name": "StaticSite.constructor"
							}
						},
						{
							"id": 260160,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260161,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260162,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 260165,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 260163,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 260164,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260162,
												260165,
												260163,
												260164
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259419,
								"name": "StaticSite.cdk"
							}
						},
						{
							"id": 260192,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259479,
								"name": "StaticSite.node"
							}
						},
						{
							"id": 260170,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260171,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259434,
								"name": "StaticSite.bucketArn"
							}
						},
						{
							"id": 260172,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260173,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259436,
								"name": "StaticSite.bucketName"
							}
						},
						{
							"id": 260168,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260169,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259432,
								"name": "StaticSite.customDomainUrl"
							}
						},
						{
							"id": 260176,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260177,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionDomain"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259440,
								"name": "StaticSite.distributionDomain"
							}
						},
						{
							"id": 260174,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260175,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259438,
								"name": "StaticSite.distributionId"
							}
						},
						{
							"id": 260166,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260167,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259430,
								"name": "StaticSite.url"
							}
						},
						{
							"id": 260190,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 260191,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259474,
										"name": "StaticSite.createRoute53Records"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259473,
								"name": "StaticSite.createRoute53Records"
							}
						},
						{
							"id": 260178,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260179,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 260180,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 260182,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 260183,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 260185,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260184,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		260185,
																		260184
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 260181,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														260182,
														260181
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259443,
										"name": "StaticSite.getConstructMetadata"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259442,
								"name": "StaticSite.getConstructMetadata"
							}
						},
						{
							"id": 260188,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 260189,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259470,
										"name": "StaticSite.lookupHostedZone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259469,
								"name": "StaticSite.lookupHostedZone"
							}
						},
						{
							"id": 260193,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 260194,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259481,
										"name": "StaticSite.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259480,
								"name": "StaticSite.toString"
							}
						},
						{
							"id": 260186,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 260187,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259468,
										"name": "StaticSite.validateCustomDomainSettings"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259467,
								"name": "StaticSite.validateCustomDomainSettings"
							}
						},
						{
							"id": 260152,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 260153,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260154,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259412,
										"name": "StaticSite.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259411,
								"name": "StaticSite.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								260155
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260160,
								260192
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								260170,
								260172,
								260168,
								260176,
								260174,
								260166
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								260190,
								260178,
								260188,
								260193,
								260186,
								260152
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ReactStaticSite.ts",
							"line": 11,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 259410,
							"name": "StaticSite"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						260151
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ReactStaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258828,
			"name": "Script",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258837,
					"name": "Script",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Script` construct is a higher level CDK construct that makes it easy to run a script in a Lambda function during the deployment process. It provides a simple way to build and bundle the script function; and allows you to pass parameter values based on outputs from other constructs in your SST app. So you don't have to hard code values in your script. You can configure a script to run before or after any of the stacks or resources are deployed in your app.",
						"text": "Since the script is running inside a Lambda function, it can interact with resources like the RDS databases, that are inside a VPC; and make AWS API calls to services that the IAM credentials in your local environment or CI might not have permissions to.\n\nA few things to note:\n- It does not run locally. It runs inside a Lambda function.\n- It gets run on every deployment.\n- It can run for a maximum of 15 minutes.\n- [Live Lambda Dev](../live-lambda-development.md) is not enabled for these functions.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal config\n\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/function.create\",\n  onUpdate: \"src/function.update\",\n  onDelete: \"src/function.delete\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 258841,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258842,
									"name": "new Script",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258843,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258844,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258845,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258829,
												"name": "ScriptProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258837,
										"name": "Script"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258846,
							"name": "createFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onCreate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258848,
							"name": "deleteFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onDelete `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 119,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258865,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258849,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 120,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 258829,
								"name": "ScriptProps"
							}
						},
						{
							"id": 258847,
							"name": "updateFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onUpdate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 258850,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 153,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258851,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grants additional permissions to the script",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nscript.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258852,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258863,
							"name": "checkDeprecatedFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 254,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258864,
									"name": "checkDeprecatedFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258859,
							"name": "createCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 231,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258860,
									"name": "createCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258861,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "App"
											}
										},
										{
											"id": 258862,
											"name": "crFunction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "aws-cdk-lib",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258857,
							"name": "createCustomResourceFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 216,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258858,
									"name": "createCustomResourceFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 258853,
							"name": "createUserFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 159,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 258854,
									"name": "createUserFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258855,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258856,
											"name": "fnDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259009,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 258866,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258867,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258838,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258839,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258840,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258841
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258846,
								258848,
								258865,
								258849,
								258847
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258850,
								258863,
								258859,
								258857,
								258853,
								258866,
								258838
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 107,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					]
				},
				{
					"id": 258829,
					"name": "ScriptProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258831,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258832,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258833,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Script.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258833
											]
										}
									]
								}
							}
						},
						{
							"id": 258834,
							"name": "onCreate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs when the Script is created.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onCreate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258836,
							"name": "onDelete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Create the function that runs when the Script is deleted from the stack.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onDelete: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258835,
							"name": "onUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs on every deploy after the Script is created",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onUpdate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 258830,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object of input parameters to be passed to the script. Made available in the `event` object of the function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/script.create\",\n  params: {\n    hello: \"world\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258831,
								258834,
								258836,
								258835,
								258830
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258837
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258829
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Script.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259378,
			"name": "StaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259410,
					"name": "StaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `StaticSite` construct is a higher level CDK construct that makes it easy to create a static website. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL. In addition:",
						"text": "- Visitors to the `http://` url will be redirected to the `https://` URL.\n- If a [domain alias](#domainalias) is configured, visitors to the alias domain will be redirected to the main one. So if `www.example.com` is the domain alias for `example.com`, visitors to `www.example.com` will be redirected to `example.com`.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\nThe `StaticSite` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Creating a plain HTML site\n\nDeploys a plain HTML website in the `path/to/src` directory.\n\n```js\nimport { StaticSite } from \"@serverless-stack/resources\";\n\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n\n### Creating a React site\n\n```js\nimport { StaticSiteErrorOptions } from \"@serverless-stack/resources\";\n\nnew StaticSite(this, \"ReactSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"build\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\nIf you are using [Create React App](https://create-react-app.dev), we created the [`ReactStaticSite`](ReactStaticSite.md) construct to make it even easier to deploy React apps.\n\n### Creating a Vue.js site\n\n```js\nnew StaticSite(this, \"VueJSSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\n### Creating a Gatsby site\n\n```js\nnew StaticSite(this, \"GatsbySite\", {\n  path: \"path/to/src\",\n  errorPage: \"404.html\",\n  buildOutput: \"public\",\n  buildCommand: \"npm run build\",\n});\n```\n\n### Creating a Jekyll site\n\n```js\nnew StaticSite(this, \"JekyllSite\", {\n  path: \"path/to/src\",\n  errorPage: \"404.html\",\n  buildOutput: \"_site\",\n  buildCommand: \"bundle exec jekyll build\",\n});\n```\n\n### Creating an Angular site\n\n```js\nnew StaticSite(this, \"AngularSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"ng build --output-path dist\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\n### Creating a Svelte site\n\n```js\nnew StaticSite(this, \"SvelteSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n  environment: {\n    // Pass in the API endpoint to our app\n    VITE_APP_API_URL: api.url,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259414,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 393,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259415,
									"name": "new StaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259416,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259417,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259418,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259379,
												"name": "StaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259410,
										"name": "StaticSite"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 259427,
							"name": "assets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 389,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Asset",
									"package": "aws-cdk-lib",
									"name": "Asset"
								}
							}
						},
						{
							"id": 259429,
							"name": "awsCliLayer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 391,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AwsCliLayer",
								"package": "aws-cdk-lib",
								"name": "AwsCliLayer"
							}
						},
						{
							"id": 259419,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259420,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259421,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 259424,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 259422,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 259423,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259421,
												259424,
												259422,
												259423
											]
										}
									]
								}
							}
						},
						{
							"id": 259428,
							"name": "filenamesAsset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 390,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Asset",
								"package": "aws-cdk-lib",
								"name": "Asset"
							}
						},
						{
							"id": 259426,
							"name": "isPlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 388,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259479,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 259425,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 387,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 259379,
								"name": "StaticSiteProps"
							}
						},
						{
							"id": 259434,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259435,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259436,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259437,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259432,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259433,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 259440,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259441,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259438,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259439,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259430,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259431,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 259450,
							"name": "buildApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 503,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259451,
									"name": "buildApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259452,
							"name": "bundleAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 539,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259453,
									"name": "bundleAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259454,
											"name": "fileSizeLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 259455,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 259456,
							"name": "bundleFilenamesAsset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 601,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259457,
									"name": "bundleFilenamesAsset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 259458,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										]
									}
								}
							]
						},
						{
							"id": 259471,
							"name": "createCertificate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 907,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259472,
									"name": "createCertificate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										]
									}
								}
							]
						},
						{
							"id": 259463,
							"name": "createCfDistribution",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 722,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259464,
									"name": "createCfDistribution",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Distribution",
										"package": "aws-cdk-lib",
										"name": "Distribution"
									}
								}
							]
						},
						{
							"id": 259465,
							"name": "createCloudFrontInvalidation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 791,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259466,
									"name": "createCloudFrontInvalidation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 259473,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259474,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259459,
							"name": "createS3Bucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259460,
									"name": "createS3Bucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Bucket",
										"package": "aws-cdk-lib",
										"name": "Bucket"
									}
								}
							]
						},
						{
							"id": 259461,
							"name": "createS3Deployment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 649,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259462,
									"name": "createS3Deployment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 259442,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259443,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259444,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259446,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259447,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259449,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259448,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259449,
																		259448
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259445,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259446,
														259445
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 259475,
							"name": "getS3ContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 985,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259476,
									"name": "getS3ContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 259469,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259470,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									}
								}
							]
						},
						{
							"id": 259477,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 1009,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 259478,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259480,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259481,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 259467,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259468,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 259411,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259412,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259413,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259414
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259427,
								259429,
								259419,
								259428,
								259426,
								259479,
								259425
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259434,
								259436,
								259432,
								259440,
								259438,
								259430
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259450,
								259452,
								259456,
								259471,
								259463,
								259465,
								259473,
								259459,
								259461,
								259442,
								259475,
								259469,
								259477,
								259480,
								259467,
								259411
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 368,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 259915,
							"name": "ViteStaticSite"
						},
						{
							"type": "reference",
							"id": 260151,
							"name": "ReactStaticSite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 259396,
					"name": "StaticSiteDomainProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure StaticSite domain properties"
					},
					"children": [
						{
							"id": 259400,
							"name": "alternateNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Additional domain names for the site. Note the certificate must cover these domains"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.alternateNames"
							}
						},
						{
							"id": 259402,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259403,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259405,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/BaseSite.ts",
													"line": 30,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 259404,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/BaseSite.ts",
													"line": 29,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259405,
												259404
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.cdk"
							}
						},
						{
							"id": 259398,
							"name": "domainAlias",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The domain alias of the site."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.domainAlias"
							}
						},
						{
							"id": 259397,
							"name": "domainName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The domain name of the site."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.domainName"
							}
						},
						{
							"id": 259399,
							"name": "hostedZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The hosted zone to use for the domain."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.hostedZone"
							}
						},
						{
							"id": 259401,
							"name": "isExternalDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is hosted outside of AWS"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 27,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.isExternalDomain"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259400,
								259402,
								259398,
								259397,
								259399,
								259401
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 260,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseSiteDomainProps"
						}
					]
				},
				{
					"id": 259406,
					"name": "StaticSiteFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259409,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 265,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259407,
							"name": "exclude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 263,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 259408,
							"name": "include",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 264,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259409,
								259407,
								259408
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 262,
							"character": 17
						}
					]
				},
				{
					"id": 259379,
					"name": "StaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259387,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259388,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259380,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259381,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259382,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 259383,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259382,
												259383
											]
										}
									]
								}
							}
						},
						{
							"id": 259391,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 259396,
										"name": "StaticSiteDomainProps"
									}
								]
							}
						},
						{
							"id": 259394,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259392,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 259386,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259389,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 259406,
									"name": "StaticSiteFileOptions"
								}
							}
						},
						{
							"id": 259385,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259384,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259393,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 259390,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							}
						},
						{
							"id": 259395,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259387,
								259388,
								259380,
								259391,
								259394,
								259392,
								259386,
								259389,
								259385,
								259384,
								259393,
								259390,
								259395
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 40,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 259897,
							"name": "ViteStaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259410
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259396,
						259406,
						259379
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/StaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258624,
			"name": "Table",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258658,
					"name": "Table",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Table` construct is a higher level CDK construct that makes it easy to create a [DynamoDB](https://aws.amazon.com/dynamodb/) table. It uses the following defaults:",
						"text": "- Defaults to using the [On-Demand capacity](https://aws.amazon.com/dynamodb/pricing/on-demand/) to make it perfectly serverless.\n- Enables [Point-in-Time Recovery](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html) to make sure that you don't lose your data.\n- Provides a nicer interface for defining indexes.\n"
					},
					"children": [
						{
							"id": 258662,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 237,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258663,
									"name": "new Table",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258664,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258665,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258666,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258625,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258658,
										"name": "Table"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258667,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 224,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258668,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258669,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Table` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITable",
												"package": "aws-cdk-lib",
												"name": "ITable"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258669
											]
										}
									]
								}
							}
						},
						{
							"id": 258670,
							"name": "dynamodbTableType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 230,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "CREATED"
									},
									{
										"type": "literal",
										"value": "IMPORTED"
									}
								]
							}
						},
						{
							"id": 258678,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 235,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258671,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258672,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 258673,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 258674,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 259080,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 258744,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258675,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 232,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 258676,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 233,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 258625,
								"name": "TableProps"
							}
						},
						{
							"id": 258677,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 234,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "StreamViewType",
								"package": "aws-cdk-lib",
								"name": "StreamViewType"
							}
						},
						{
							"id": 258685,
							"name": "tableArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 364,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258686,
									"name": "tableArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258687,
							"name": "tableName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 371,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258688,
									"name": "tableName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258722,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 528,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258723,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258724,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258725,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258726,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258642,
														"name": "TableConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 258689,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 386,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258690,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Define additional consumers for table events",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addConsumers(this, {\n  consumer1: \"src/consumer1.main\",\n  consumer2: \"src/consumer2.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258691,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258692,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 258693,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 258694,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 258695,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 259008,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 258642,
																	"name": "TableConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258679,
							"name": "addGlobalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258680,
									"name": "addGlobalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional global secondary indexes where the `key` is the name of the global secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addGlobalIndexes({\n  gsi1: {\n    partitionKey: \"pk\",\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258681,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 258647,
														"name": "TableGlobalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258682,
							"name": "addLocalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258683,
									"name": "addLocalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional local secondary indexes where the `key` is the name of the local secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addLocalIndexes({\n  lsi1: {\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258684,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 258653,
														"name": "TableLocalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258696,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 405,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258697,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to all consumers of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258698,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258699,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 419,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258700,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to a specific consumer of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258701,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258702,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258727,
							"name": "buildAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 588,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258728,
									"name": "buildAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258729,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 258730,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 258731,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 258732,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "TableFieldType"
														}
													}
												}
											}
										},
										{
											"id": 258733,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Attribute",
										"package": "aws-cdk-lib",
										"name": "Attribute"
									}
								}
							]
						},
						{
							"id": 258737,
							"name": "buildKinesisStreamSpec",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 614,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258738,
									"name": "buildKinesisStreamSpec",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258739,
											"name": "kinesisStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 259973,
												"name": "KinesisStream"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258734,
							"name": "buildStreamConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 600,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258735,
									"name": "buildStreamConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258736,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "new_image"
													},
													{
														"type": "literal",
														"value": "old_image"
													},
													{
														"type": "literal",
														"value": "new_and_old_images"
													},
													{
														"type": "literal",
														"value": "keys_only"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "StreamViewType",
												"package": "aws-cdk-lib",
												"name": "StreamViewType"
											}
										]
									}
								}
							]
						},
						{
							"id": 258720,
							"name": "createTable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 460,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258721,
									"name": "createTable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258706,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 447,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258707,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258708,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258710,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258711,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258713,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 258714,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 258716,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 258717,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 258718,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 258719,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													258718,
																													258719
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 258715,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							258716,
																							258715
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258712,
																	"name": "tableName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258713,
																		258712
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258709,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Table"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258710,
														258709
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258703,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258704,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given consumer.",
										"text": "```js\n const table = new Table(this, \"Table\", {\n   consumers: {\n     consumer1: \"./src/function.handler\",\n   }\n })\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
									},
									"parameters": [
										{
											"id": 258705,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 258745,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258746,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258740,
							"name": "validateFieldsAndIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258741,
									"name": "validateFieldsAndIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258742,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258743,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 258625,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258659,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258660,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258661,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258662
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258667,
								258670,
								258678,
								258671,
								258744,
								258675,
								258676,
								258677
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								258685,
								258687
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258722,
								258689,
								258679,
								258682,
								258696,
								258699,
								258727,
								258737,
								258734,
								258720,
								258706,
								258703,
								258745,
								258740,
								258659
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 223,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258642,
					"name": "TableConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258644,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 171,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258645,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258646,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created event source"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 175,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DynamoEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "DynamoEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258646
											]
										}
									]
								}
							}
						},
						{
							"id": 258643,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the table."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 170,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258644,
								258643
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 166,
							"character": 17
						}
					]
				},
				{
					"id": 258647,
					"name": "TableGlobalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258650,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258651,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258652,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created global secondary index"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "GlobalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "GlobalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "partitionKey"
															},
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258652
											]
										}
									]
								}
							}
						},
						{
							"id": 258648,
							"name": "partitionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as a partition key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 183,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 258649,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258650,
								258648,
								258649
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 179,
							"character": 17
						}
					]
				},
				{
					"id": 258653,
					"name": "TableLocalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258655,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258656,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258657,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created local secondary indexes"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 208,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "LocalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "LocalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258657
											]
										}
									]
								}
							}
						},
						{
							"id": 258654,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258655,
								258654
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 199,
							"character": 17
						}
					]
				},
				{
					"id": 258625,
					"name": "TableProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258639,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258640,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258641,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created cdk table"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITable",
														"package": "aws-cdk-lib",
														"name": "ITable"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "TableProps",
																"package": "aws-cdk-lib",
																"name": "TableProps"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "partitionKey"
																	},
																	{
																		"type": "literal",
																		"value": "sortKey"
																	}
																]
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258641
											]
										}
									]
								}
							}
						},
						{
							"id": 258638,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure DynamoDB streams and consumers",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nconst table = new Table(this, \"Table\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: \"src/consumer2.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 155,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 259008,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 258642,
												"name": "TableConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258635,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258636,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258637,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Table. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(this, \"Table\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { topicName: topic.topicName },\n      permissions: [topic],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 139,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258637
											]
										}
									]
								}
							}
						},
						{
							"id": 258626,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object defining the fields of the table. Key is the name of the field and the value is the type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258631,
							"name": "globalIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's global secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    gsi1pk: \"string\",\n    gsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"GSI1\": { partitionKey: \"gsi1pk\", sortKey: \"gsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 258647,
										"name": "TableGlobalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258633,
							"name": "kinesisStream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259973,
								"name": "KinesisStream"
							}
						},
						{
							"id": 258632,
							"name": "localIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's local secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    lsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"lsi1\": { sortKey: \"lsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 258653,
										"name": "TableLocalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 258627,
							"name": "primaryIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258628,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258629,
											"name": "partitionKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Define the Partition Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258630,
											"name": "sortKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the Sort Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\", sortKey: \"sk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258629,
												258630
											]
										}
									]
								}
							}
						},
						{
							"id": 258634,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the information that will be written to the Stream.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {8}\nnew Table(props.stack, \"Table\", {\n  stream: \"new_image\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "new_image"
									},
									{
										"type": "literal",
										"value": "old_image"
									},
									{
										"type": "literal",
										"value": "new_and_old_images"
									},
									{
										"type": "literal",
										"value": "keys_only"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258639,
								258638,
								258635,
								258626,
								258631,
								258633,
								258632,
								258627,
								258634
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258658
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258642,
						258647,
						258653,
						258625
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Table.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 258747,
			"name": "Topic",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 258766,
					"name": "Topic",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Topic` construct is a higher level CDK construct that makes it easy to create a serverless pub/sub service. You can create a topic that has a list of subscribers. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of subscribers; Function subscribers (subscribe with a Lambda function) or Queue subscribers (subscribe with a SQS queue).\n\nThis construct makes it easier to define a topic and its subscribers. It also internally connects the subscribers and topic together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Topic } from \"@serverless-stack/resources\";\n\nnew Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258770,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 155,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 258771,
									"name": "new Topic",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 258772,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258773,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258774,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 258748,
												"name": "TopicProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 258766,
										"name": "Topic"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 258775,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 145,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258776,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258777,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Topic` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 149,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITopic",
												"package": "aws-cdk-lib",
												"name": "ITopic"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258777
											]
										}
									]
								}
							}
						},
						{
							"id": 258825,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 258779,
							"name": "permissionsAttachedForAllSubscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 152,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 258780,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 258748,
								"name": "TopicProps"
							}
						},
						{
							"id": 258778,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 151,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 259080,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 258879,
											"name": "Queue"
										}
									]
								}
							}
						},
						{
							"id": 258785,
							"name": "subscriberFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 184,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258786,
									"name": "subscriberFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created function instances for the subscribers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 259080,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 258787,
							"name": "subscriptions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 193,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258788,
									"name": "subscriptions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of subscriptions for this topic"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Subscription",
											"package": "aws-cdk-lib",
											"name": "Subscription"
										}
									}
								}
							]
						},
						{
							"id": 258781,
							"name": "topicArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258782,
									"name": "topicArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258783,
							"name": "topicName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 177,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 258784,
									"name": "topicName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 258821,
							"name": "addFunctionSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258822,
									"name": "addFunctionSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258823,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258824,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258756,
														"name": "TopicFunctionSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258817,
							"name": "addQueueSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 328,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258818,
									"name": "addQueueSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258819,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258820,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 258761,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258813,
							"name": "addSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 306,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258814,
									"name": "addSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 258815,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258816,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 259008,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 258756,
														"name": "TopicFunctionSubscriberProps"
													},
													{
														"type": "reference",
														"id": 258879,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 258761,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258789,
							"name": "addSubscribers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 226,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258790,
									"name": "addSubscribers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add subscribers to the topic.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.addSubscribers(this, [\"src/subscriber3.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258791,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 258792,
											"name": "subscribers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 259008,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 258756,
															"name": "TopicFunctionSubscriberProps"
														},
														{
															"type": "reference",
															"id": 258879,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 258761,
															"name": "TopicQueueSubscriberProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258793,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 250,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258794,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the subscriber functions. This allows the subscribers to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258795,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258796,
							"name": "attachPermissionsToSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 268,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258797,
									"name": "attachPermissionsToSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the list of permissions to a given subscriber by index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n\ntopic.attachPermissionsToSubscriber(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258798,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 258799,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258811,
							"name": "createTopic",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 291,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 258812,
									"name": "createTopic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 258800,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 258801,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258802,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 258804,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 258805,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 258807,
																	"name": "subscribers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 258808,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 258809,
																						"name": "node",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "fn.node.addr"
																					},
																					{
																						"id": 258810,
																						"name": "stack",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							258809,
																							258810
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 258806,
																	"name": "topicArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		258807,
																		258806
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 258803,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Topic"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														258804,
														258803
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 258826,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 258827,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 258767,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 258768,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 258769,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								258770
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258775,
								258825,
								258779,
								258780,
								258778
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								258785,
								258787,
								258781,
								258783
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258821,
								258817,
								258813,
								258789,
								258793,
								258796,
								258811,
								258800,
								258826,
								258767
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 144,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 258756,
					"name": "TopicFunctionSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    function: \"src/function.handler\",\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258758,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258759,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258760,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258760
											]
										}
									]
								}
							}
						},
						{
							"id": 258757,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the subscriber function for the topic"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259009,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258758,
								258757
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 258748,
					"name": "TopicProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 258753,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258754,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258755,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the topic."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITopic",
														"package": "aws-cdk-lib",
														"name": "ITopic"
													},
													{
														"type": "reference",
														"qualifiedName": "TopicProps",
														"package": "aws-cdk-lib",
														"name": "TopicProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258755
											]
										}
									]
								}
							}
						},
						{
							"id": 258749,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258750,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258751,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Topic. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Topic(props.stack, \"Topic\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258751
											]
										}
									]
								}
							}
						},
						{
							"id": 258752,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of subscribers to create for this topic",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Topic(this, \"Topic\", {\n  subscribers: [\n    \"src/function1.handler\",\n    \"src/function2.handler\"\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 259008,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 258756,
											"name": "TopicFunctionSubscriberProps"
										},
										{
											"type": "reference",
											"id": 258879,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 258761,
											"name": "TopicQueueSubscriberProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258753,
								258749,
								258752
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 258761,
					"name": "TopicQueueSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    queue: new Queue(this, \"Queue\", {\n      consumer: \"src/function.handler\",\n    })\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 258763,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 258764,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 258765,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "SqsSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												258765
											]
										}
									]
								}
							}
						},
						{
							"id": 258762,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue that'll be added as a subscriber to the topic."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 258879,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								258763,
								258762
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 109,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						258766
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						258756,
						258748,
						258761
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Topic.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259896,
			"name": "ViteStaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 259915,
					"name": "ViteStaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ViteStaticSite` construct is a higher level CDK construct that makes it easy to create a Vite single page app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.",
						"text": "It's designed to work with static sites built with [Vite](https://vitejs.dev/). It allows you to [automatically set environment variables](#configuring-environment-variables) in your Vite app directly from the outputs of your SST app. And it can also create a `.d.ts` type definition file for the environment variables.\n\nThe `ViteStaticSite` construct internally extends the [`StaticSite`](StaticSite.md) construct with the following pre-configured defaults.\n\n- [`indexPage`](StaticSite.md#indexpage) is set to `index.html`.\n- [`errorPage`](StaticSite.md#errorpage) is set to `redirect_to_index_page`. So error pages are redirected to the index page.\n- [`buildCommand`](StaticSite.md#buildcommand) is `npm run build`.\n- [`buildOutput`](StaticSite.md#buildoutput) is the `dist` folder in your Vite app.\n- [`fileOptions`](StaticSite.md#fileoptions) sets the cache control to `max-age=0,no-cache,no-store,must-revalidate` for HTML files; and `max-age=31536000,public,immutable` for JS/CSS files.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n```js\nnew ViteStaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 259919,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ViteStaticSite.ts",
									"line": 52,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259920,
									"name": "new ViteStaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259921,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 259922,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 259923,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259897,
												"name": "ViteStaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259915,
										"name": "ViteStaticSite"
									},
									"overwrites": {
										"type": "reference",
										"id": 259415,
										"name": "StaticSite.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 259414,
								"name": "StaticSite.constructor"
							}
						},
						{
							"id": 259924,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259925,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259926,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 259929,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 259927,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 259928,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259926,
												259929,
												259927,
												259928
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259419,
								"name": "StaticSite.cdk"
							}
						},
						{
							"id": 259956,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259479,
								"name": "StaticSite.node"
							}
						},
						{
							"id": 259934,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259935,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259434,
								"name": "StaticSite.bucketArn"
							}
						},
						{
							"id": 259936,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259937,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259436,
								"name": "StaticSite.bucketName"
							}
						},
						{
							"id": 259932,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259933,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259432,
								"name": "StaticSite.customDomainUrl"
							}
						},
						{
							"id": 259940,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259941,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionDomain"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259440,
								"name": "StaticSite.distributionDomain"
							}
						},
						{
							"id": 259938,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259939,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259438,
								"name": "StaticSite.distributionId"
							}
						},
						{
							"id": 259930,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 259931,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259430,
								"name": "StaticSite.url"
							}
						},
						{
							"id": 259954,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259955,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259474,
										"name": "StaticSite.createRoute53Records"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259473,
								"name": "StaticSite.createRoute53Records"
							}
						},
						{
							"id": 259942,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 259943,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 259944,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 259946,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 259947,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259949,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 259948,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259949,
																		259948
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 259945,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														259946,
														259945
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259443,
										"name": "StaticSite.getConstructMetadata"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259442,
								"name": "StaticSite.getConstructMetadata"
							}
						},
						{
							"id": 259952,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259953,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259470,
										"name": "StaticSite.lookupHostedZone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259469,
								"name": "StaticSite.lookupHostedZone"
							}
						},
						{
							"id": 259957,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 259958,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259481,
										"name": "StaticSite.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259480,
								"name": "StaticSite.toString"
							}
						},
						{
							"id": 259950,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 259951,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259468,
										"name": "StaticSite.validateCustomDomainSettings"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259467,
								"name": "StaticSite.validateCustomDomainSettings"
							}
						},
						{
							"id": 259916,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 259917,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 259918,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 259412,
										"name": "StaticSite.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 259411,
								"name": "StaticSite.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								259919
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259924,
								259956
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								259934,
								259936,
								259932,
								259940,
								259938,
								259930
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								259954,
								259942,
								259952,
								259957,
								259950,
								259916
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ViteStaticSite.ts",
							"line": 51,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 259410,
							"name": "StaticSite"
						}
					]
				},
				{
					"id": 259897,
					"name": "ViteStaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 259906,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259387,
								"name": "StaticSiteProps.buildCommand"
							}
						},
						{
							"id": 259907,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259388,
								"name": "StaticSiteProps.buildOutput"
							}
						},
						{
							"id": 259899,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 259900,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 259901,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 259902,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												259901,
												259902
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259380,
								"name": "StaticSiteProps.cdk"
							}
						},
						{
							"id": 259910,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 259396,
										"name": "StaticSiteDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259391,
								"name": "StaticSiteProps.customDomain"
							}
						},
						{
							"id": 259913,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259394,
								"name": "StaticSiteProps.disablePlaceholder"
							}
						},
						{
							"id": 259911,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259392,
								"name": "StaticSiteProps.environment"
							}
						},
						{
							"id": 259905,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259386,
								"name": "StaticSiteProps.errorPage"
							}
						},
						{
							"id": 259908,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 259406,
									"name": "StaticSiteFileOptions"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259389,
								"name": "StaticSiteProps.fileOptions"
							}
						},
						{
							"id": 259904,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259385,
								"name": "StaticSiteProps.indexPage"
							}
						},
						{
							"id": 259903,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259384,
								"name": "StaticSiteProps.path"
							}
						},
						{
							"id": 259912,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259393,
								"name": "StaticSiteProps.purgeFiles"
							}
						},
						{
							"id": 259909,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259390,
								"name": "StaticSiteProps.replaceValues"
							}
						},
						{
							"id": 259898,
							"name": "typesPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The path where code-gen should place the type definition for environment variables",
								"tags": [
									{
										"tag": "default",
										"text": "\"src/sst-env.d.ts\""
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ViteStaticSite(props.stack, \"Site\", {\n  typesFile: \"./other/path/sst-env.d.ts\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ViteStaticSite.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 259914,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 259395,
								"name": "StaticSiteProps.waitForInvalidation"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								259906,
								259907,
								259899,
								259910,
								259913,
								259911,
								259905,
								259908,
								259904,
								259903,
								259912,
								259909,
								259898,
								259914
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ViteStaticSite.ts",
							"line": 11,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 259379,
							"name": "StaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						259915
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						259897
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ViteStaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 260036,
			"name": "WebSocketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 260061,
					"name": "WebSocketApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `WebSocketApi` construct is a higher level CDK construct that makes it easy to create a WebSocket API. It provides a simple way to define your routes and allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains. See the [examples](#examples) for more details.",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { WebSocketApi } from \"@serverless-stack/resources\";\n\nnew WebSocketApi(this, \"Api\", {\n  routes: {\n    $connect: \"src/connect.main\",\n    $default: \"src/default.main\",\n    $disconnect: \"src/disconnect.main\",\n    sendMessage: \"src/sendMessage.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 260065,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 207,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 260066,
									"name": "new WebSocketApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 260067,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260068,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260069,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 260037,
												"name": "WebSocketApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 260061,
										"name": "WebSocketApi"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 260077,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 198,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260083,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "reference",
										"qualifiedName": "WebSocketLambdaAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
										"name": "WebSocketLambdaAuthorizer"
									}
								]
							}
						},
						{
							"id": 260070,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 176,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260071,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260074,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created log group"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 188,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 260076,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created certificate"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 196,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 260075,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created domain name"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 260072,
											"name": "webSocketApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created websocket api"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 180,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "WebSocketApi"
											}
										},
										{
											"id": 260073,
											"name": "webSocketStage",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created websocket stage"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketStage",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "WebSocketStage"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260074,
												260076,
												260075,
												260072,
												260073
											]
										}
									]
								}
							}
						},
						{
							"id": 260078,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 199,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260079,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 260080,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 260081,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 259080,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 260147,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 260082,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 200,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 260084,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 205,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 260037,
								"name": "WebSocketApiProps"
							}
						},
						{
							"id": 260091,
							"name": "_connectionsArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 251,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260092,
									"name": "_connectionsArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 260087,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 240,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260088,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Custom domain url if it's configured"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 260089,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 247,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260090,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of routes of the websocket api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 260085,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 233,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 260086,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Url of the websocket api"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 260129,
							"name": "addAuthorizer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260130,
									"name": "addAuthorizer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260131,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 466,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260132,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260133,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260134,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260135,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 259009,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 259080,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 260093,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260094,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add routes to an already created WebSocket API",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes({\n  \"$connect\": \"src/connect.main\",\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260095,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 260096,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 260097,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 260098,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 260099,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"id": 259009,
															"name": "FunctionDefinition"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260103,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 307,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260104,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260105,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260106,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 323,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260107,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.attachPermissionsToRoute(\"$connect\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260108,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 260109,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260136,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 533,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260137,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 260138,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 260139,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"NONE\""
														},
														{
															"id": 260140,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																260139,
																260140
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 260141,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 260142,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"CUSTOM\""
														},
														{
															"id": 260143,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"qualifiedName": "WebSocketLambdaAuthorizer",
																		"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
																		"name": "WebSocketLambdaAuthorizer"
																	}
																]
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																260142,
																260143
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 260125,
							"name": "createWebSocketApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260126,
									"name": "createWebSocketApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260127,
							"name": "createWebSocketStage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 377,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260128,
									"name": "createWebSocketStage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 260110,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 337,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260111,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 260112,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 260114,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 260115,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 260117,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260116,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 260118,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 260119,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 260121,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 260122,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 260123,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 260124,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													260123,
																													260124
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 260120,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "routeKey"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							260121,
																							260120
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		260117,
																		260116,
																		260118
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 260113,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "WebSocketApi"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														260114,
														260113
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 260100,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 294,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 260101,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `$connect`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst fn = api.getFunction(\"$connect\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260102,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 259080,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 260144,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 546,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 260145,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 260146,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 260148,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 260149,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 260062,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 260063,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 260064,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								260065
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260077,
								260083,
								260070,
								260078,
								260147,
								260082,
								260084
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								260091,
								260087,
								260089,
								260085
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								260129,
								260131,
								260093,
								260103,
								260106,
								260136,
								260125,
								260127,
								260110,
								260100,
								260144,
								260148,
								260062
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 175,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 260057,
					"name": "WebSocketApiCdkStageProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260059,
							"name": "autoDeploy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether updates to an API automatically trigger a new deployment.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-apigatewayv2-alpha/lib/common/stage.d.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.autoDeploy"
							}
						},
						{
							"id": 260060,
							"name": "domainMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The options for custom domain and api mapping",
								"tags": [
									{
										"tag": "default",
										"text": "- no custom domain and api mapping configuration\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-apigatewayv2-alpha/lib/common/stage.d.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "DomainMappingOptions",
								"package": "@aws-cdk/aws-apigatewayv2-alpha",
								"name": "DomainMappingOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.domainMapping"
							}
						},
						{
							"id": 260058,
							"name": "stageName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 151,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260059,
								260060,
								260058
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 149,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "WebSocketStageProps",
									"package": "@aws-cdk/aws-apigatewayv2-alpha",
									"name": "apig.WebSocketStageProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "webSocketApi"
										},
										{
											"type": "literal",
											"value": "stageName"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 260049,
					"name": "WebSocketApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260054,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260055,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260056,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 145,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "WebSocketLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260056
											]
										}
									]
								}
							}
						},
						{
							"id": 260053,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 143,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 259080,
								"name": "Function"
							}
						},
						{
							"id": 260052,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 142,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 260051,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 141,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 260050,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 140,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260054,
								260053,
								260052,
								260051,
								260050
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 139,
							"character": 17
						}
					]
				},
				{
					"id": 260037,
					"name": "WebSocketApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 260043,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  accessLog: true\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  accessLog: {\n    retention: \"one_week\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 260045,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "reference",
										"id": 260049,
										"name": "WebSocketApiLambdaAuthorizer"
									}
								]
							}
						},
						{
							"id": 260038,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260039,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260040,
											"name": "webSocketApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created WebSocket API",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(props.stack, \"WebSocketApi\", {\n  cdk: {\n    webSocketApi: {\n      apiName: \"my-websocket-api\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 38,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IWebSocketApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IWebSocketApi"
													},
													{
														"type": "reference",
														"qualifiedName": "WebSocketApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "WebSocketApiProps"
													}
												]
											}
										},
										{
											"id": 260041,
											"name": "webSocketStage",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created WebSocket Stage",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(props.stack, \"WebSocketApi\", {\n  cdk: {\n    webSocketStage: {\n      autoDeploy: false\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IWebSocketStage",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IWebSocketStage"
													},
													{
														"type": "reference",
														"id": 260057,
														"name": "WebSocketApiCdkStageProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260040,
												260041
											]
										}
									]
								}
							}
						},
						{
							"id": 260044,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 112,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 260046,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 117,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 260047,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 260048,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 134,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 259010,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												260048
											]
										}
									]
								}
							}
						},
						{
							"id": 260042,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The routes for the Websocket API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  routes: {\n    $connect    : \"src/connect.main\",\n    $default    : \"src/default.main\",\n    $disconnect : \"src/disconnect.main\",\n    sendMessage : \"src/sendMessage.main\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 259009,
										"name": "FunctionDefinition"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								260043,
								260045,
								260038,
								260044,
								260046,
								260042
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						260061
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						260057,
						260049,
						260037
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/WebSocketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				258139,
				260195,
				259632,
				258485,
				258918,
				258332,
				259270,
				259006,
				259802,
				259959,
				259482,
				258868,
				258381,
				260150,
				258828,
				259378,
				258624,
				258747,
				259896,
				260036
			]
		}
	]
}