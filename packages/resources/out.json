{
	"id": 128960,
	"name": "@serverless-stack/resources",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 128961,
			"name": "Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129045,
					"name": "Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Api construct is a higher level CDK construct that makes it easy to create an API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains.",
						"tags": [
							{
								"tag": "example",
								"text": "\nThe `Api` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Using the minimal config\n\n```ts\nimport { Api } from \"@serverless-stack/resources\";\n\nnew Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n    \"POST   /notes\": \"src/create.main\",\n    \"GET    /notes/{id}\": \"src/get.main\",\n    \"PUT    /notes/{id}\": \"src/update.main\",\n    \"DELETE /notes/{id}\": \"src/delete.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129049,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 430,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129050,
									"name": "new Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 129051,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 129052,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129053,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129054,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 128963,
												"typeArguments": [
													{
														"type": "reference",
														"id": 129051,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 129051,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129045,
										"typeArguments": [
											{
												"type": "reference",
												"id": 129051,
												"name": "Authorizers"
											}
										],
										"name": "Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129062,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 423,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129067,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 427,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IHttpRouteAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "IHttpRouteAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129055,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 404,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129056,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129058,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 412,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 129060,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 420,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 129059,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 416,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 129057,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 408,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129058,
												129060,
												129059,
												129057
											]
										}
									]
								}
							}
						},
						{
							"id": 129150,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129068,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 428,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 129061,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 422,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 128963,
								"typeArguments": [
									{
										"type": "reference",
										"id": 129051,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 129051,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiProps"
							}
						},
						{
							"id": 129063,
							"name": "routesData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 424,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129064,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 129065,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 129066,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 129902,
													"name": "Fn"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"qualifiedName": "IApplicationListener",
													"package": "aws-cdk-lib",
													"name": "elb.IApplicationListener"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 129071,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129072,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 129075,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 472,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129076,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129073,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129074,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 129069,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 447,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129070,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129110,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 686,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129111,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129112,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129051,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129113,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 766,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129114,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129115,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129116,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129117,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 128985,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 129051,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129077,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 489,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129078,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created. Specify an object with the key being the route as a string and the value is either a [`FunctionDefinition`](Function.md#functiondefinition) or the [`ApiFunctionRouteProps`](#apifunctionrouteprops).",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129079,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129080,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 128985,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 129051,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129084,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 531,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129085,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js {10}\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET /notes\": \"src/list.main\",\n  },\n});\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129086,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129087,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 553,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129088,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {11}\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129089,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129090,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129136,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 985,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129137,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129138,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 128987,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 129051,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiFunctionRouteProps"
													},
													{
														"type": "reference",
														"id": 128994,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 129051,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiHttpRouteProps"
													},
													{
														"type": "reference",
														"id": 129003,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 129051,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiAlbRouteProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 129139,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 129142,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 129140,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"none\""
														},
														{
															"id": 129141,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "HttpNoneAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "HttpNoneAuthorizer"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																129142,
																129140,
																129141
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 129143,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 129146,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 129144,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "user_pool"
																	},
																	{
																		"type": "literal",
																		"value": "jwt"
																	},
																	{
																		"type": "literal",
																		"value": "lambda"
																	}
																]
															}
														},
														{
															"id": 129145,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "IHttpRouteAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "IHttpRouteAuthorizer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																129146,
																129144,
																129145
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 129124,
							"name": "createAlbIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 899,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129125,
									"name": "createAlbIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129126,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129127,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129128,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129003,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 129051,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiAlbRouteProps"
											}
										},
										{
											"id": 129129,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 129130,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 920,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 129131,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129132,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129133,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129134,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 128987,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 129051,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 129135,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 129108,
							"name": "createHttpApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 585,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129109,
									"name": "createHttpApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129118,
							"name": "createHttpIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 878,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129119,
									"name": "createHttpIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129120,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129121,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129122,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 128994,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 129051,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiHttpRouteProps"
											}
										},
										{
											"id": 129123,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 129091,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 567,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129092,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129093,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129095,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129096,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129100,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129097,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "false"
																},
																{
																	"id": 129099,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129101,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 129102,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 129104,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 129105,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 129106,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 129107,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													129106,
																													129107
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 129103,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							129104,
																							129103
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129098,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129100,
																		129097,
																		129099,
																		129101,
																		129098
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129094,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129095,
														129094
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129081,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 512,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129082,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129083,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 129902,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 129147,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 1020,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129148,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129149,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129151,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129152,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129046,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129047,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129048,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129049
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129062,
								129067,
								129055,
								129150,
								129068,
								129061,
								129063
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								129071,
								129075,
								129073,
								129069
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129110,
								129113,
								129077,
								129084,
								129087,
								129136,
								129124,
								129130,
								129108,
								129118,
								129091,
								129081,
								129147,
								129151,
								129046
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 398,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 129153,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129003,
					"name": "ApiAlbRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to an ALB",
						"tags": [
							{
								"tag": "example",
								"text": "\nDOCTODO: Need to complete example\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"alb\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129010,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 129009,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 129011,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 129011,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 129005,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 317,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129006,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129007,
											"name": "albListener",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The listener to the application load balancer used for the integration."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 321,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IApplicationListener",
												"package": "aws-cdk-lib",
												"name": "IApplicationListener"
											}
										},
										{
											"id": 129008,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 322,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpAlbIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpAlbIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129007,
												129008
											]
										}
									]
								}
							}
						},
						{
							"id": 129004,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 316,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "alb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129010,
								129009,
								129005,
								129004
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 314,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 129011,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 129011,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 128987,
					"name": "ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 128992,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 128991,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 128993,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 128993,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 128989,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition used to create the function for this route."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 128990,
							"name": "payloadFormatVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The payload format version for the route.",
								"tags": [
									{
										"tag": "default",
										"text": "\"2.0\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 266,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "1.0"
									},
									{
										"type": "literal",
										"value": "2.0"
									}
								]
							}
						},
						{
							"id": 128988,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 256,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								128992,
								128991,
								128989,
								128990,
								128988
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 254,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 128993,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 128993,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 128994,
					"name": "ApiHttpRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to another URL",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"url\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129001,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 129000,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 129002,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 129002,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 128997,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 292,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 128998,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 128999,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Override the underlying CDK integration"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 296,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUrlIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpUrlIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												128999
											]
										}
									]
								}
							}
						},
						{
							"id": 128995,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is a constant"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 287,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "url"
							}
						},
						{
							"id": 128996,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL to forward to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129001,
								129000,
								128997,
								128995,
								128996
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 282,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 129002,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 129002,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 129024,
					"name": "ApiJwtAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129030,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 356,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129031,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129032,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpJwtAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpJwtAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129032
											]
										}
									]
								}
							}
						},
						{
							"id": 129034,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 129026,
							"name": "jwt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 352,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129027,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129029,
											"name": "audience",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 354,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 129028,
											"name": "issuer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 353,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129029,
												129028
											]
										}
									]
								}
							}
						},
						{
							"id": 129033,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 129025,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 351,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "jwt"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129030,
								129034,
								129026,
								129033,
								129025
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 350,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 129035,
					"name": "ApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129040,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 367,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129041,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129042,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 368,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129042
											]
										}
									]
								}
							}
						},
						{
							"id": 129037,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 364,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129044,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 129043,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 129038,
							"name": "responseTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 365,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "SIMPLE"
										},
										{
											"type": "literal",
											"value": "IAM"
										}
									]
								}
							}
						},
						{
							"id": 129039,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 366,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							}
						},
						{
							"id": 129036,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 363,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129040,
								129037,
								129044,
								129043,
								129038,
								129039,
								129036
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 362,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 128963,
					"name": "ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 128970,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 128972,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 128983,
								"name": "Authorizers"
							}
						},
						{
							"id": 128964,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 128965,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 128966,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 128967,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												128966,
												128967
											]
										}
									]
								}
							}
						},
						{
							"id": 128969,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							}
						},
						{
							"id": 128971,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 128973,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure various defaults to be applied accross all routes"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 128974,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 128977,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 185,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 128976,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 128984,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 128984,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 128975,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n  routes: {\n    \"GET  /notes\": \"src/list.main\",\n    \"POST /notes\": \"src/create.main\",\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 174,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										},
										{
											"id": 128978,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 190,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 128979,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 191,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 128980,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 128981,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 206,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 128982,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 221,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																128981,
																128982
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												128977,
												128976,
												128975,
												128978,
												128979
											]
										}
									]
								}
							}
						},
						{
							"id": 128968,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\n{\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 128985,
										"typeArguments": [
											{
												"type": "reference",
												"id": 128984,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								128970,
								128972,
								128964,
								128969,
								128971,
								128973,
								128968
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 35,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 128983,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 128984,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 128983,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 129012,
					"name": "ApiUserPoolAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129019,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 344,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129020,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129021,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 345,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUserPoolAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpUserPoolAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129021
											]
										}
									]
								}
							}
						},
						{
							"id": 129023,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 333,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 129022,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 129013,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 338,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pool"
							}
						},
						{
							"id": 129014,
							"name": "userPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 339,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129015,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129017,
											"name": "clientIds",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 341,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 129016,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 340,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129018,
											"name": "region",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129017,
												129016,
												129018
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129019,
								129023,
								129022,
								129013,
								129014
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 337,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 128962,
					"name": "ApiPayloadFormatVersion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "PayloadFormatVersions"
							}
						}
					}
				},
				{
					"id": 128985,
					"name": "ApiRouteProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 226,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 128986,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 129830,
								"name": "FunctionInlineDefinition"
							},
							{
								"type": "reference",
								"id": 128987,
								"typeArguments": [
									{
										"type": "reference",
										"id": 128986,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiFunctionRouteProps"
							},
							{
								"type": "reference",
								"id": 128994,
								"typeArguments": [
									{
										"type": "reference",
										"id": 128986,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiHttpRouteProps"
							},
							{
								"type": "reference",
								"id": 129003,
								"typeArguments": [
									{
										"type": "reference",
										"id": 128986,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiAlbRouteProps"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129045
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129003,
						128987,
						128994,
						129024,
						129035,
						128963,
						129012
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						128962,
						128985
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129307,
			"name": "Auth",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129370,
					"name": "Auth",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Auth` construct is a higher level CDK construct that makes it easy to configure a [Cognito User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [Cognito Identity Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html). Also, allows setting up Auth0, Facebook, Google, Twitter, Apple, and Amazon as authentication providers."
					},
					"children": [
						{
							"id": 129374,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 121,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129375,
									"name": "new Auth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129376,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129377,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129378,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129308,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129370,
										"name": "Auth"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129379,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 110,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129380,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129384,
											"name": "authRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 114,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 129383,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										},
										{
											"id": 129385,
											"name": "unauthRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 115,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 129381,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPool",
												"package": "aws-cdk-lib",
												"name": "IUserPool"
											}
										},
										{
											"id": 129382,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPoolClient",
												"package": "aws-cdk-lib",
												"name": "IUserPoolClient"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129384,
												129383,
												129385,
												129381,
												129382
											]
										}
									]
								}
							}
						},
						{
							"id": 129387,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 118,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129388,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 129389,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 129390,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 129902,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 129443,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129391,
							"name": "permissionsAttachedForAllTriggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 129386,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 129308,
								"name": "AuthProps"
							}
						},
						{
							"id": 129392,
							"name": "cognitoIdentityPoolId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 317,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129393,
									"name": "cognitoIdentityPoolId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129431,
							"name": "addTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 411,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129432,
									"name": "addTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129433,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129434,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 129331,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 129435,
											"name": "triggerValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129831,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 129436,
											"name": "functionProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 129428,
							"name": "addTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129429,
									"name": "addTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129430,
											"name": "cognitoProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129321,
												"name": "AuthCognitoProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129394,
							"name": "attachPermissionsForAuthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 321,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129395,
									"name": "attachPermissionsForAuthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129396,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129403,
							"name": "attachPermissionsForTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 336,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129404,
									"name": "attachPermissionsForTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129405,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 129331,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 129406,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129400,
							"name": "attachPermissionsForTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 329,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129401,
									"name": "attachPermissionsForTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129402,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129397,
							"name": "attachPermissionsForUnauthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 325,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129398,
									"name": "attachPermissionsForUnauthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129399,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129425,
							"name": "checkDeprecatedProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 368,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129426,
									"name": "checkDeprecatedProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129427,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129308,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129437,
							"name": "createAuthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129438,
									"name": "createAuthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129439,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 129440,
							"name": "createUnauthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129441,
									"name": "createUnauthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129442,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 129410,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 354,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129411,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129412,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129414,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129415,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129416,
																	"name": "identityPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129418,
																	"name": "triggers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 129419,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 129421,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 129422,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 129423,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 129424,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													129423,
																													129424
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 129420,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							129421,
																							129420
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129417,
																	"name": "userPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129416,
																		129418,
																		129417
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129413,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Auth"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129414,
														129413
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129407,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129408,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129409,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 129331,
													"name": "AuthUserPoolTriggers"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 129902,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 129444,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129445,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129371,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129372,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129373,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129374
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129379,
								129387,
								129443,
								129391,
								129386
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								129392
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129431,
								129428,
								129394,
								129403,
								129400,
								129397,
								129425,
								129437,
								129440,
								129410,
								129407,
								129444,
								129371
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 109,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129347,
					"name": "AuthAmazonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129348,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129348
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 76,
							"character": 17
						}
					]
				},
				{
					"id": 129349,
					"name": "AuthAppleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129350,
							"name": "servicesId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129350
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 80,
							"character": 17
						}
					]
				},
				{
					"id": 129344,
					"name": "AuthAuth0Props",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129346,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129345,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129346,
								129345
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 71,
							"character": 17
						}
					]
				},
				{
					"id": 129358,
					"name": "AuthCdkCfnIdentityPoolProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129360,
							"name": "allowClassicFlow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enables the Basic (Classic) authentication flow.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowClassicFlow"
							}
						},
						{
							"id": 129359,
							"name": "allowUnauthenticatedIdentities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 129361,
							"name": "cognitoEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The events to configure.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoEvents"
							}
						},
						{
							"id": 129362,
							"name": "cognitoIdentityProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Cognito user pools and their client IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"qualifiedName": "IResolvable",
													"package": "aws-cdk-lib",
													"name": "IResolvable"
												},
												{
													"type": "reference",
													"qualifiedName": "CfnIdentityPool.CognitoIdentityProviderProperty",
													"package": "aws-cdk-lib",
													"name": "CognitoIdentityProviderProperty"
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoIdentityProviders"
							}
						},
						{
							"id": 129363,
							"name": "cognitoStreams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Configuration options for configuring Amazon Cognito streams.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.CognitoStreamsProperty",
										"package": "aws-cdk-lib",
										"name": "CognitoStreamsProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoStreams"
							}
						},
						{
							"id": 129364,
							"name": "developerProviderName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The \"domain\" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 100\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.developerProviderName"
							}
						},
						{
							"id": 129365,
							"name": "identityPoolName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of your Amazon Cognito identity pool.",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.identityPoolName"
							}
						},
						{
							"id": 129366,
							"name": "openIdConnectProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the OpenID connect providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.openIdConnectProviderArns"
							}
						},
						{
							"id": 129367,
							"name": "pushSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The configuration options to be applied to the identity pool.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.PushSyncProperty",
										"package": "aws-cdk-lib",
										"name": "PushSyncProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.pushSync"
							}
						},
						{
							"id": 129368,
							"name": "samlProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.samlProviderArns"
							}
						},
						{
							"id": 129369,
							"name": "supportedLoginProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that map provider names to provider app IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 88,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.supportedLoginProviders"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129360,
								129359,
								129361,
								129362,
								129363,
								129364,
								129365,
								129366,
								129367,
								129368,
								129369
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 97,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "CfnIdentityPoolProps",
									"package": "aws-cdk-lib",
									"name": "cognito.CfnIdentityPoolProps"
								},
								{
									"type": "literal",
									"value": "allowUnauthenticatedIdentities"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 129321,
					"name": "AuthCognitoProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129322,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129323,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129324,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPool",
														"package": "aws-cdk-lib",
														"name": "IUserPool"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolProps",
														"package": "aws-cdk-lib",
														"name": "UserPoolProps"
													}
												]
											}
										},
										{
											"id": 129325,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 46,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPoolClient",
														"package": "aws-cdk-lib",
														"name": "IUserPoolClient"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolClientOptions",
														"package": "aws-cdk-lib",
														"name": "UserPoolClientOptions"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129324,
												129325
											]
										}
									]
								}
							}
						},
						{
							"id": 129326,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129327,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129328,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 49,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129328
											]
										}
									]
								}
							}
						},
						{
							"id": 129330,
							"name": "signInAliases",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SignInAliases",
								"package": "aws-cdk-lib",
								"name": "SignInAliases"
							}
						},
						{
							"id": 129329,
							"name": "triggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129331,
								"name": "AuthUserPoolTriggers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129322,
								129326,
								129330,
								129329
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 129351,
					"name": "AuthFacebookProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129352,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129352
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 84,
							"character": 17
						}
					]
				},
				{
					"id": 129353,
					"name": "AuthGoogleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129354,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129354
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 88,
							"character": 17
						}
					]
				},
				{
					"id": 129308,
					"name": "AuthProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129311,
							"name": "amazon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129347,
								"name": "AuthAmazonProps"
							}
						},
						{
							"id": 129312,
							"name": "apple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129349,
								"name": "AuthAppleProps"
							}
						},
						{
							"id": 129310,
							"name": "auth0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129344,
								"name": "AuthAuth0Props"
							}
						},
						{
							"id": 129316,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129317,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129318,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 36,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129358,
												"name": "AuthCdkCfnIdentityPoolProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129318
											]
										}
									]
								}
							}
						},
						{
							"id": 129309,
							"name": "cognito",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 129321,
										"name": "AuthCognitoProps"
									}
								]
							}
						},
						{
							"id": 129319,
							"name": "cognitoUserPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPool",
								"package": "aws-cdk-lib",
								"name": "IUserPool"
							}
						},
						{
							"id": 129320,
							"name": "cognitoUserPoolClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPoolClient",
								"package": "aws-cdk-lib",
								"name": "IUserPoolClient"
							}
						},
						{
							"id": 129313,
							"name": "facebook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129351,
								"name": "AuthFacebookProps"
							}
						},
						{
							"id": 129314,
							"name": "google",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129353,
								"name": "AuthGoogleProps"
							}
						},
						{
							"id": 129315,
							"name": "twitter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129355,
								"name": "AuthTwitterProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129311,
								129312,
								129310,
								129316,
								129309,
								129319,
								129320,
								129313,
								129314,
								129315
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 129355,
					"name": "AuthTwitterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129356,
							"name": "consumerKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129357,
							"name": "consumerSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 94,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129356,
								129357
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 92,
							"character": 17
						}
					]
				},
				{
					"id": 129331,
					"name": "AuthUserPoolTriggers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129332,
							"name": "createAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129333,
							"name": "customEmailSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129334,
							"name": "customMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129335,
							"name": "customSmsSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129336,
							"name": "defineAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129337,
							"name": "postAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129338,
							"name": "postConfirmation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129339,
							"name": "preAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129340,
							"name": "preSignUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129341,
							"name": "preTokenGeneration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129342,
							"name": "userMigration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129343,
							"name": "verifyAuthChallengeResponse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129332,
								129333,
								129334,
								129335,
								129336,
								129337,
								129338,
								129339,
								129340,
								129341,
								129342,
								129343
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 56,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129370
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129347,
						129349,
						129344,
						129358,
						129321,
						129351,
						129353,
						129308,
						129355,
						129331
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Auth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129740,
			"name": "Bucket",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129764,
					"name": "Bucket",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Bucket` construct is a higher level CDK construct that makes it easy to create an S3 Bucket and to define its notifications. It also internally connects the notifications and bucket together.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Bucket } from \"@serverless-stack/resources\";\n\nnew Bucket(this, \"Bucket\");\n```\n\n### Removing the S3 Bucket\n\nOnly empty S3 buckets can be deleted. However, you can configure the bucket to automatically delete all objects upon removal.\n\n```js\nimport * as cdk from \"aws-cdk-lib\";\n\nnew Bucket(this, \"Bucket\", {\n  s3Bucket: {\n    autoDeleteObjects: true,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129768,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 198,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129769,
									"name": "new Bucket",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129770,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129771,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129772,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129741,
												"name": "BucketProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129764,
										"name": "Bucket"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129773,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 188,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129774,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129775,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129775
											]
										}
									]
								}
							}
						},
						{
							"id": 129825,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129776,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 194,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 129902,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 129701,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 129588,
											"name": "Topic"
										}
									]
								}
							}
						},
						{
							"id": 129777,
							"name": "permissionsAttachedForAllNotifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 195,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 129778,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 196,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 129741,
								"name": "BucketProps"
							}
						},
						{
							"id": 129779,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129780,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129781,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129782,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129783,
							"name": "notificationFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 227,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129784,
									"name": "notificationFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created functions for the notifications."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 129902,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 129821,
							"name": "addFunctionNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 423,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129822,
									"name": "addFunctionNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129823,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129824,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129752,
														"name": "BucketFunctionNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129809,
							"name": "addNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 323,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129810,
									"name": "addNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129811,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129812,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 129588,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 129752,
														"name": "BucketFunctionNotificationProps"
													},
													{
														"type": "reference",
														"id": 129756,
														"name": "BucketQueueNotificationProps"
													},
													{
														"type": "reference",
														"id": 129760,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129785,
							"name": "addNotifications",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129786,
									"name": "addNotifications",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add notification subscriptions after the bucket has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst bucket = new Bucket(this, \"Bucket\");\nbucket.addNotifications(this, [\"src/notification.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129787,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129788,
											"name": "notifications",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 129830,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 129701,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 129588,
															"name": "Topic"
														},
														{
															"type": "reference",
															"id": 129752,
															"name": "BucketFunctionNotificationProps"
														},
														{
															"type": "reference",
															"id": 129756,
															"name": "BucketQueueNotificationProps"
														},
														{
															"type": "reference",
															"id": 129760,
															"name": "BucketTopicNotificationProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129813,
							"name": "addQueueNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 353,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129814,
									"name": "addQueueNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129815,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129816,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 129756,
														"name": "BucketQueueNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129817,
							"name": "addTopicNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129818,
									"name": "addTopicNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129819,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129820,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129588,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 129760,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129789,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129790,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to all bucket notifications",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129791,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129792,
							"name": "attachPermissionsToNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 288,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129793,
									"name": "attachPermissionsToNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to a specific bucket notification",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129794,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 129795,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129807,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 311,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129808,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129796,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 301,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129797,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129798,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129800,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129801,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129802,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129803,
																	"name": "notifications",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 129804,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {},
																						"children": [
																							{
																								"id": 129805,
																								"name": "node",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "fn.node.addr"
																							},
																							{
																								"id": 129806,
																								"name": "stack",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "..."
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"kind": 1024,
																								"children": [
																									129805,
																									129806
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129802,
																		129803
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129799,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Bucket"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129800,
														129799
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129826,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129827,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129765,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129766,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129767,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129768
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129773,
								129825,
								129776,
								129777,
								129778
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								129779,
								129781,
								129783
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129821,
								129809,
								129785,
								129813,
								129817,
								129789,
								129792,
								129807,
								129796,
								129826,
								129765
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 187,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129749,
					"name": "BucketFilter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129750,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key starts with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129751,
							"name": "suffix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key ends with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129750,
								129751
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 85,
							"character": 17
						}
					]
				},
				{
					"id": 129752,
					"name": "BucketFunctionNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [{\n    function: \"src/notification.main\",\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129754,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 129755,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 129749,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 129753,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129754,
								129755,
								129753
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 108,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 129741,
					"name": "BucketProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129746,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129747,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129748,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Allows you to override default settings this construct uses internally to ceate the bucket",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  cdk: {\n    bucket: {\n      bucketName: \"my-bucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Bucket",
														"package": "aws-cdk-lib",
														"name": "Bucket"
													},
													{
														"type": "reference",
														"qualifiedName": "BucketProps",
														"package": "aws-cdk-lib",
														"name": "BucketProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129748
											]
										}
									]
								}
							}
						},
						{
							"id": 129742,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129743,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129744,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129744
											]
										}
									]
								}
							}
						},
						{
							"id": 129745,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create notifications for various bucket events",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [\"src/notification.main\"],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 129830,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 129701,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 129588,
											"name": "Topic"
										},
										{
											"type": "reference",
											"id": 129752,
											"name": "BucketFunctionNotificationProps"
										},
										{
											"type": "reference",
											"id": 129756,
											"name": "BucketQueueNotificationProps"
										},
										{
											"type": "reference",
											"id": 129760,
											"name": "BucketTopicNotificationProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129746,
								129742,
								129745
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 129756,
					"name": "BucketQueueNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Queue(props.stack, \"Queue\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129758,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 129759,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 129749,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 129757,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129701,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129758,
								129759,
								129757
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 128,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 129760,
					"name": "BucketTopicNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a topic listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Topic(props.stack, \"Topic\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129762,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 129763,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 129749,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 129761,
							"name": "topic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The topic to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129588,
								"name": "Topic"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129762,
								129763,
								129761
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 148,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129764
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129749,
						129752,
						129741,
						129756,
						129760
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Bucket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129154,
			"name": "Cron",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129167,
					"name": "Cron",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Cron` construct is a higher level CDK construct that makes it easy to create a cron job. You can create a cron job by handler function and specifying the schedule it needs to run on. Internally this construct uses a [EventBridge Rule](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_events.Rule.html)."
					},
					"children": [
						{
							"id": 129171,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 135,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129172,
									"name": "new Cron",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129173,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129174,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129175,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129155,
												"name": "CronProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129167,
										"name": "Cron"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129176,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 123,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129177,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129178,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK EventBridge Rule instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 127,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129178
											]
										}
									]
								}
							}
						},
						{
							"id": 129179,
							"name": "jobFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created Function instance that'll be run on schedule."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129200,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129180,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 129155,
								"name": "CronProps"
							}
						},
						{
							"id": 129181,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 151,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129182,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of [permissions](../util/Permissions.md) to the `jobFunction`. This allows the function to access other AWS resources.",
										"text": "Internally calls [`Function.attachPermissions`](Function.md#attachpermissions).\n\n"
									},
									"parameters": [
										{
											"id": 129183,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129196,
							"name": "createEventsRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 167,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129197,
									"name": "createEventsRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129198,
							"name": "createRuleTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 197,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129199,
									"name": "createRuleTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 129184,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 155,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129185,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129186,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129188,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129189,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129192,
																	"name": "job",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 129193,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 129194,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 129195,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								129194,
																								129195
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129191,
																	"name": "ruleName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129190,
																	"name": "schedule",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "cfnRule.scheduleExpression"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129192,
																		129191,
																		129190
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129187,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Cron"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129188,
														129187
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129201,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129202,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129168,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129169,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129170,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129171
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129176,
								129179,
								129200,
								129180
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129181,
								129196,
								129198,
								129184,
								129201,
								129168
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 122,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129162,
					"name": "CronJobProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129164,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129165,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129166,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129166
											]
										}
									]
								}
							}
						},
						{
							"id": 129163,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function that will be executed when the job runs.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\n  new Cron(this, \"Cron\", {\n    job: {\n      function: \"src/lambda.main\",\n    },\n  });\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129164,
								129163
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 93,
							"character": 17
						}
					]
				},
				{
					"id": 129155,
					"name": "CronProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129156,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129157,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129159,
											"name": "cronOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created cron expression."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 23,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CronOptions",
												"package": "aws-cdk-lib",
												"name": "CronOptions"
											}
										},
										{
											"id": 129158,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RuleProps",
												"package": "aws-cdk-lib",
												"name": "RuleProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129159,
												129158
											]
										}
									]
								}
							}
						},
						{
							"id": 129160,
							"name": "job",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The definition of the function to be executed",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Cron(this, \"Cron\", {\n  function : \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 129830,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 129162,
										"name": "CronJobProps"
									}
								]
							}
						},
						{
							"id": 129161,
							"name": "schedule",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The schedule for the cron job. The string format takes a [rate expression](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents-expressions.html).",
								"text": "```\n\"rate(_Value Unit_)\"\n\n// For example, every 5 minutes\n\"rate(5 minutes)\"\n```\n\n```\n\"cron(Minutes Hours Day-of-month Month Day-of-week Year)\"\n\n// For example, 10:15 AM (UTC) every day\n\"cron(15 10 * * ? *)\"\n```\n\n```txt\n// Repeat every 5 minutes\n\n\"5 minutes\"\n\n// The equivalent rate expression\n\"rate(5 minutes)\"\n```\n\n```txt\n// 10:15 AM (UTC) every day\n\n// As cdk.aws-events.CronOptions\n{ minute: \"15\", hour: \"10\" }\n\n// The equivalent cron expression\n\"cron(15 10 * * ? *)\"\n```\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Cron } from \"@serverless-stack/resources\";\n\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"rate(1 minute)\",\n});\n```\n\n```js\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"cron(15 10 * * ? *)\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "rate(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "cron(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129156,
								129160,
								129161
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129167
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129162,
						129155
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Cron.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 130092,
			"name": "EventBus",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 130124,
					"name": "EventBus",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `EventBus` construct is a higher level CDK construct that makes it easy to create an [EventBridge Event Bus](https://aws.amazon.com/eventbridge/). You can create a bus that has a list of rules and targets. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of targets; Function targets (with a Lambda function) or Queue targets (with an SQS queue). See the [examples](#examples) for more details.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Using the minimal config\n\n```js\nimport { EventBus } from \"@serverless-stack/resources\";\n\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n```\n\nNote that, `rule1` here is simply a key to identify the rule.\n"
							}
						]
					},
					"children": [
						{
							"id": 130128,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 213,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 130129,
									"name": "new EventBus",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 130130,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 130131,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130132,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 130093,
												"name": "EventBusProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 130124,
										"name": "EventBus"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 130133,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 203,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130134,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130135,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `EventBus` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 207,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IEventBus",
												"package": "aws-cdk-lib",
												"name": "IEventBus"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130135
											]
										}
									]
								}
							}
						},
						{
							"id": 130197,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 130140,
							"name": "permissionsAttachedForAllTargets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 210,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 130141,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 211,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 130093,
								"name": "EventBusProps"
							}
						},
						{
							"id": 130136,
							"name": "targetsData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 209,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130137,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 130138,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 130139,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129902,
														"name": "Fn"
													},
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													}
												]
											}
										}
									}
								}
							}
						},
						{
							"id": 130142,
							"name": "eventBusArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 228,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 130143,
									"name": "eventBusArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 130144,
							"name": "eventBusName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 235,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 130145,
									"name": "eventBusName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 130191,
							"name": "addFunctionTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 475,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 130192,
									"name": "addFunctionTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 130193,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 130194,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130195,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 130196,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 130114,
														"name": "EventBusFunctionTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130185,
							"name": "addQueueTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 449,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 130186,
									"name": "addQueueTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 130187,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 130188,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130189,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 130190,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 130119,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130174,
							"name": "addRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 394,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 130175,
									"name": "addRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 130176,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 130177,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130178,
											"name": "rule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 130101,
												"name": "EventBusRuleProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130146,
							"name": "addRules",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 278,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 130147,
									"name": "addRules",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add rules after the EventBus has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n### Adding rules\n\n```js\nconst bus = new EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n\nbus.addRules(this, {\n  rule2: {\n    eventPattern: { source: [\"myevent\"] },\n    targets: [\"src/target3.main\", \"src/target4.main\"],\n  },\n});\n```\n\n### Lazily adding rules\n\nCreate an _empty_ EventBus construct and lazily add the rules.\n\n```js {3-8}\nconst bus = new EventBus(this, \"Bus\");\n\nbus.addRules(this, {\n  rule1: {\n    eventPattern: { source: [\"myevent\"] },\n    targets: [\"src/target1.main\", \"src/target2.main\"],\n  },\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 130148,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 130149,
											"name": "rules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 130101,
														"name": "EventBusRuleProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130179,
							"name": "addTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 430,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 130180,
									"name": "addTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 130181,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 130182,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130183,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 130184,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 130114,
														"name": "EventBusFunctionTargetProps"
													},
													{
														"type": "reference",
														"id": 130119,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130150,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 308,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 130151,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to all event targets in this EventBus.",
										"tags": [
											{
												"tag": "example",
												"text": "\n### Attaching permissions for all targets\n\nAllow all the targets in the entire EventBus to access S3.\n\n```js {10}\nconst bus = new EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n\nbus.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 130152,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130153,
							"name": "attachPermissionsToTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 340,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 130154,
									"name": "attachPermissionsToTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to a specific event bus rule target",
										"tags": [
											{
												"tag": "example",
												"text": "\n### Attaching permissions for a specific target\n\nAllow one of the targets to access S3.\n\n```js {10}\nconst bus = new EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n\nbus.attachPermissionsToTarget(\"rule1\", 0, [\"s3\"]);\n```\n\nHere we are referring to the rule using the rule key, `rule1`.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 130155,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130156,
											"name": "targetIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 130157,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130172,
							"name": "createEventBus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 374,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 130173,
									"name": "createEventBus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130158,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 361,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 130159,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 130160,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 130162,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 130163,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 130164,
																	"name": "eventBusName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 130165,
																	"name": "rules",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 130166,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 130167,
																						"name": "key",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					},
																					{
																						"id": 130168,
																						"name": "targets",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "reflection",
																										"declaration": {
																											"id": 130169,
																											"name": "__type",
																											"kind": 65536,
																											"kindString": "Type literal",
																											"flags": {},
																											"children": [
																												{
																													"id": 130170,
																													"name": "node",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "fn.node.addr"
																												},
																												{
																													"id": 130171,
																													"name": "stack",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "..."
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"kind": 1024,
																													"children": [
																														130170,
																														130171
																													]
																												}
																											]
																										}
																									}
																								]
																							}
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							130167,
																							130168
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		130164,
																		130165
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 130161,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "EventBus"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														130162,
														130161
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 130198,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130199,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 130125,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 130126,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 130127,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								130128
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130133,
								130197,
								130140,
								130141,
								130136
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								130142,
								130144
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								130191,
								130185,
								130174,
								130146,
								130179,
								130150,
								130153,
								130172,
								130158,
								130198,
								130125
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 202,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 130114,
					"name": "EventBusFunctionTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 130116,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 162,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130117,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130118,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 163,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130118
											]
										}
									]
								}
							}
						},
						{
							"id": 130115,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 161,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130116,
								130115
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 160,
							"character": 17
						}
					]
				},
				{
					"id": 130093,
					"name": "EventBusProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 130098,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130099,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130100,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created EventBus",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  cdk: {\n    eventBus: {\n      eventBusName: \"MyEventBus\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IEventBus",
														"package": "aws-cdk-lib",
														"name": "IEventBus"
													},
													{
														"type": "reference",
														"qualifiedName": "EventBusProps",
														"package": "aws-cdk-lib",
														"name": "EventBusProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130100
											]
										}
									]
								}
							}
						},
						{
							"id": 130094,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130095,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130096,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the EventBus. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130096
											]
										}
									]
								}
							}
						},
						{
							"id": 130097,
							"name": "rules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The rules for the eventbus",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {5}\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\"],\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 130101,
										"name": "EventBusRuleProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130098,
								130094,
								130097
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 130119,
					"name": "EventBusQueueTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 130121,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 169,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130122,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130123,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 170,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsQueueProps",
												"package": "aws-cdk-lib",
												"name": "SqsQueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130123
											]
										}
									]
								}
							}
						},
						{
							"id": 130120,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 168,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129701,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130121,
								130120
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 167,
							"character": 17
						}
					]
				},
				{
					"id": 130101,
					"name": "EventBusRuleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus rule"
					},
					"children": [
						{
							"id": 130111,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 145,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130112,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130113,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Rule` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js {4}\nnew EventBus(this, \"Bus\", {\n  DOCTODO\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 156,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "RuleProps",
														"package": "aws-cdk-lib",
														"name": "RuleProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "eventBus"
															},
															{
																"type": "literal",
																"value": "targets"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130113
											]
										}
									]
								}
							}
						},
						{
							"id": 130102,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130103,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 130105,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Fields to match on the detail field",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detail: { FOO: 1 }  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 105,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 130106,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 130107,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 130108,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 130109,
											"name": "detailType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of detailTypes to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detailTypes: [\"foo\"]  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 120,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 130104,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of sources to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												130105,
												130109,
												130104
											]
										}
									]
								}
							}
						},
						{
							"id": 130110,
							"name": "targets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure targets for this rule. Can be a function or queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        \"src/function.handler\",\n        new Queue(props.stack, \"MyQueue\"),\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 139,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 129830,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 129701,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 130114,
											"name": "EventBusFunctionTargetProps"
										},
										{
											"type": "reference",
											"id": 130119,
											"name": "EventBusQueueTargetProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130111,
								130102,
								130110
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 74,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						130124
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						130114,
						130093,
						130119,
						130101
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/EventBus.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129828,
			"name": "Function",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129902,
					"name": "Function",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A construct for a Lambda Function that allows you to [develop your it locally](live-lambda-development.md). Supports JS, TypeScript, Python, Golang, and C#. It also applies a couple of defaults:",
						"text": "- Sets the default memory setting to 1024MB.\n- Sets the default Lambda function timeout to 10 seconds.\n- [Enables AWS X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-tracing.html) by default so you can trace your serverless applications.\n- `AWS_NODEJS_CONNECTION_REUSE_ENABLED` is turned on. Meaning that the Lambda function will automatically reuse TCP connections when working with the AWS SDK. [Read more about this here](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/node-reusing-connections.html).\n- Sets the `IS_LOCAL` environment variable for the Lambda function when it is invoked locally through the `sst start` command.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Creating a Function\n\n```js\nimport { Function } from \"@serverless-stack/resources\";\n\nnew Function(this, \"MySnsLambda\", {\n  handler: \"src/sns/index.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129980,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 444,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129981,
									"name": "new Function",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129982,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129983,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129984,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									},
									"overwrites": {
										"type": "reference",
										"name": "lambda.Function.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "lambda.Function.constructor"
							}
						},
						{
							"id": 130024,
							"name": "_connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Actual connections object for this Lambda",
								"text": "May be unset, in which case this Lambda is not configured use in a VPC.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 215,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Connections",
								"package": "aws-cdk-lib",
								"name": "Connections"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._connections"
							}
						},
						{
							"id": 130025,
							"name": "_invocationGrants",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Mapping of invocation principals to grants. Used to de-dupe `grantInvoke()` calls.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 221,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._invocationGrants"
							}
						},
						{
							"id": 129985,
							"name": "_isLiveDevEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 441,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 130023,
							"name": "_skipPermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether the user decides to skip adding permissions.\nThe only use case is for cross-account, imported lambdas\nwhere the user commits to modifying the permisssions\non the imported lambda outside CDK.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 208,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._skipPermissions"
							}
						},
						{
							"id": 130007,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 434,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.architecture"
							}
						},
						{
							"id": 130010,
							"name": "canCreatePermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 440,
									"character": 23
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.canCreatePermissions"
							}
						},
						{
							"id": 130005,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 426,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterQueue"
							}
						},
						{
							"id": 130006,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 430,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterTopic"
							}
						},
						{
							"id": 130073,
							"name": "env",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 108,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ResourceEnvironment",
								"package": "aws-cdk-lib",
								"name": "ResourceEnvironment"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.env"
							}
						},
						{
							"id": 130001,
							"name": "functionArn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "ARN of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 410,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionArn"
							}
						},
						{
							"id": 130000,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 406,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionName"
							}
						},
						{
							"id": 130004,
							"name": "grantPrincipal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The principal this Lambda Function is running as"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 422,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IPrincipal",
								"package": "aws-cdk-lib",
								"name": "IPrincipal"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantPrincipal"
							}
						},
						{
							"id": 129986,
							"name": "localId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 442,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 130089,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.node"
							}
						},
						{
							"id": 130009,
							"name": "permissionsNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 439,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.permissionsNode"
							}
						},
						{
							"id": 130074,
							"name": "physicalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns a string-encoded token that resolves to the physical name that\nshould be passed to the CloudFormation resource.",
								"text": "This value will resolve to one of the following:\n- a concrete value (e.g. `\"my-awesome-bucket\"`)\n- `undefined`, when a name should be generated by CloudFormation\n- a concrete name generated automatically during synthesis, in\n  cross-environment scenarios.\n\n"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 120,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.physicalName"
							}
						},
						{
							"id": 130002,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Execution role associated with this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 414,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.role"
							}
						},
						{
							"id": 130003,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The runtime configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 418,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Runtime",
								"package": "aws-cdk-lib",
								"name": "Runtime"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.runtime"
							}
						},
						{
							"id": 130072,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 107,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Stack",
								"package": "aws-cdk-lib",
								"name": "Stack"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.stack"
							}
						},
						{
							"id": 130008,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The timeout configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 438,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.timeout"
							}
						},
						{
							"id": 129929,
							"name": "_VER_PROPS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 335,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129930,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 129931,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 129932,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._VER_PROPS"
							}
						},
						{
							"id": 130033,
							"name": "connections",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 237,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 130034,
									"name": "connections",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Access the Connections object",
										"text": "Will fail if not a VPC-enabled Lambda Function\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Connections",
										"package": "aws-cdk-lib",
										"name": "Connections"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.connections"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.connections"
							}
						},
						{
							"id": 129998,
							"name": "currentVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 333,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 129999,
									"name": "currentVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a `lambda.Version` which represents the current version of this\nLambda function. A new version will be created every time the function's\nconfiguration changes.",
										"text": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Version",
										"package": "aws-cdk-lib",
										"name": "Version"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.currentVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.currentVersion"
							}
						},
						{
							"id": 130037,
							"name": "isBoundToVpc",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 244,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 130038,
									"name": "isBoundToVpc",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Whether or not this Lambda function was bound to a VPC",
										"text": "If this is is `false`, trying to access the `connections` object will fail.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isBoundToVpc"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isBoundToVpc"
							}
						},
						{
							"id": 130035,
							"name": "latestVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 238,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 130036,
									"name": "latestVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.latestVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.latestVersion"
							}
						},
						{
							"id": 130019,
							"name": "logGroup",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 477,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 130020,
									"name": "logGroup",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The LogGroup where the Lambda function's logs are made available.",
										"text": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ILogGroup",
										"package": "aws-cdk-lib",
										"name": "ILogGroup"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.logGroup"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.logGroup"
							}
						},
						{
							"id": 130021,
							"name": "_checkEdgeCompatibility",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 479,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130022,
									"name": "_checkEdgeCompatibility",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "internal",
												"text": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._checkEdgeCompatibility"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._checkEdgeCompatibility"
							}
						},
						{
							"id": 130075,
							"name": "_enableCrossEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130076,
									"name": "_enableCrossEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Called when this resource is referenced across environments\n(account/region) to order to request that a physical name will be generated\nfor this resource during synthesis, so the resource can be referenced\nthrough it's absolute name/arn.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._enableCrossEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._enableCrossEnvironment"
							}
						},
						{
							"id": 130052,
							"name": "_functionNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 257,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 130053,
									"name": "_functionNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns the construct tree node that corresponds to the lambda function.\nFor use internally for constructs, when the tree is set up in non-standard ways. Ex: SingletonFunction.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Node",
										"package": "constructs",
										"name": "Node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._functionNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._functionNode"
							}
						},
						{
							"id": 130054,
							"name": "_isStackAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 272,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 130055,
									"name": "_isStackAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Given the function arn, check if the account id matches this account",
										"text": "Function ARNs look like this:\n\n  arn:aws:lambda:region:account-id:function:function-name\n\n..which means that in order to extract the `account-id` component from the ARN, we can\nsplit the ARN using \":\" and select the component in index 4.\n",
										"returns": "true if account id of function matches the account specified on the stack, false otherwise.\n",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._isStackAccount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._isStackAccount"
							}
						},
						{
							"id": 130011,
							"name": "addEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 458,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130012,
									"name": "addEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds an environment variable to this Lambda function.\nIf this is a ref to a Lambda function, this operation results in a no-op."
									},
									"parameters": [
										{
											"id": 130013,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable key."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130014,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable's value."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130015,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Environment variable options.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EnvironmentOptions",
												"package": "aws-cdk-lib",
												"name": "EnvironmentOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEnvironment"
							}
						},
						{
							"id": 130046,
							"name": "addEventSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130047,
									"name": "addEventSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 130048,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IEventSource",
												"package": "aws-cdk-lib",
												"name": "IEventSource"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSource"
							}
						},
						{
							"id": 130039,
							"name": "addEventSourceMapping",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 245,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130040,
									"name": "addEventSourceMapping",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 130041,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130042,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventSourceMappingOptions",
												"package": "aws-cdk-lib",
												"name": "EventSourceMappingOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "EventSourceMapping",
										"package": "aws-cdk-lib",
										"name": "EventSourceMapping"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSourceMapping"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSourceMapping"
							}
						},
						{
							"id": 130016,
							"name": "addLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 466,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130017,
									"name": "addLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds one or more Lambda Layers to this Lambda function.",
										"tags": [
											{
												"tag": "throws",
												"text": "if there are already 5 layers on this function, or the layer is incompatible with this function's runtime.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 130018,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "the layers to be added.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addLayers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addLayers"
							}
						},
						{
							"id": 130026,
							"name": "addPermission",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 227,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130027,
									"name": "addPermission",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a permission to the Lambda resource policy."
									},
									"parameters": [
										{
											"id": 130028,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The id for the permission construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130029,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The permission to grant to this Lambda function. @see Permission for details.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Permission",
												"package": "aws-cdk-lib",
												"name": "Permission"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addPermission"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addPermission"
							}
						},
						{
							"id": 130030,
							"name": "addToRolePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130031,
									"name": "addToRolePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a statement to the IAM role assumed by the instance."
									},
									"parameters": [
										{
											"id": 130032,
											"name": "statement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "PolicyStatement",
												"package": "aws-cdk-lib",
												"name": "PolicyStatement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addToRolePolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addToRolePolicy"
							}
						},
						{
							"id": 130077,
							"name": "applyRemovalPolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130078,
									"name": "applyRemovalPolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Apply the given removal policy to this resource",
										"text": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).\n"
									},
									"parameters": [
										{
											"id": 130079,
											"name": "policy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RemovalPolicy",
												"package": "aws-cdk-lib",
												"name": "RemovalPolicy"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.applyRemovalPolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.applyRemovalPolicy"
							}
						},
						{
							"id": 129987,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 687,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129988,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nfn.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129989,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 130049,
							"name": "configureAsyncInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130050,
									"name": "configureAsyncInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 130051,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventInvokeConfigOptions",
												"package": "aws-cdk-lib",
												"name": "EventInvokeConfigOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.configureAsyncInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.configureAsyncInvoke"
							}
						},
						{
							"id": 130080,
							"name": "generatePhysicalName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 145,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 130081,
									"name": "generatePhysicalName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.generatePhysicalName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.generatePhysicalName"
							}
						},
						{
							"id": 129990,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 693,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129991,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129992,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129994,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129995,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129997,
																	"name": "arn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129996,
																	"name": "localId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129997,
																		129996
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129993,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Function"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129994,
														129993
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 130085,
							"name": "getResourceArnAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 175,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 130086,
									"name": "getResourceArnAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
										"text": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.\n"
									},
									"parameters": [
										{
											"id": 130087,
											"name": "arnAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the ARN of the resource.\nCommonly it will be called \"Arn\" (e.g. `resource.attrArn`), but sometimes\nit's the CFN resource's `ref`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130088,
											"name": "arnComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The format of the ARN of this resource. You must\nreference `this.physicalName` somewhere within the ARN in order for\ncross-environment references to work.\n\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "ArnComponents",
												"package": "aws-cdk-lib",
												"name": "ArnComponents"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceArnAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceArnAttribute"
							}
						},
						{
							"id": 130082,
							"name": "getResourceNameAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 157,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 130083,
									"name": "getResourceNameAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"name\" attribute (e.g. `bucket.bucketName`).",
										"text": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.\n"
									},
									"parameters": [
										{
											"id": 130084,
											"name": "nameAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the resource's name.\nCommonly this is the resource's `ref`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceNameAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceNameAttribute"
							}
						},
						{
							"id": 130043,
							"name": "grantInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130044,
									"name": "grantInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Grant the given identity permissions to invoke this Lambda"
									},
									"parameters": [
										{
											"id": 130045,
											"name": "grantee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IGrantable",
												"package": "aws-cdk-lib",
												"name": "IGrantable"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.grantInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantInvoke"
							}
						},
						{
							"id": 130056,
							"name": "metric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 130057,
									"name": "metric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Function"
									},
									"parameters": [
										{
											"id": 130058,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130059,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metric"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metric"
							}
						},
						{
							"id": 130069,
							"name": "metricDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 130070,
									"name": "metricDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How long execution of this Lambda takes",
										"text": "Average over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 130071,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricDuration"
							}
						},
						{
							"id": 130066,
							"name": "metricErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 130067,
									"name": "metricErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How many invocations of this Lambda fail",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 130068,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricErrors"
							}
						},
						{
							"id": 130063,
							"name": "metricInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 130064,
									"name": "metricInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is invoked",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 130065,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricInvocations"
							}
						},
						{
							"id": 130060,
							"name": "metricThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 130061,
									"name": "metricThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is throttled",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 130062,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricThrottles"
							}
						},
						{
							"id": 130090,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 130091,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.toString"
							}
						},
						{
							"id": 129933,
							"name": "classifyVersionProperty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 345,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129934,
									"name": "classifyVersionProperty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Record whether specific properties in the `AWS::Lambda::Function` resource should\nalso be associated to the Version resource.\nSee 'currentVersion' section in the module README for more details."
									},
									"parameters": [
										{
											"id": 129935,
											"name": "propertyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The property to classify"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129936,
											"name": "locked",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "whether the property should be associated to the version or not.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.classifyVersionProperty"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.classifyVersionProperty"
							}
						},
						{
							"id": 129906,
							"name": "copyFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 707,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129907,
									"name": "copyFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129908,
											"name": "bundle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 129882,
														"name": "FunctionBundleProp"
													}
												]
											}
										},
										{
											"id": 129909,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129910,
											"name": "buildPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129918,
							"name": "fromDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 784,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129919,
									"name": "fromDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129920,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129921,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129922,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129831,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 129923,
											"name": "inheritedProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										},
										{
											"id": 129924,
											"name": "inheritErrorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 129942,
							"name": "fromFunctionArn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 353,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129943,
									"name": "fromFunctionArn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its ARN"
									},
									"parameters": [
										{
											"id": 129944,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129945,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129946,
											"name": "functionArn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionArn"
							}
						},
						{
							"id": 129947,
							"name": "fromFunctionAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 362,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129948,
									"name": "fromFunctionAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Creates a Lambda function object which represents a function not defined\nwithin this stack."
									},
									"parameters": [
										{
											"id": 129949,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The parent construct"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129950,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The name of the lambda construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129951,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "the attributes of the function to import\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "FunctionAttributes",
												"package": "aws-cdk-lib",
												"name": "FunctionAttributes"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionAttributes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionAttributes"
							}
						},
						{
							"id": 129937,
							"name": "fromFunctionName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 349,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129938,
									"name": "fromFunctionName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its name"
									},
									"parameters": [
										{
											"id": 129939,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129940,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129941,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionName"
							}
						},
						{
							"id": 129911,
							"name": "handleImportedLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 732,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129912,
									"name": "handleImportedLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129913,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129914,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "ILayerVersion",
											"package": "aws-cdk-lib",
											"name": "ILayerVersion"
										}
									}
								}
							]
						},
						{
							"id": 129977,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129978,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129979,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isConstruct"
							}
						},
						{
							"id": 129915,
							"name": "isInlineDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 778,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129916,
									"name": "isInlineDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129917,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "definition",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 129830,
											"name": "FunctionInlineDefinition"
										}
									}
								}
							]
						},
						{
							"id": 129974,
							"name": "isResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 106,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129975,
									"name": "isResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Check whether the given construct is a Resource"
									},
									"parameters": [
										{
											"id": 129976,
											"name": "construct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "construct",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "CfnResource",
											"package": "aws-cdk-lib",
											"name": "CfnResource"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isResource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isResource"
							}
						},
						{
							"id": 129925,
							"name": "mergeProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 818,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129926,
									"name": "mergeProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129927,
											"name": "baseProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										},
										{
											"id": 129928,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129832,
										"name": "FunctionProps"
									}
								}
							]
						},
						{
							"id": 129952,
							"name": "metricAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129953,
									"name": "metricAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Lambda"
									},
									"parameters": [
										{
											"id": 129954,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129955,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAll"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAll"
							}
						},
						{
							"id": 129968,
							"name": "metricAllConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 396,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129969,
									"name": "metricAllConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129970,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllConcurrentExecutions"
							}
						},
						{
							"id": 129959,
							"name": "metricAllDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 378,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129960,
									"name": "metricAllDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the Duration executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "average over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129961,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllDuration"
							}
						},
						{
							"id": 129956,
							"name": "metricAllErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 372,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129957,
									"name": "metricAllErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of Errors executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129958,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllErrors"
							}
						},
						{
							"id": 129962,
							"name": "metricAllInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 384,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129963,
									"name": "metricAllInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129964,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllInvocations"
							}
						},
						{
							"id": 129965,
							"name": "metricAllThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 390,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129966,
									"name": "metricAllThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of throttled invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129967,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllThrottles"
							}
						},
						{
							"id": 129971,
							"name": "metricAllUnreservedConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 402,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129972,
									"name": "metricAllUnreservedConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of unreserved concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129973,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
							}
						},
						{
							"id": 129903,
							"name": "normalizeSrcPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 703,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129904,
									"name": "normalizeSrcPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129905,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129980
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130024,
								130025,
								129985,
								130023,
								130007,
								130010,
								130005,
								130006,
								130073,
								130001,
								130000,
								130004,
								129986,
								130089,
								130009,
								130074,
								130002,
								130003,
								130072,
								130008,
								129929
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								130033,
								129998,
								130037,
								130035,
								130019
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								130021,
								130075,
								130052,
								130054,
								130011,
								130046,
								130039,
								130016,
								130026,
								130030,
								130077,
								129987,
								130049,
								130080,
								129990,
								130085,
								130082,
								130043,
								130056,
								130069,
								130066,
								130063,
								130060,
								130090,
								129933,
								129906,
								129918,
								129942,
								129947,
								129937,
								129911,
								129977,
								129915,
								129974,
								129925,
								129952,
								129968,
								129959,
								129956,
								129962,
								129965,
								129971,
								129903
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 440,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "aws-cdk-lib",
							"name": "Function"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129899,
					"name": "FunctionBundleCopyFilesProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure additional files to copy into the function bundle",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129900,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Source path relative to sst.json"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 412,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129901,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Destination path relative to function root in bundle"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 416,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129900,
								129901
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 408,
							"character": 17
						}
					]
				},
				{
					"id": 129883,
					"name": "FunctionBundleNodejsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure NodeJS bundling options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n   format: \"esm\",\n   minify: false\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129887,
							"name": "commandHooks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Hooks to run at various stages of bundling"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 308,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICommandHooks",
								"package": "aws-cdk-lib",
								"name": "ICommandHooks"
							}
						},
						{
							"id": 129895,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 129899,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 129888,
							"name": "esbuildConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override esbuild specific settings"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 312,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129889,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129890,
											"name": "define",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Replace global identifiers with constant expressions.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      define: DOCTODO\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 327,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 129891,
											"name": "keepNames",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When minifying preserve names of functions and variables",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      keepNames: true\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 129892,
											"name": "plugins",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Path to plugin file to load esbuild plugins",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      plugins: \"path/to/plugins.js\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129890,
												129891,
												129892
											]
										}
									]
								}
							}
						},
						{
							"id": 129885,
							"name": "externalModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will not be included in the bundle. Usually used to exclude dependencies that are provided in layers",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    external: [\"prisma\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 129894,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure bundle format",
								"tags": [
									{
										"tag": "default",
										"text": "\"cjs\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    format: \"esm\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 388,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cjs"
									},
									{
										"type": "literal",
										"value": "esm"
									}
								]
							}
						},
						{
							"id": 129884,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure additional esbuild loaders for other file extensions",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    loader: {\n     \".png\": \"file\"\n    }\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 278,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Loader",
										"package": "esbuild",
										"name": "Loader"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129893,
							"name": "minify",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable minification",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    minify: false\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 373,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 129886,
							"name": "nodeModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will be excluded from the bundle and installed into node_modules instead. Useful for dependencies that cannot be bundled, like those with binary dependencies.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    nodeModules: [\"pg\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 304,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129887,
								129895,
								129888,
								129885,
								129894,
								129884,
								129893,
								129886
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 263,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 129896,
					"name": "FunctionBundlePythonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129898,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 129899,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 129897,
							"name": "installCommands",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 393,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129898,
								129897
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 392,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 129879,
					"name": "FunctionNameProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129881,
							"name": "functionProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function properties"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 219,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129832,
								"name": "FunctionProps"
							}
						},
						{
							"id": 129880,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The stack the function is being created in"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129881,
								129880
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 211,
							"character": 17
						}
					]
				},
				{
					"id": 129832,
					"name": "FunctionProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129857,
							"name": "allowAllOutbound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to allow the Lambda to send all network traffic",
								"text": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 147,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowAllOutbound"
							}
						},
						{
							"id": 129871,
							"name": "allowPublicSubnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda Functions in a public subnet can NOT access the internet.\nUse this property to acknowledge this limitation and still place the function in a public subnet.",
								"tags": [
									{
										"tag": "see",
										"text": "https://stackoverflow.com/questions/52992085/why-cant-an-aws-lambda-function-inside-a-public-subnet-in-a-vpc-connect-to-the/52994841#52994841\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 265,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowPublicSubnet"
							}
						},
						{
							"id": 129874,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The system architectures compatible with this lambda function.",
								"tags": [
									{
										"tag": "default",
										"text": "Architecture.X86_64\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 282,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.architecture"
							}
						},
						{
							"id": 129844,
							"name": "bundle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure or disable bundling options",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129882,
								"name": "FunctionBundleProp"
							}
						},
						{
							"id": 129873,
							"name": "codeSigningConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Code signing config associated with this function",
								"tags": [
									{
										"tag": "default",
										"text": "- Not Sign the Code\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 277,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICodeSigningConfig",
								"package": "aws-cdk-lib",
								"name": "ICodeSigningConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.codeSigningConfig"
							}
						},
						{
							"id": 129869,
							"name": "currentVersionOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Options for the `lambda.Version` resource automatically created by the\n`fn.currentVersion` method.",
								"tags": [
									{
										"tag": "default",
										"text": "- default options as described in `VersionOptions`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 251,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "VersionOptions",
								"package": "aws-cdk-lib",
								"name": "VersionOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.currentVersionOptions"
							}
						},
						{
							"id": 129859,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SQS queue to use if DLQ is enabled.\nIf SNS topic is desired, specify `deadLetterTopic` property instead.",
								"tags": [
									{
										"tag": "default",
										"text": "- SQS queue with 14 day retention period if `deadLetterQueueEnabled` is `true`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 161,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueue"
							}
						},
						{
							"id": 129858,
							"name": "deadLetterQueueEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enabled DLQ. If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
								"tags": [
									{
										"tag": "default",
										"text": "- false unless `deadLetterQueue` is set, which implies DLQ is enabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 154,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueueEnabled"
							}
						},
						{
							"id": 129860,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SNS topic to use as a DLQ.\nNote that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
								"tags": [
									{
										"tag": "default",
										"text": "- no SNS topic\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 169,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterTopic"
							}
						},
						{
							"id": 129850,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A description of the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No description.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.description"
							}
						},
						{
							"id": 129843,
							"name": "enableLiveDev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable local development",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  enableLiveDev: false\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 173,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 129851,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
								"tags": [
									{
										"tag": "default",
										"text": "- No environment variables.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129852,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 129853,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 129854,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environment"
							}
						},
						{
							"id": 129872,
							"name": "environmentEncryption",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The AWS KMS key that's used to encrypt your function's environment variables.",
								"tags": [
									{
										"tag": "default",
										"text": "- AWS Lambda creates and uses an AWS managed customer master key (CMK).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 271,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environmentEncryption"
							}
						},
						{
							"id": 129865,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Event sources for this function.",
								"text": "You can also add event sources using `addEventSource`.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No event sources.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 223,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "IEventSource",
									"package": "aws-cdk-lib",
									"name": "IEventSource"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.events"
							}
						},
						{
							"id": 129870,
							"name": "filesystem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The filesystem configuration for the lambda function",
								"tags": [
									{
										"tag": "default",
										"text": "- will not mount any filesystem\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 257,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "FileSystem",
								"package": "aws-cdk-lib",
								"name": "FileSystem"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.filesystem"
							}
						},
						{
							"id": 129833,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override the automatically generated name",
								"tags": [
									{
										"tag": "default",
										"text": "An automatically generated name\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  functionName: \"my-function\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 129834,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 129835,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 129836,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 129879,
																"name": "FunctionNameProps"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 129837,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the entry point and handler function. Of the format:\n`/path/to/file.function`.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  handler: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129855,
							"name": "initialPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Initial policy statements to add to the created Lambda Role.",
								"text": "You can call `addToRolePolicy` to the created lambda to add statements post creation.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No policy statements are added to the created Lambda role.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 94,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "PolicyStatement",
									"package": "aws-cdk-lib",
									"name": "PolicyStatement"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.initialPolicy"
							}
						},
						{
							"id": 129863,
							"name": "insightsVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Specify the version of CloudWatch Lambda insights to use for monitoring",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights.html\n\nWhen used with `DockerImageFunction` or `DockerImageCode`, the Docker image should have\nthe Lambda insights agent installed."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-Getting-Started-docker.html\n"
									},
									{
										"tag": "default",
										"text": "- No Lambda Insights\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 200,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LambdaInsightsVersion",
								"package": "aws-cdk-lib",
								"name": "LambdaInsightsVersion"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.insightsVersion"
							}
						},
						{
							"id": 129846,
							"name": "layers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure layers for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  layers: [myLayer]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 208,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ILayerVersion",
									"package": "aws-cdk-lib",
									"name": "ILayerVersion"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.layers"
							}
						},
						{
							"id": 129866,
							"name": "logRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days log events are kept in CloudWatch Logs. When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
								"tags": [
									{
										"tag": "default",
										"text": "logs.RetentionDays.INFINITE\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 231,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RetentionDays",
								"package": "aws-cdk-lib",
								"name": "RetentionDays"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetention"
							}
						},
						{
							"id": 129868,
							"name": "logRetentionRetryOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.\nThese options control the retry policy when interacting with CloudWatch APIs.",
								"tags": [
									{
										"tag": "default",
										"text": "- Default AWS SDK retry options.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 245,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogRetentionRetryOptions",
								"package": "aws-cdk-lib",
								"name": "LogRetentionRetryOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRetryOptions"
							}
						},
						{
							"id": 129867,
							"name": "logRetentionRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The IAM role for the Lambda function associated with the custom resource\nthat sets the retention policy.",
								"tags": [
									{
										"tag": "default",
										"text": "- A new role is created.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 238,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRole"
							}
						},
						{
							"id": 129877,
							"name": "maxEventAge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum age of a request that Lambda sends to a function for\nprocessing.",
								"text": "Minimum: 60 seconds\nMaximum: 6 hours\n",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.hours(6)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.maxEventAge"
							}
						},
						{
							"id": 129840,
							"name": "memorySize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The amount of memory in MB allocated.",
								"tags": [
									{
										"tag": "default",
										"text": "1024\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 2048,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.memorySize"
							}
						},
						{
							"id": 129875,
							"name": "onFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for failed invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onFailure"
							}
						},
						{
							"id": 129876,
							"name": "onSuccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for successful invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onSuccess"
							}
						},
						{
							"id": 129845,
							"name": "permissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure permissions for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  permissions: [\"ses\", Bucket]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Permissions"
							}
						},
						{
							"id": 129861,
							"name": "profiling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enable profiling.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- No profiling.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 182,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profiling"
							}
						},
						{
							"id": 129862,
							"name": "profilingGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Profiling Group.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- A new profiling group will be created if `profiling` is set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 189,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IProfilingGroup",
								"package": "aws-cdk-lib",
								"name": "IProfilingGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profilingGroup"
							}
						},
						{
							"id": 129864,
							"name": "reservedConcurrentExecutions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum of concurrent executions you want to reserve for the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No specific limit - account limit."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 215,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.reservedConcurrentExecutions"
							}
						},
						{
							"id": 129878,
							"name": "retryAttempts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum number of times to retry when the function returns an error.",
								"text": "Minimum: 0\nMaximum: 2\n",
								"tags": [
									{
										"tag": "default",
										"text": "2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.retryAttempts"
							}
						},
						{
							"id": 129856,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda execution role.",
								"text": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".\n",
								"tags": [
									{
										"tag": "default",
										"text": "- A unique role will be generated for this lambda function.\nBoth supplied and generated roles can always be changed by calling `addToRolePolicy`.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 111,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.role"
							}
						},
						{
							"id": 129839,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The runtime environment.",
								"tags": [
									{
										"tag": "default",
										"text": "\"nodejs12.x\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  runtime: \"nodejs14.x\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nodejs14.x"
									},
									{
										"type": "literal",
										"value": "nodejs"
									},
									{
										"type": "literal",
										"value": "nodejs4.3"
									},
									{
										"type": "literal",
										"value": "nodejs6.10"
									},
									{
										"type": "literal",
										"value": "nodejs8.10"
									},
									{
										"type": "literal",
										"value": "nodejs10.x"
									},
									{
										"type": "literal",
										"value": "nodejs12.x"
									},
									{
										"type": "literal",
										"value": "python2.7"
									},
									{
										"type": "literal",
										"value": "python3.6"
									},
									{
										"type": "literal",
										"value": "python3.7"
									},
									{
										"type": "literal",
										"value": "python3.8"
									},
									{
										"type": "literal",
										"value": "python3.9"
									},
									{
										"type": "literal",
										"value": "dotnetcore1.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.1"
									},
									{
										"type": "literal",
										"value": "dotnetcore3.1"
									},
									{
										"type": "literal",
										"value": "go1.x"
									},
									{
										"type": "reference",
										"qualifiedName": "Runtime",
										"package": "aws-cdk-lib",
										"name": "Runtime"
									}
								]
							}
						},
						{
							"id": 129849,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The list of security groups to associate with the Lambda's network interfaces.",
								"text": "Only used if 'vpc' is supplied.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- If the function is placed within a VPC and a security group is\nnot specified, either by this or securityGroup prop, a dedicated security\ngroup will be created for this function.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 138,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 129838,
							"name": "srcPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Root directory of the project, typically where package.json is located. Set if using a monorepo with multiple subpackages",
								"tags": [
									{
										"tag": "default",
										"text": "Defaults to the same directory as sst.json\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  srcPath: \"packages/backend\",\n  handler: \"function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129841,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The execution timeout in seconds.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 30,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 146,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"qualifiedName": "Duration",
										"package": "aws-cdk-lib",
										"name": "Duration"
									}
								]
							}
						},
						{
							"id": 129842,
							"name": "tracing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable AWS X-Ray Tracing.",
								"tags": [
									{
										"tag": "default",
										"text": "\"active\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  tracing: \"pass_through\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 159,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Tracing",
								"package": "aws-cdk-lib",
								"name": "Tracing"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.tracing"
							}
						},
						{
							"id": 129847,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "VPC network to place Lambda network interfaces",
								"text": "Specify this if the Lambda function needs to access resources in a VPC.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- Function is not placed within a VPC.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpc"
							}
						},
						{
							"id": 129848,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the network interfaces within the VPC.",
								"text": "Only used if 'vpc' is supplied. Note: internet access for Lambdas\nrequires a NAT gateway, so picking Public subnets is not allowed.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- the Vpc default strategy if not specified\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 128,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129857,
								129871,
								129874,
								129844,
								129873,
								129869,
								129859,
								129858,
								129860,
								129850,
								129843,
								129851,
								129872,
								129865,
								129870,
								129833,
								129837,
								129855,
								129863,
								129846,
								129866,
								129868,
								129867,
								129877,
								129840,
								129875,
								129876,
								129845,
								129861,
								129862,
								129864,
								129878,
								129856,
								129839,
								129849,
								129838,
								129841,
								129842,
								129847,
								129848
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 49,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "FunctionOptions",
									"package": "aws-cdk-lib",
									"name": "lambda.FunctionOptions"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "functionName"
										},
										{
											"type": "literal",
											"value": "timeout"
										},
										{
											"type": "literal",
											"value": "runtime"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 129882,
					"name": "FunctionBundleProp",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 229,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 129883,
								"name": "FunctionBundleNodejsProps"
							},
							{
								"type": "reference",
								"id": 129896,
								"name": "FunctionBundlePythonProps"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 129831,
					"name": "FunctionDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 129902,
								"name": "Function"
							},
							{
								"type": "reference",
								"id": 129832,
								"name": "FunctionProps"
							}
						]
					}
				},
				{
					"id": 129830,
					"name": "FunctionInlineDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						]
					}
				},
				{
					"id": 129829,
					"name": "HandlerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 45,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "FunctionHandlerProps"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129902
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129899,
						129883,
						129896,
						129879,
						129832
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						129882,
						129831,
						129830,
						129829
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Function.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 129690,
			"name": "Queue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129701,
					"name": "Queue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Queue` construct is a higher level CDK construct that makes it easy to create a [SQS Queues](https://aws.amazon.com/sqs/). You can create a queue by specifying a consumer function. And then publish to the queue from any part of your serverless app.",
						"text": "This construct makes it easier to define a queue and a consumer. It also internally connects the consumer and queue together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Queue } from \"@serverless-stack/resources\";\n\nnew Queue(this, \"Queue\", {\n  consumer: \"src/queueConsumer.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129705,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129706,
									"name": "new Queue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129707,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129708,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129709,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129691,
												"name": "QueueProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129701,
										"name": "Queue"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129710,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 109,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129711,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129712,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IQueue",
												"package": "aws-cdk-lib",
												"name": "IQueue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129712
											]
										}
									]
								}
							}
						},
						{
							"id": 129713,
							"name": "consumerFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internally created consumer `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129737,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129714,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 129715,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 129691,
								"name": "QueueProps"
							}
						},
						{
							"id": 129716,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 145,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129717,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a consumer after creating the queue. Note only one consumer can be added to a queue",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst queue = new Queue(props.stack, \"Queue\");\nqueue.addConsumer(props.stack, \"src/function.handler\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129718,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129719,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129696,
														"name": "QueueConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129720,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 194,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129721,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to the consumer function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst queue = new Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n});\nqueue.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129722,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129735,
							"name": "createQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 213,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129736,
									"name": "createQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129723,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 202,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129724,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129725,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129727,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129728,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129731,
																	"name": "consumer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 129732,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 129733,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 129734,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								129733,
																								129734
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129729,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129730,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129731,
																		129729,
																		129730
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129726,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Queue"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129727,
														129726
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129738,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129739,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129702,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129703,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129704,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129705
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129710,
								129713,
								129737,
								129714,
								129715
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129716,
								129720,
								129735,
								129723,
								129738,
								129702
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 108,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129696,
					"name": "QueueConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the consumer for the queue and invocation details"
					},
					"children": [
						{
							"id": 129698,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129699,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129700,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the consumer.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: {\n    function: \"test/lambda.handler\",\n    cdk: {\n      eventSource: {\n        batchSize: 5,\n      },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 84,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "SqsEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129700
											]
										}
									]
								}
							}
						},
						{
							"id": 129697,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: {\n    function: {\n      handler: \"src/function.handler\",\n      timeout: 10,\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129698,
								129697
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 49,
							"character": 17
						}
					]
				},
				{
					"id": 129691,
					"name": "QueueProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129692,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129693,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129694,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the queue.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n  cdk: {\n    queue: {\n      fifo: true,\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IQueue",
														"package": "aws-cdk-lib",
														"name": "IQueue"
													},
													{
														"type": "reference",
														"qualifiedName": "QueueProps",
														"package": "aws-cdk-lib",
														"name": "QueueProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129694
											]
										}
									]
								}
							}
						},
						{
							"id": 129695,
							"name": "consumer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create the consumer for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 129830,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 129696,
										"name": "QueueConsumerProps"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129692,
								129695
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129701
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129696,
						129691
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Queue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129203,
			"name": "RDS",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129230,
					"name": "RDS",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `RDS` construct is a higher level CDK construct that makes it easy to create an [RDS Serverless Cluster](https://aws.amazon.com/rds/). It uses the following defaults:",
						"text": "- Defaults to using the [Serverless v1 On-Demand autoscaling configuration](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) to make it serverless.\n- Provides a built-in interface for running schema migrations using [Kysely](https://koskimas.github.io/kysely/#migrations).\n- Enables [Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) to allow your Lambda functions to access the database cluster without needing to deploy the functions in a VPC (virtual private cloud).\n- Enables [Backup Snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/BackupRestoreAurora.html) to make sure that you don't lose your data.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { RDS } from \"@serverless-stack/resources\";\n\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"my_database\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 129234,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 149,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129235,
									"name": "new RDS",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129236,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129237,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129238,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129204,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129230,
										"name": "RDS"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129239,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 136,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129240,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129241,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 140,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ServerlessCluster",
												"package": "aws-cdk-lib",
												"name": "ServerlessCluster"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129241
											]
										}
									]
								}
							}
						},
						{
							"id": 129242,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 142,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129244,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 147,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129243,
							"name": "migratorFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 146,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129304,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129245,
							"name": "clusterArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 199,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129246,
									"name": "clusterArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `ServerlessCluster` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129249,
							"name": "clusterEndpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129250,
									"name": "clusterEndpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Endpoint",
										"package": "aws-cdk-lib",
										"name": "Endpoint"
									}
								}
							]
						},
						{
							"id": 129247,
							"name": "clusterIdentifier",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 206,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129248,
									"name": "clusterIdentifier",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129251,
							"name": "secretArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129252,
									"name": "secretArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129298,
							"name": "createMigrationCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 400,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129299,
									"name": "createMigrationCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129300,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129293,
							"name": "createMigrationsFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 347,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129294,
									"name": "createMigrationsFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129295,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129296,
											"name": "defaultDatabaseName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129297,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 129301,
							"name": "generateMigrationsHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 438,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129302,
									"name": "generateMigrationsHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129303,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129253,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 224,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129254,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129255,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129257,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129258,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129261,
																	"name": "clusterArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129262,
																	"name": "clusterIdentifier",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129263,
																	"name": "defaultDatabaseName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129259,
																	"name": "engine",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129264,
																	"name": "migrator",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 129265,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 129266,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 129267,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								129266,
																								129267
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129260,
																	"name": "secretArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129261,
																		129262,
																		129263,
																		129259,
																		129264,
																		129260
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129256,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "RDS"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129257,
														129256
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129277,
							"name": "getEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 290,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129278,
									"name": "getEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129279,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129216,
												"name": "RDSEngineType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IClusterEngine",
										"package": "aws-cdk-lib",
										"name": "IClusterEngine"
									}
								}
							]
						},
						{
							"id": 129280,
							"name": "getScaling",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 310,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129281,
									"name": "getScaling",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129282,
											"name": "scaling",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 129283,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 129284,
															"name": "autoPause",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The time before the cluster is paused.",
																"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
																"tags": [
																	{
																		"tag": "default",
																		"text": "true\n"
																	},
																	{
																		"tag": "example",
																		"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 67,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 129286,
															"name": "maxCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The maximum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_16\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 81,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														},
														{
															"id": 129285,
															"name": "minCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The minimum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_2\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 74,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																129284,
																129286,
																129285
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "ServerlessScalingOptions",
										"package": "aws-cdk-lib",
										"name": "ServerlessScalingOptions"
									}
								}
							]
						},
						{
							"id": 129287,
							"name": "getVpc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 325,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129288,
									"name": "getVpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129289,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129217,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVpc",
										"package": "aws-cdk-lib",
										"name": "IVpc"
									}
								}
							]
						},
						{
							"id": 129290,
							"name": "getVpcSubnets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 335,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129291,
									"name": "getVpcSubnets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129292,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129217,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "SubnetSelection",
												"package": "aws-cdk-lib",
												"name": "SubnetSelection"
											}
										]
									}
								}
							]
						},
						{
							"id": 129305,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129306,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129274,
							"name": "validateMigrationsFileExists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 283,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129275,
									"name": "validateMigrationsFileExists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129276,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129268,
							"name": "validateRDSServerlessClusterProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 239,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129269,
									"name": "validateRDSServerlessClusterProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129270,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129217,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129271,
							"name": "validateRequiredProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 271,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129272,
									"name": "validateRequiredProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129273,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129204,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129231,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129232,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129233,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129234
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129239,
								129242,
								129244,
								129243,
								129304
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								129245,
								129249,
								129247,
								129251
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129298,
								129293,
								129301,
								129253,
								129277,
								129280,
								129287,
								129290,
								129305,
								129274,
								129268,
								129271,
								129231
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 135,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129217,
					"name": "RDSCdkServerlessClusterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129222,
							"name": "backupRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days during which automatic DB snapshots are retained.\nAutomatic backup retention cannot be disabled on serverless clusters.\nMust be a value from 1 day to 35 days.",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.days(1)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.backupRetention"
							}
						},
						{
							"id": 129221,
							"name": "clusterIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "An optional identifier for the cluster",
								"tags": [
									{
										"tag": "default",
										"text": "- A name is automatically generated.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.clusterIdentifier"
							}
						},
						{
							"id": 129219,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Credentials for the administrative user",
								"tags": [
									{
										"tag": "default",
										"text": "- A username of 'admin' and SecretsManager-generated password\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Credentials",
								"package": "aws-cdk-lib",
								"name": "Credentials"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.credentials"
							}
						},
						{
							"id": 129223,
							"name": "deletionProtection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Indicates whether the DB cluster should have deletion protection enabled.",
								"tags": [
									{
										"tag": "default",
										"text": "- true if removalPolicy is RETAIN, false otherwise\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deletionProtection"
							}
						},
						{
							"id": 129224,
							"name": "enableDataApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to enable the Data API.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 84,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.enableDataApi"
							}
						},
						{
							"id": 129228,
							"name": "parameterGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Additional parameters to pass to the database engine",
								"tags": [
									{
										"tag": "default",
										"text": "- no parameter group.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IParameterGroup",
								"package": "aws-cdk-lib",
								"name": "IParameterGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parameterGroup"
							}
						},
						{
							"id": 129226,
							"name": "removalPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The removal policy to apply when the cluster and its instances are removed\nfrom the stack or replaced during an update.",
								"tags": [
									{
										"tag": "default",
										"text": "- RemovalPolicy.SNAPSHOT (remove the cluster and instances, but retain a snapshot of the data)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 112,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RemovalPolicy",
								"package": "aws-cdk-lib",
								"name": "RemovalPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.removalPolicy"
							}
						},
						{
							"id": 129227,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Security group.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new security group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no VPC security groups will be associated with the DB cluster.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 129220,
							"name": "storageEncryptionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The KMS key for storage encryption.",
								"tags": [
									{
										"tag": "default",
										"text": "- the default master key will be used for storage encryption\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 306,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.storageEncryptionKey"
							}
						},
						{
							"id": 129229,
							"name": "subnetGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Existing subnet group for the cluster.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new subnet group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no subnet group will be associated with the DB cluster\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ISubnetGroup",
								"package": "aws-cdk-lib",
								"name": "ISubnetGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.subnetGroup"
							}
						},
						{
							"id": 129218,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							}
						},
						{
							"id": 129225,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the instances within the VPC.\nIf provided, the `vpc` property must also be specified.",
								"tags": [
									{
										"tag": "default",
										"text": "- the VPC default strategy if not specified.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129222,
								129221,
								129219,
								129223,
								129224,
								129228,
								129226,
								129227,
								129220,
								129229,
								129218,
								129225
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 102,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "ServerlessClusterProps",
									"package": "aws-cdk-lib",
									"name": "rds.ServerlessClusterProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "vpc"
										},
										{
											"type": "literal",
											"value": "engine"
										},
										{
											"type": "literal",
											"value": "defaultDatabaseName"
										},
										{
											"type": "literal",
											"value": "scaling"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 129204,
					"name": "RDSProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129205,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129206,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129207,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internallly created RDS cluster.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  cdk: {\n    cluster: {\n      clusterIdentifier: \"my-cluster\",\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 34,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129217,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129207
											]
										}
									]
								}
							}
						},
						{
							"id": 129209,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Name of a database which is automatically created inside the cluster."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129208,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Database engine of the cluster. Cannot be changed once set."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129216,
								"name": "RDSEngineType"
							}
						},
						{
							"id": 129215,
							"name": "migrations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the directory that contains the migration scripts. The `RDS` construct uses [Kysely](https://koskimas.github.io/kysely/) to run and manage schema migrations. The `migrations` prop should point to the folder where your migration files are.",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"acme\",\n  migrations: \"path/to/migration/scripts\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129210,
							"name": "scaling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129211,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129212,
											"name": "autoPause",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The time before the cluster is paused.",
												"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
												"tags": [
													{
														"tag": "default",
														"text": "true\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 129214,
											"name": "maxCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The maximum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_16\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 81,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										},
										{
											"id": 129213,
											"name": "minCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The minimum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_2\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129212,
												129214,
												129213
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129205,
								129209,
								129208,
								129215,
								129210
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 129216,
					"name": "RDSEngineType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 100,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "mysql5.6"
							},
							{
								"type": "literal",
								"value": "mysql5.7"
							},
							{
								"type": "literal",
								"value": "postgresql10.14"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129230
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129217,
						129204
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						129216
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/RDS.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129650,
			"name": "Script",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129659,
					"name": "Script",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Script` construct is a higher level CDK construct that makes it easy to run a script in a Lambda function during the deployment process. It provides a simple way to build and bundle the script function; and allows you to pass parameter values based on outputs from other constructs in your SST app. So you don't have to hard code values in your script. You can configure a script to run before or after any of the stacks or resources are deployed in your app.",
						"text": "Since the script is running inside a Lambda function, it can interact with resources like the RDS databases, that are inside a VPC; and make AWS API calls to services that the IAM credentials in your local environment or CI might not have permissions to.\n\nA few things to note:\n- It does not run locally. It runs inside a Lambda function.\n- It gets run on every deployment.\n- It can run for a maximum of 15 minutes.\n- [Live Lambda Dev](../live-lambda-development.md) is not enabled for these functions.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal config\n\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/function.create\",\n  onUpdate: \"src/function.update\",\n  onDelete: \"src/function.delete\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 129663,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129664,
									"name": "new Script",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129665,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129666,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129667,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129651,
												"name": "ScriptProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129659,
										"name": "Script"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129668,
							"name": "createFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onCreate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129670,
							"name": "deleteFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onDelete `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 119,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129687,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129671,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 120,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 129651,
								"name": "ScriptProps"
							}
						},
						{
							"id": 129669,
							"name": "updateFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onUpdate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 129902,
								"name": "Function"
							}
						},
						{
							"id": 129672,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 153,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129673,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grants additional permissions to the script",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nscript.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129674,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129685,
							"name": "checkDeprecatedFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 254,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129686,
									"name": "checkDeprecatedFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129681,
							"name": "createCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 231,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129682,
									"name": "createCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129683,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "App"
											}
										},
										{
											"id": 129684,
											"name": "crFunction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "aws-cdk-lib",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129679,
							"name": "createCustomResourceFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 216,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129680,
									"name": "createCustomResourceFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 129675,
							"name": "createUserFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 159,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 129676,
									"name": "createUserFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129677,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129678,
											"name": "fnDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129831,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 129902,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 129688,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129689,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129660,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129661,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129662,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129663
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129668,
								129670,
								129687,
								129671,
								129669
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129672,
								129685,
								129681,
								129679,
								129675,
								129688,
								129660
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 107,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					]
				},
				{
					"id": 129651,
					"name": "ScriptProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129653,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129654,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129655,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Script.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129655
											]
										}
									]
								}
							}
						},
						{
							"id": 129656,
							"name": "onCreate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs when the Script is created.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onCreate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129658,
							"name": "onDelete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Create the function that runs when the Script is deleted from the stack.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onDelete: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129657,
							"name": "onUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs on every deploy after the Script is created",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onUpdate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 129652,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object of input parameters to be passed to the script. Made available in the `event` object of the function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/script.create\",\n  params: {\n    hello: \"world\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129653,
								129656,
								129658,
								129657,
								129652
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129659
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129651
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Script.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129446,
			"name": "Table",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129480,
					"name": "Table",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Table` construct is a higher level CDK construct that makes it easy to create a [DynamoDB](https://aws.amazon.com/dynamodb/) table. It uses the following defaults:",
						"text": "- Defaults to using the [On-Demand capacity](https://aws.amazon.com/dynamodb/pricing/on-demand/) to make it perfectly serverless.\n- Enables [Point-in-Time Recovery](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html) to make sure that you don't lose your data.\n- Provides a nicer interface for defining indexes.\n"
					},
					"children": [
						{
							"id": 129484,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 237,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129485,
									"name": "new Table",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129486,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129487,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129488,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129447,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129480,
										"name": "Table"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129489,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 224,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129490,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129491,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Table` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITable",
												"package": "aws-cdk-lib",
												"name": "ITable"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129491
											]
										}
									]
								}
							}
						},
						{
							"id": 129492,
							"name": "dynamodbTableType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 230,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "CREATED"
									},
									{
										"type": "literal",
										"value": "IMPORTED"
									}
								]
							}
						},
						{
							"id": 129500,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 235,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129493,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129494,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 129495,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 129496,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 129902,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 129566,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129497,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 232,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 129498,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 233,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 129447,
								"name": "TableProps"
							}
						},
						{
							"id": 129499,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 234,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "StreamViewType",
								"package": "aws-cdk-lib",
								"name": "StreamViewType"
							}
						},
						{
							"id": 129507,
							"name": "tableArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 364,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129508,
									"name": "tableArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129509,
							"name": "tableName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 371,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129510,
									"name": "tableName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129544,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 528,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129545,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129546,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129547,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129548,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129464,
														"name": "TableConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129902,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 129511,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 386,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129512,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Define additional consumers for table events",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addConsumers(this, {\n  consumer1: \"src/consumer1.main\",\n  consumer2: \"src/consumer2.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129513,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129514,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 129515,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 129516,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 129517,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 129830,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 129464,
																	"name": "TableConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129501,
							"name": "addGlobalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129502,
									"name": "addGlobalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional global secondary indexes where the `key` is the name of the global secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addGlobalIndexes({\n  gsi1: {\n    partitionKey: \"pk\",\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129503,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 129469,
														"name": "TableGlobalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129504,
							"name": "addLocalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129505,
									"name": "addLocalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional local secondary indexes where the `key` is the name of the local secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addLocalIndexes({\n  lsi1: {\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129506,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 129475,
														"name": "TableLocalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129518,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 405,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129519,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to all consumers of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129520,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129521,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 419,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129522,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to a specific consumer of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129523,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129524,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129549,
							"name": "buildAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 588,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129550,
									"name": "buildAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129551,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 129552,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 129553,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 129554,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "TableFieldType"
														}
													}
												}
											}
										},
										{
											"id": 129555,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Attribute",
										"package": "aws-cdk-lib",
										"name": "Attribute"
									}
								}
							]
						},
						{
							"id": 129559,
							"name": "buildKinesisStreamSpec",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 614,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129560,
									"name": "buildKinesisStreamSpec",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129561,
											"name": "kinesisStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "KinesisStream"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129556,
							"name": "buildStreamConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 600,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129557,
									"name": "buildStreamConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129558,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "new_image"
													},
													{
														"type": "literal",
														"value": "old_image"
													},
													{
														"type": "literal",
														"value": "new_and_old_images"
													},
													{
														"type": "literal",
														"value": "keys_only"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "StreamViewType",
												"package": "aws-cdk-lib",
												"name": "StreamViewType"
											}
										]
									}
								}
							]
						},
						{
							"id": 129542,
							"name": "createTable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 460,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129543,
									"name": "createTable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129528,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 447,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129529,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129530,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129532,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129533,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129535,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 129536,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 129538,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 129539,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 129540,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 129541,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													129540,
																													129541
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 129537,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							129538,
																							129537
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129534,
																	"name": "tableName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129535,
																		129534
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129531,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Table"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129532,
														129531
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129525,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129526,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given consumer.",
										"text": "```js\n const table = new Table(this, \"Table\", {\n   consumers: {\n     consumer1: \"./src/function.handler\",\n   }\n })\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
									},
									"parameters": [
										{
											"id": 129527,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 129902,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 129567,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129568,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129562,
							"name": "validateFieldsAndIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129563,
									"name": "validateFieldsAndIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129564,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129565,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 129447,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129481,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129482,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129483,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129484
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129489,
								129492,
								129500,
								129493,
								129566,
								129497,
								129498,
								129499
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								129507,
								129509
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129544,
								129511,
								129501,
								129504,
								129518,
								129521,
								129549,
								129559,
								129556,
								129542,
								129528,
								129525,
								129567,
								129562,
								129481
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 223,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129464,
					"name": "TableConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129466,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 171,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129467,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129468,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created event source"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 175,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DynamoEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "DynamoEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129468
											]
										}
									]
								}
							}
						},
						{
							"id": 129465,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the table."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 170,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129466,
								129465
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 166,
							"character": 17
						}
					]
				},
				{
					"id": 129469,
					"name": "TableGlobalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129472,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129473,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129474,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created global secondary index"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "GlobalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "GlobalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "partitionKey"
															},
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129474
											]
										}
									]
								}
							}
						},
						{
							"id": 129470,
							"name": "partitionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as a partition key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 183,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 129471,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129472,
								129470,
								129471
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 179,
							"character": 17
						}
					]
				},
				{
					"id": 129475,
					"name": "TableLocalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129477,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129478,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129479,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created local secondary indexes"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 208,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "LocalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "LocalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129479
											]
										}
									]
								}
							}
						},
						{
							"id": 129476,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129477,
								129476
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 199,
							"character": 17
						}
					]
				},
				{
					"id": 129447,
					"name": "TableProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129461,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129462,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129463,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created cdk table"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITable",
														"package": "aws-cdk-lib",
														"name": "ITable"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "TableProps",
																"package": "aws-cdk-lib",
																"name": "TableProps"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "partitionKey"
																	},
																	{
																		"type": "literal",
																		"value": "sortKey"
																	}
																]
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129463
											]
										}
									]
								}
							}
						},
						{
							"id": 129460,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure DynamoDB streams and consumers",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nconst table = new Table(this, \"Table\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: \"src/consumer2.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 155,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 129830,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 129464,
												"name": "TableConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129457,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129458,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129459,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Table. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(this, \"Table\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { topicName: topic.topicName },\n      permissions: [topic],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 139,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129459
											]
										}
									]
								}
							}
						},
						{
							"id": 129448,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object defining the fields of the table. Key is the name of the field and the value is the type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129453,
							"name": "globalIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's global secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    gsi1pk: \"string\",\n    gsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"GSI1\": { partitionKey: \"gsi1pk\", sortKey: \"gsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 129469,
										"name": "TableGlobalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129455,
							"name": "kinesisStream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "KinesisStream"
							}
						},
						{
							"id": 129454,
							"name": "localIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's local secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    lsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"lsi1\": { sortKey: \"lsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 129475,
										"name": "TableLocalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 129449,
							"name": "primaryIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129450,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129451,
											"name": "partitionKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Define the Partition Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129452,
											"name": "sortKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the Sort Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\", sortKey: \"sk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129451,
												129452
											]
										}
									]
								}
							}
						},
						{
							"id": 129456,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the information that will be written to the Stream.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {8}\nnew Table(props.stack, \"Table\", {\n  stream: \"new_image\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "new_image"
									},
									{
										"type": "literal",
										"value": "old_image"
									},
									{
										"type": "literal",
										"value": "new_and_old_images"
									},
									{
										"type": "literal",
										"value": "keys_only"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129461,
								129460,
								129457,
								129448,
								129453,
								129455,
								129454,
								129449,
								129456
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129480
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129464,
						129469,
						129475,
						129447
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Table.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 129569,
			"name": "Topic",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 129588,
					"name": "Topic",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Topic` construct is a higher level CDK construct that makes it easy to create a serverless pub/sub service. You can create a topic that has a list of subscribers. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of subscribers; Function subscribers (subscribe with a Lambda function) or Queue subscribers (subscribe with a SQS queue).\n\nThis construct makes it easier to define a topic and its subscribers. It also internally connects the subscribers and topic together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Topic } from \"@serverless-stack/resources\";\n\nnew Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129592,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 155,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 129593,
									"name": "new Topic",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129594,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129595,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129596,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 129570,
												"name": "TopicProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 129588,
										"name": "Topic"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 129597,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 145,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129598,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129599,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Topic` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 149,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITopic",
												"package": "aws-cdk-lib",
												"name": "ITopic"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129599
											]
										}
									]
								}
							}
						},
						{
							"id": 129647,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 129601,
							"name": "permissionsAttachedForAllSubscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 152,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 129602,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 129570,
								"name": "TopicProps"
							}
						},
						{
							"id": 129600,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 151,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 129902,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 129701,
											"name": "Queue"
										}
									]
								}
							}
						},
						{
							"id": 129607,
							"name": "subscriberFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 184,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129608,
									"name": "subscriberFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created function instances for the subscribers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 129902,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 129609,
							"name": "subscriptions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 193,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129610,
									"name": "subscriptions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of subscriptions for this topic"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Subscription",
											"package": "aws-cdk-lib",
											"name": "Subscription"
										}
									}
								}
							]
						},
						{
							"id": 129603,
							"name": "topicArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129604,
									"name": "topicArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129605,
							"name": "topicName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 177,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 129606,
									"name": "topicName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 129643,
							"name": "addFunctionSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129644,
									"name": "addFunctionSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129645,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129646,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129578,
														"name": "TopicFunctionSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129639,
							"name": "addQueueSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 328,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129640,
									"name": "addQueueSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129641,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129642,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 129583,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129635,
							"name": "addSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 306,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129636,
									"name": "addSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129637,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129638,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 129830,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 129578,
														"name": "TopicFunctionSubscriberProps"
													},
													{
														"type": "reference",
														"id": 129701,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 129583,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129611,
							"name": "addSubscribers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 226,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129612,
									"name": "addSubscribers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add subscribers to the topic.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.addSubscribers(this, [\"src/subscriber3.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129613,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 129614,
											"name": "subscribers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 129830,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 129578,
															"name": "TopicFunctionSubscriberProps"
														},
														{
															"type": "reference",
															"id": 129701,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 129583,
															"name": "TopicQueueSubscriberProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129615,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 250,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129616,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the subscriber functions. This allows the subscribers to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129617,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129618,
							"name": "attachPermissionsToSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 268,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129619,
									"name": "attachPermissionsToSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the list of permissions to a given subscriber by index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n\ntopic.attachPermissionsToSubscriber(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129620,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 129621,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129633,
							"name": "createTopic",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 291,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 129634,
									"name": "createTopic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 129622,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 129623,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129624,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129626,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 129627,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 129629,
																	"name": "subscribers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 129630,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 129631,
																						"name": "node",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "fn.node.addr"
																					},
																					{
																						"id": 129632,
																						"name": "stack",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							129631,
																							129632
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 129628,
																	"name": "topicArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		129629,
																		129628
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 129625,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Topic"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														129626,
														129625
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 129648,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 129649,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 129589,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 129590,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 129591,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								129592
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129597,
								129647,
								129601,
								129602,
								129600
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								129607,
								129609,
								129603,
								129605
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								129643,
								129639,
								129635,
								129611,
								129615,
								129618,
								129633,
								129622,
								129648,
								129589
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 144,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 129578,
					"name": "TopicFunctionSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    function: \"src/function.handler\",\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129580,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129581,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129582,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129582
											]
										}
									]
								}
							}
						},
						{
							"id": 129579,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the subscriber function for the topic"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129831,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129580,
								129579
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 129570,
					"name": "TopicProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 129575,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129576,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129577,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the topic."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITopic",
														"package": "aws-cdk-lib",
														"name": "ITopic"
													},
													{
														"type": "reference",
														"qualifiedName": "TopicProps",
														"package": "aws-cdk-lib",
														"name": "TopicProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129577
											]
										}
									]
								}
							}
						},
						{
							"id": 129571,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129572,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129573,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Topic. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Topic(props.stack, \"Topic\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 129832,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129573
											]
										}
									]
								}
							}
						},
						{
							"id": 129574,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of subscribers to create for this topic",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Topic(this, \"Topic\", {\n  subscribers: [\n    \"src/function1.handler\",\n    \"src/function2.handler\"\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 129830,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 129578,
											"name": "TopicFunctionSubscriberProps"
										},
										{
											"type": "reference",
											"id": 129701,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 129583,
											"name": "TopicQueueSubscriberProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129575,
								129571,
								129574
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 129583,
					"name": "TopicQueueSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    queue: new Queue(this, \"Queue\", {\n      consumer: \"src/function.handler\",\n    })\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 129585,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 129586,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 129587,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "SqsSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												129587
											]
										}
									]
								}
							}
						},
						{
							"id": 129584,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue that'll be added as a subscriber to the topic."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 129701,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129585,
								129584
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 109,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						129588
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						129578,
						129570,
						129583
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Topic.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				128961,
				129307,
				129740,
				129154,
				130092,
				129828,
				129690,
				129203,
				129650,
				129446,
				129569
			]
		}
	]
}