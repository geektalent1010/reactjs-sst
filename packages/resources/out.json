{
	"id": 214795,
	"name": "@serverless-stack/resources",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 214796,
			"name": "Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 214880,
					"name": "Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Api construct is a higher level CDK construct that makes it easy to create an API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains.",
						"tags": [
							{
								"tag": "example",
								"text": "\nThe `Api` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Using the minimal config\n\n```ts\nimport { Api } from \"@serverless-stack/resources\";\n\nnew Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n    \"POST   /notes\": \"src/create.main\",\n    \"GET    /notes/{id}\": \"src/get.main\",\n    \"PUT    /notes/{id}\": \"src/update.main\",\n    \"DELETE /notes/{id}\": \"src/delete.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 214884,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 423,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 214885,
									"name": "new Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 214886,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 214887,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214888,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214889,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 214798,
												"typeArguments": [
													{
														"type": "reference",
														"id": 214886,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 214886,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 214880,
										"typeArguments": [
											{
												"type": "reference",
												"id": 214886,
												"name": "Authorizers"
											}
										],
										"name": "Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 214897,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 416,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 214902,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 420,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IHttpRouteAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "IHttpRouteAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 214890,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 397,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214891,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214893,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 405,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 214895,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 413,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 214894,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 409,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 214892,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 401,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214893,
												214895,
												214894,
												214892
											]
										}
									]
								}
							}
						},
						{
							"id": 214985,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 214903,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 421,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 214896,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 415,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 214798,
								"typeArguments": [
									{
										"type": "reference",
										"id": 214886,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 214886,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiProps"
							}
						},
						{
							"id": 214898,
							"name": "routesData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 417,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214899,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 214900,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 214901,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 215737,
													"name": "Fn"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"qualifiedName": "IApplicationListener",
													"package": "aws-cdk-lib",
													"name": "elb.IApplicationListener"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 214906,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 451,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 214907,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 214910,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 214911,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 214908,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 214909,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 214904,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 440,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 214905,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 214945,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 674,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214946,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214947,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214886,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 214948,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 754,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214949,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214950,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214951,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214952,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214820,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 214886,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 214912,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 482,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 214913,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 214914,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214915,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 214820,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 214886,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 214919,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 519,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 214920,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 214921,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 214922,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 541,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 214923,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 214924,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214925,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 214971,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 973,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214972,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214973,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 214822,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 214886,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiFunctionRouteProps"
													},
													{
														"type": "reference",
														"id": 214829,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 214886,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiHttpRouteProps"
													},
													{
														"type": "reference",
														"id": 214838,
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 214886,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiAlbRouteProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 214974,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 214977,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 214975,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"none\""
														},
														{
															"id": 214976,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "HttpNoneAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "HttpNoneAuthorizer"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																214977,
																214975,
																214976
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 214978,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 214981,
															"name": "authorizationScopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 214979,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "user_pool"
																	},
																	{
																		"type": "literal",
																		"value": "jwt"
																	},
																	{
																		"type": "literal",
																		"value": "lambda"
																	}
																]
															}
														},
														{
															"id": 214980,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"qualifiedName": "IHttpRouteAuthorizer",
																"package": "@aws-cdk/aws-apigatewayv2-alpha",
																"name": "IHttpRouteAuthorizer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																214981,
																214979,
																214980
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 214959,
							"name": "createAlbIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 887,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214960,
									"name": "createAlbIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214961,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214962,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214963,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214838,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 214886,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiAlbRouteProps"
											}
										},
										{
											"id": 214964,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 214965,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 908,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 214966,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214967,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214968,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214969,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214822,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 214886,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 214970,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 214943,
							"name": "createHttpApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 573,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214944,
									"name": "createHttpApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 214953,
							"name": "createHttpIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 866,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214954,
									"name": "createHttpIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214955,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 214956,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214957,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214829,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 214886,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiHttpRouteProps"
											}
										},
										{
											"id": 214958,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									}
								}
							]
						},
						{
							"id": 214926,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 555,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 214927,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 214928,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 214930,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 214931,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 214935,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 214932,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "false"
																},
																{
																	"id": 214934,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 214936,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 214937,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 214939,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 214940,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 214941,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 214942,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													214941,
																													214942
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 214938,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							214939,
																							214938
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 214933,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		214935,
																		214932,
																		214934,
																		214936,
																		214933
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 214929,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														214930,
														214929
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 214916,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 505,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 214917,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 214918,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 214982,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 1008,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 214983,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 214984,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 214986,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 214987,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 214881,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 214882,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 214883,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								214884
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214897,
								214902,
								214890,
								214985,
								214903,
								214896,
								214898
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								214906,
								214910,
								214908,
								214904
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								214945,
								214948,
								214912,
								214919,
								214922,
								214971,
								214959,
								214965,
								214943,
								214953,
								214926,
								214916,
								214982,
								214986,
								214881
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 391,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 214988,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 216482,
							"name": "GraphQLApi"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 214838,
					"name": "ApiAlbRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to an ALB",
						"tags": [
							{
								"tag": "example",
								"text": "\nDOCTODO: Need to complete example\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"alb\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 214845,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 214844,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 214846,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 214846,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 214840,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 310,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214841,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214842,
											"name": "albListener",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The listener to the application load balancer used for the integration."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 314,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IApplicationListener",
												"package": "aws-cdk-lib",
												"name": "IApplicationListener"
											}
										},
										{
											"id": 214843,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 315,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpAlbIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpAlbIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214842,
												214843
											]
										}
									]
								}
							}
						},
						{
							"id": 214839,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 309,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "alb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214845,
								214844,
								214840,
								214839
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 307,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 214846,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 214846,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 214822,
					"name": "ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 214827,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 214826,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 214828,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 214828,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 214824,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition used to create the function for this route."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 253,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 214825,
							"name": "payloadFormatVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The payload format version for the route.",
								"tags": [
									{
										"tag": "default",
										"text": "\"2.0\"\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "1.0"
									},
									{
										"type": "literal",
										"value": "2.0"
									}
								]
							}
						},
						{
							"id": 214823,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214827,
								214826,
								214824,
								214825,
								214823
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 247,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 214828,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 214828,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 214829,
					"name": "ApiHttpRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a route handler that forwards to another URL",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(this, {\n  \"GET /notes/{id}\": {\n    type: \"url\",\n    url: \"https://example.com/notes/{id}\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 214836,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizationScopes"
							}
						},
						{
							"id": 214835,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 214837,
											"name": "AuthorizersKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 214837,
											"name": "AuthorizersKeys"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseRouteProps.authorizer"
							}
						},
						{
							"id": 214832,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 285,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214833,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214834,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Override the underlying CDK integration"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 289,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUrlIntegrationProps",
												"package": "@aws-cdk/aws-apigatewayv2-integrations-alpha",
												"name": "HttpUrlIntegrationProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214834
											]
										}
									]
								}
							}
						},
						{
							"id": 214830,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is a constant"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 280,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "url"
							}
						},
						{
							"id": 214831,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL to forward to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 284,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214836,
								214835,
								214832,
								214830,
								214831
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 275,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 214837,
							"name": "AuthorizersKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 214837,
									"name": "AuthorizersKeys"
								}
							],
							"name": "ApiBaseRouteProps"
						}
					]
				},
				{
					"id": 214859,
					"name": "ApiJwtAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 214865,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 349,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214866,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214867,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 350,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpJwtAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpJwtAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214867
											]
										}
									]
								}
							}
						},
						{
							"id": 214869,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 326,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 214861,
							"name": "jwt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 345,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214862,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214864,
											"name": "audience",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 347,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 214863,
											"name": "issuer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 346,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214864,
												214863
											]
										}
									]
								}
							}
						},
						{
							"id": 214868,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 214860,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 344,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "jwt"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214865,
								214869,
								214861,
								214868,
								214860
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 343,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 214870,
					"name": "ApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 214875,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 360,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214876,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214877,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 361,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214877
											]
										}
									]
								}
							}
						},
						{
							"id": 214872,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 357,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 214879,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 326,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 214878,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 214873,
							"name": "responseTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 358,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "SIMPLE"
										},
										{
											"type": "literal",
											"value": "IAM"
										}
									]
								}
							}
						},
						{
							"id": 214874,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 359,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							}
						},
						{
							"id": 214871,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 356,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214875,
								214872,
								214879,
								214878,
								214873,
								214874,
								214871
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 355,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 214798,
					"name": "ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 214805,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 214807,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 214818,
								"name": "Authorizers"
							}
						},
						{
							"id": 214799,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214800,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214801,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 214802,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214801,
												214802
											]
										}
									]
								}
							}
						},
						{
							"id": 214804,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							}
						},
						{
							"id": 214806,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 214808,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 150,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214809,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214812,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 214811,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 171,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 214819,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 214819,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 214810,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 167,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										},
										{
											"id": 214813,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 183,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 214814,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 214815,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 214816,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 214817,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 214,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																214816,
																214817
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214812,
												214811,
												214810,
												214813,
												214814
											]
										}
									]
								}
							}
						},
						{
							"id": 214803,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\n{\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n}\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 214820,
										"typeArguments": [
											{
												"type": "reference",
												"id": 214819,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214805,
								214807,
								214799,
								214804,
								214806,
								214808,
								214803
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 35,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 214818,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 214819,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 214818,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 214847,
					"name": "ApiUserPoolAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 214854,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 337,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214855,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214856,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 338,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpUserPoolAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "HttpUserPoolAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214856
											]
										}
									]
								}
							}
						},
						{
							"id": 214858,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 326,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.identitySource"
							}
						},
						{
							"id": 214857,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiBaseAuthorizer.name"
							}
						},
						{
							"id": 214848,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 331,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pool"
							}
						},
						{
							"id": 214849,
							"name": "userPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214850,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214852,
											"name": "clientIds",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 334,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 214851,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 333,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214853,
											"name": "region",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 335,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214852,
												214851,
												214853
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214854,
								214858,
								214857,
								214848,
								214849
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 330,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 214797,
					"name": "ApiPayloadFormatVersion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "query",
							"queryType": {
								"type": "reference",
								"name": "PayloadFormatVersions"
							}
						}
					}
				},
				{
					"id": 214820,
					"name": "ApiRouteProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Api.ts",
							"line": 219,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 214821,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 215665,
								"name": "FunctionInlineDefinition"
							},
							{
								"type": "reference",
								"id": 214822,
								"typeArguments": [
									{
										"type": "reference",
										"id": 214821,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiFunctionRouteProps"
							},
							{
								"type": "reference",
								"id": 214829,
								"typeArguments": [
									{
										"type": "reference",
										"id": 214821,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiHttpRouteProps"
							},
							{
								"type": "reference",
								"id": 214838,
								"typeArguments": [
									{
										"type": "reference",
										"id": 214821,
										"name": "AuthorizerKeys"
									}
								],
								"name": "ApiAlbRouteProps"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						214880
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						214838,
						214822,
						214829,
						214859,
						214870,
						214798,
						214847
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						214797,
						214820
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216869,
			"name": "ApiGatewayV1Api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216945,
					"name": "ApiGatewayV1Api",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ApiGatewayV1Api` construct is a higher level CDK construct that makes it easy to create an API Gateway REST API. It provides a simple way to define the routes in your API. And allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains. See the [examples](#examples) for more details.",
						"text": ":::note\nIf you are creating a new API, use the `Api` construct instead.\n:::\n\nThe Api construct uses [API Gateway V2](https://aws.amazon.com/blogs/compute/announcing-http-apis-for-amazon-api-gateway/). It's both faster and cheaper. However, if you need features like Usage Plans and API keys, use the `ApiGatewayV1Api` construct instead. You can [check out a detailed comparison here](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html).\n"
					},
					"children": [
						{
							"id": 216949,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 323,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216950,
									"name": "new ApiGatewayV1Api",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 216951,
											"name": "Authorizers",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ApiGatewayV1ApiAuthorizer"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"default": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "never"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"parameters": [
										{
											"id": 216952,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216953,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216954,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 216870,
												"typeArguments": [
													{
														"type": "reference",
														"id": 216951,
														"name": "Authorizers"
													},
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 216951,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216945,
										"typeArguments": [
											{
												"type": "reference",
												"id": 216951,
												"name": "Authorizers"
											}
										],
										"name": "ApiGatewayV1Api"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216962,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 316,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216961,
							"name": "_deployment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 315,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Deployment",
								"package": "aws-cdk-lib",
								"name": "Deployment"
							}
						},
						{
							"id": 216972,
							"name": "authorizersData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 320,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "IAuthorizer",
										"package": "aws-cdk-lib",
										"name": "IAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 216955,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 297,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216956,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216958,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created log group"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 305,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 216960,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created certificate"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 313,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Certificate",
														"package": "aws-cdk-lib",
														"name": "Certificate"
													},
													{
														"type": "reference",
														"qualifiedName": "DnsValidatedCertificate",
														"package": "aws-cdk-lib",
														"name": "DnsValidatedCertificate"
													}
												]
											}
										},
										{
											"id": 216959,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created domain name"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 309,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "aws-cdk-lib",
												"name": "DomainName"
											}
										},
										{
											"id": 216957,
											"name": "restApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created rest API"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 301,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RestApi",
												"package": "aws-cdk-lib",
												"name": "RestApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216958,
												216960,
												216959,
												216957
											]
										}
									]
								}
							}
						},
						{
							"id": 216968,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 319,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216969,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216970,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216971,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 215737,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 216963,
							"name": "importedResources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 317,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216964,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216965,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216966,
												"name": "path",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "IResource",
											"package": "aws-cdk-lib",
											"name": "apig.IResource"
										}
									}
								}
							}
						},
						{
							"id": 217052,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 216973,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 321,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 216967,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 318,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 216870,
								"typeArguments": [
									{
										"type": "reference",
										"id": 216951,
										"name": "Authorizers"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 216951,
											"name": "Authorizers"
										}
									}
								],
								"name": "ApiGatewayV1ApiProps"
							}
						},
						{
							"id": 216976,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 356,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216977,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 216978,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 363,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216979,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 216974,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 345,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216975,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 217035,
							"name": "addAuthorizers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 891,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217036,
									"name": "addAuthorizers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217037,
											"name": "authorizers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216951,
												"name": "Authorizers"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217038,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 975,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217039,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217040,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 217041,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 217042,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 216951,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiRouteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 216980,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 379,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216981,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216982,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216983,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"id": 216951,
																	"name": "Authorizers"
																}
															}
														],
														"name": "ApiGatewayV1ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217049,
							"name": "assertDomainNameIsLowerCase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 1110,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217050,
									"name": "assertDomainNameIsLowerCase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217051,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216987,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 421,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216988,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216989,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217006,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 459,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 217007,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new ApiGatewayV1Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 217008,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 217009,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217012,
							"name": "buildCorsConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 583,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217013,
									"name": "buildCorsConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217014,
											"name": "cors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "CorsOptions",
												"package": "aws-cdk-lib",
												"name": "CorsOptions"
											}
										]
									}
								}
							]
						},
						{
							"id": 217043,
							"name": "buildRouteMethodOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 1065,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217044,
									"name": "buildRouteMethodOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217045,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216890,
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"id": 216951,
															"name": "Authorizers"
														}
													}
												],
												"name": "ApiGatewayV1ApiFunctionRouteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "MethodOptions",
										"package": "aws-cdk-lib",
										"name": "MethodOptions"
									}
								}
							]
						},
						{
							"id": 217021,
							"name": "createARecords",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 825,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217022,
									"name": "createARecords",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217023,
											"name": "hostedZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										},
										{
											"id": 217024,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 217025,
											"name": "apigDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "IDomainName",
												"package": "aws-cdk-lib",
												"name": "IDomainName"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217018,
							"name": "createCustomDomain",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 617,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217019,
									"name": "createCustomDomain",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217020,
											"name": "customDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 216929,
														"name": "ApiGatewayV1ApiCustomDomainProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217015,
							"name": "createGatewayResponseForCors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 595,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217016,
									"name": "createGatewayResponseForCors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217017,
											"name": "cors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217010,
							"name": "createRestApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 473,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217011,
									"name": "createRestApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216990,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 428,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216991,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216992,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216994,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216995,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216996,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216998,
																	"name": "restApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216999,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 217000,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 217002,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 217003,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 217004,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 217005,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													217004,
																													217005
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 217001,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							217002,
																							217001
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216997,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216996,
																		216998,
																		216999,
																		216997
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216993,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "ApiGatewayV1Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216994,
														216993
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216984,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 408,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216985,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new ApiGatewayV1Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216986,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 217032,
							"name": "getResourceForPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 870,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217033,
									"name": "getResourceForPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217034,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IResource",
										"package": "aws-cdk-lib",
										"name": "IResource"
									}
								}
							]
						},
						{
							"id": 217026,
							"name": "importResources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 855,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217027,
									"name": "importResources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217028,
											"name": "resources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 217029,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 217030,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 217031,
																"name": "path",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 217046,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 1106,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 217047,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 217048,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 217053,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 217054,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 216946,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216947,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216948,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216949
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216962,
								216961,
								216972,
								216955,
								216968,
								216963,
								217052,
								216973,
								216967
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216976,
								216978,
								216974
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								217035,
								217038,
								216980,
								217049,
								216987,
								217006,
								217012,
								217043,
								217021,
								217018,
								217015,
								217010,
								216990,
								216984,
								217032,
								217026,
								217046,
								217053,
								216946
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 288,
							"character": 13
						}
					],
					"typeParameter": [
						{
							"id": 217055,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiGatewayV1ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216929,
					"name": "ApiGatewayV1ApiCustomDomainProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216940,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 267,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216941,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216944,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 270,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 216942,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 268,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IDomainName",
												"package": "aws-cdk-lib",
												"name": "IDomainName"
											}
										},
										{
											"id": 216943,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 269,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216944,
												216942,
												216943
											]
										}
									]
								}
							}
						},
						{
							"id": 216930,
							"name": "domainName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 257,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216933,
							"name": "endpointType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "edge"
									},
									{
										"type": "literal",
										"value": "regional"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						},
						{
							"id": 216931,
							"name": "hostedZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 258,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216934,
							"name": "mtls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 261,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216935,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216936,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 262,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215599,
												"name": "Bucket"
											}
										},
										{
											"id": 216937,
											"name": "key",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 263,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216938,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 264,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216936,
												216937,
												216938
											]
										}
									]
								}
							}
						},
						{
							"id": 216932,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216939,
							"name": "securityPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 266,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "TLS 1.0"
									},
									{
										"type": "literal",
										"value": "TLS 1.2"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216940,
								216930,
								216933,
								216931,
								216934,
								216932,
								216939
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 256,
							"character": 17
						}
					]
				},
				{
					"id": 216890,
					"name": "ApiGatewayV1ApiFunctionRouteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a function route handler and configure additional options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\napi.addRoutes(props.stack, {\n  \"GET /notes/{id}\": {\n    type: \"function\",\n    function: \"src/get.main\",\n    payloadFormatVersion: \"1.0\",\n  }\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216893,
							"name": "authorizationScopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 199,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 216892,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 195,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "intrinsic",
											"name": "string"
										},
										"extendsType": {
											"type": "reference",
											"id": 216898,
											"name": "AuthorizerKeys"
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "reference",
											"id": 216898,
											"name": "AuthorizerKeys"
										}
									}
								]
							}
						},
						{
							"id": 216894,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216895,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216897,
											"name": "integration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 205,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaIntegrationOptions",
												"package": "aws-cdk-lib",
												"name": "LambdaIntegrationOptions"
											}
										},
										{
											"id": 216896,
											"name": "method",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 201,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "MethodOptions",
														"package": "aws-cdk-lib",
														"name": "MethodOptions"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "authorizationScopes"
															},
															{
																"type": "literal",
																"value": "authorizer"
															},
															{
																"type": "literal",
																"value": "authorizationType"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216897,
												216896
											]
										}
									]
								}
							}
						},
						{
							"id": 216891,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 194,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216893,
								216892,
								216894,
								216891
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 193,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 216898,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 216919,
					"name": "ApiGatewayV1ApiLambdaRequestAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216927,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 216923,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216924,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216925,
											"name": "assumeRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 250,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IRole",
												"package": "aws-cdk-lib",
												"name": "IRole"
											}
										},
										{
											"id": 216926,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 251,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "TokenAuthorizer",
												"package": "aws-cdk-lib",
												"name": "TokenAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216925,
												216926
											]
										}
									]
								}
							}
						},
						{
							"id": 216921,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 216922,
							"name": "identitySources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 248,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 216928,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 216,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 216920,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 246,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda_request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216927,
								216923,
								216921,
								216922,
								216928,
								216920
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 244,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 216908,
					"name": "ApiGatewayV1ApiLambdaTokenAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216917,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 216913,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 237,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216914,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216915,
											"name": "assumeRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 238,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IRole",
												"package": "aws-cdk-lib",
												"name": "IRole"
											}
										},
										{
											"id": 216916,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 239,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "TokenAuthorizer",
												"package": "aws-cdk-lib",
												"name": "TokenAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216915,
												216916
											]
										}
									]
								}
							}
						},
						{
							"id": 216910,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 234,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 216911,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 235,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216918,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 216,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 216909,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 233,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda_token"
							}
						},
						{
							"id": 216912,
							"name": "validationRegex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 236,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216917,
								216913,
								216910,
								216911,
								216918,
								216909,
								216912
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 231,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				},
				{
					"id": 216870,
					"name": "ApiGatewayV1ApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216880,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  accessLog: true\n});\n\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 116,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 216882,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 142,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 216888,
								"name": "Authorizers"
							}
						},
						{
							"id": 216871,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 46,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216872,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216874,
											"name": "importedPaths",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216875,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 216876,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 216877,
																"name": "path",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 216873,
											"name": "restApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created rest api",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\n\nnew Api(this, \"Api\", {\n  cdk: {\n    restApi: {\n    description: \"My api\"\n  }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 62,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IRestApi",
														"package": "aws-cdk-lib",
														"name": "IRestApi"
													},
													{
														"type": "reference",
														"qualifiedName": "RestApiProps",
														"package": "aws-cdk-lib",
														"name": "RestApiProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216874,
												216873
											]
										}
									]
								}
							}
						},
						{
							"id": 216879,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew ApiGatewayV1Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 96,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 216881,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 138,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 216929,
										"name": "ApiGatewayV1ApiCustomDomainProps"
									}
								]
							}
						},
						{
							"id": 216883,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 143,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216884,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216887,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 171,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 216886,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 164,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													},
													{
														"type": "conditional",
														"checkType": {
															"type": "intrinsic",
															"name": "string"
														},
														"extendsType": {
															"type": "reference",
															"id": 216889,
															"name": "AuthorizerKeys"
														},
														"trueType": {
															"type": "intrinsic",
															"name": "never"
														},
														"falseType": {
															"type": "reference",
															"id": 216889,
															"name": "AuthorizerKeys"
														}
													}
												]
											}
										},
										{
											"id": 216885,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew ApiGatewayV1Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216887,
												216886,
												216885
											]
										}
									]
								}
							}
						},
						{
							"id": 216878,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the routes for the API. Can be a function, proxy to another API, or point to an ALB",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew ApiGatewayV1Api(props.stack, \"Api\", {\n  \"GET /notes\"      : \"src/list.main\",\n  \"GET /notes/{id}\" : \"src/get.main\",\n  \"$default\": \"src/default.main\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 216889,
												"name": "AuthorizerKeys"
											}
										],
										"name": "ApiGatewayV1ApiRouteProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216880,
								216882,
								216871,
								216879,
								216881,
								216883,
								216878
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 39,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 216888,
							"name": "Authorizers",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "ApiGatewayV1ApiAuthorizer"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"default": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "never"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 216889,
							"name": "AuthorizerKeys",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 216888,
									"name": "Authorizers"
								}
							}
						}
					]
				},
				{
					"id": 216899,
					"name": "ApiGatewayV1ApiUserPoolsAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216906,
							"name": "authorizerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.authorizerName"
							}
						},
						{
							"id": 216903,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 225,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216904,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216905,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
													"line": 226,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CognitoUserPoolsAuthorizer",
												"package": "aws-cdk-lib",
												"name": "CognitoUserPoolsAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216905
											]
										}
									]
								}
							}
						},
						{
							"id": 216902,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 224,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216907,
							"name": "resultsCacheTtl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 216,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ApiGatewayV1ApiBaseAuthorizer.resultsCacheTtl"
							}
						},
						{
							"id": 216900,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 222,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "user_pools"
							}
						},
						{
							"id": 216901,
							"name": "userPoolIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
									"line": 223,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216906,
								216903,
								216902,
								216907,
								216900,
								216901
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
							"line": 220,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ApiGatewayV1ApiBaseAuthorizer"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216945
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216929,
						216890,
						216919,
						216908,
						216870,
						216899
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ApiGatewayV1Api.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216289,
			"name": "AppSyncApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216351,
					"name": "AppSyncApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 216355,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 308,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216356,
									"name": "new AppSyncApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216357,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216358,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216359,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 216290,
												"name": "AppSyncApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216351,
										"name": "AppSyncApi"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216360,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 293,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216361,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216362,
											"name": "graphqlApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created appsync api"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 297,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "GraphqlApi",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "GraphqlApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216362
											]
										}
									]
								}
							}
						},
						{
							"id": 216367,
							"name": "dataSourcesByDsKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 300,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216368,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216369,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216370,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "BaseDataSource",
											"package": "@aws-cdk/aws-appsync-alpha",
											"name": "appsync.BaseDataSource"
										}
									}
								}
							}
						},
						{
							"id": 216371,
							"name": "dsKeysByResKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 303,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216372,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216373,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216374,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 216363,
							"name": "functionsByDsKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 299,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216364,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216365,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216366,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 215737,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 216456,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 216379,
							"name": "permissionsAttachedForAllFunctions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 305,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 216380,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 306,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 216290,
								"name": "AppSyncApiProps"
							}
						},
						{
							"id": 216375,
							"name": "resolversByResKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 304,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216376,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216377,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216378,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"qualifiedName": "Resolver",
											"package": "@aws-cdk/aws-appsync-alpha",
											"name": "appsync.Resolver"
										}
									}
								}
							}
						},
						{
							"id": 216381,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 336,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216382,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216430,
							"name": "addDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 547,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216431,
									"name": "addDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216432,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216433,
											"name": "dsKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216434,
											"name": "dsValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 216299,
														"name": "AppSyncApiLambdaDataSourceProps"
													},
													{
														"type": "reference",
														"id": 216304,
														"name": "AppSyncApiDynamoDbDataSourceProps"
													},
													{
														"type": "reference",
														"id": 216314,
														"name": "AppSyncApiRdsDataSourceProps"
													},
													{
														"type": "reference",
														"id": 216327,
														"name": "AppSyncApiHttpDataSourceProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 216383,
							"name": "addDataSources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216384,
									"name": "addDataSources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add data sources after the construct has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addDataSources(props.stack, {\n  billingDS: \"src/billing.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216385,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216386,
											"name": "dataSources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216387,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 216388,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 216389,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 215665,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 216299,
																	"name": "AppSyncApiLambdaDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 216304,
																	"name": "AppSyncApiDynamoDbDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 216314,
																	"name": "AppSyncApiRdsDataSourceProps"
																},
																{
																	"type": "reference",
																	"id": 216327,
																	"name": "AppSyncApiHttpDataSourceProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216435,
							"name": "addResolver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 648,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216436,
									"name": "addResolver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216437,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216438,
											"name": "resKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216439,
											"name": "resValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 216337,
														"name": "AppSyncApiResolverProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 216390,
							"name": "addResolvers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 384,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216391,
									"name": "addResolvers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add resolvers the construct has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addResolvers(this, {\n  \"Mutation charge\": \"billingDS\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216392,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216393,
											"name": "resolvers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216394,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 216395,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 216396,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 215665,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 216337,
																	"name": "AppSyncApiResolverProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216421,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 476,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216422,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all function datasources",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216423,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216424,
							"name": "attachPermissionsToDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 490,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216425,
									"name": "attachPermissionsToDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific function datasource. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\napi.attachPermissionsToRoute(\"Mutation charge\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216426,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216427,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216452,
							"name": "buildDataSourceKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 799,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216453,
									"name": "buildDataSourceKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216454,
											"name": "typeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216455,
											"name": "fieldName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216449,
							"name": "buildMappingTemplate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 783,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216450,
									"name": "buildMappingTemplate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216451,
											"name": "mapping",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "MappingTemplate"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "MappingTemplate",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "MappingTemplate"
											}
										]
									}
								}
							]
						},
						{
							"id": 216428,
							"name": "createGraphApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 504,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216429,
									"name": "createGraphApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216397,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 403,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216398,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216399,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216401,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216402,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216404,
																	"name": "appSyncApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216405,
																	"name": "dataSources",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 216406,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 216408,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 216409,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 216410,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 216411,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													216410,
																													216411
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 216407,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							216408,
																							216407
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216403,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216404,
																		216405,
																		216403
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216400,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "AppSync"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216401,
														216400
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216415,
							"name": "getDataSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216416,
									"name": "getDataSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a datasource by name",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.getDataSource(\"billingDS\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216417,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "BaseDataSource",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "BaseDataSource"
											}
										]
									}
								}
							]
						},
						{
							"id": 216412,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 425,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216413,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given resolver.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst func = api.getFunction(\"Mutation charge\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216414,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 216418,
							"name": "getResolver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 462,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216419,
									"name": "getResolver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a resolver",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.getResolver(\"Mutation charge\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216420,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Resolver",
												"package": "@aws-cdk/aws-appsync-alpha",
												"name": "Resolver"
											}
										]
									}
								}
							]
						},
						{
							"id": 216443,
							"name": "isDataSourceResolverProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 774,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216444,
									"name": "isDataSourceResolverProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216445,
											"name": "object",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216337,
												"name": "AppSyncApiResolverProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 216440,
							"name": "isLambdaResolverProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 770,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216441,
									"name": "isLambdaResolverProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216442,
											"name": "object",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216337,
												"name": "AppSyncApiResolverProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 216446,
							"name": "normalizeResolverKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 778,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216447,
									"name": "normalizeResolverKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216448,
											"name": "resolverKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216457,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216458,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 216352,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216353,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216354,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216355
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216360,
								216367,
								216371,
								216363,
								216456,
								216379,
								216380,
								216375
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216381
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216430,
								216383,
								216435,
								216390,
								216421,
								216424,
								216452,
								216449,
								216428,
								216397,
								216415,
								216412,
								216418,
								216443,
								216440,
								216446,
								216457,
								216352
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 292,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216345,
					"name": "AppSyncApiCdkGraphqlProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216348,
							"name": "authorizationConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Optional authorization configuration",
								"tags": [
									{
										"tag": "default",
										"text": "- API Key authorization\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 253,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AuthorizationConfig",
								"package": "@aws-cdk/aws-appsync-alpha",
								"name": "AuthorizationConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.authorizationConfig"
							}
						},
						{
							"id": 216349,
							"name": "logConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Logging configuration for this api",
								"tags": [
									{
										"tag": "default",
										"text": "- None\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 259,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogConfig",
								"package": "@aws-cdk/aws-appsync-alpha",
								"name": "LogConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logConfig"
							}
						},
						{
							"id": 216346,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 284,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216347,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 285,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"qualifiedName": "Schema",
										"package": "@aws-cdk/aws-appsync-alpha",
										"name": "Schema"
									}
								]
							}
						},
						{
							"id": 216350,
							"name": "xrayEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A flag indicating whether or not X-Ray tracing is enabled for the GraphQL API.",
								"tags": [
									{
										"tag": "default",
										"text": "- false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-appsync-alpha/lib/graphqlapi.d.ts",
									"line": 274,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.xrayEnabled"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216348,
								216349,
								216346,
								216347,
								216350
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 282,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "GraphqlApiProps",
									"package": "@aws-cdk/aws-appsync-alpha",
									"name": "appsync.GraphqlApiProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "name"
										},
										{
											"type": "literal",
											"value": "schema"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 216304,
					"name": "AppSyncApiDynamoDbDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    table: {\n      type: \"table\",\n      table: MyTable\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216307,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 161,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216308,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216309,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 162,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216310,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216311,
															"name": "table",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 163,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "Table",
																"package": "aws-cdk-lib",
																"name": "Table"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216311
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216309
											]
										}
									]
								}
							}
						},
						{
							"id": 216313,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 216312,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 216306,
							"name": "table",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target table"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 160,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215315,
								"name": "Table"
							}
						},
						{
							"id": 216305,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is a dynamodb table"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "dynamodb"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216307,
								216313,
								216312,
								216306,
								216305
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 151,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 216327,
					"name": "AppSyncApiHttpDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define an http data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    http: {\n      type: \"http\",\n      endpoint: \"https://example.com\"\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216330,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 231,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216331,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216332,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216333,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216334,
															"name": "authorizationConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 233,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "AwsIamConfig",
																"package": "@aws-cdk/aws-appsync-alpha",
																"name": "AwsIamConfig"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216334
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216332
											]
										}
									]
								}
							}
						},
						{
							"id": 216336,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 216329,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "URL to forward requests to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 230,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216335,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 216328,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is an HTTP endpoint"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 226,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "http"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216330,
								216336,
								216329,
								216335,
								216328
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 221,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 216299,
					"name": "AppSyncApiLambdaDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    lambda: {\n      type: \"function\",\n      function: \"src/function.handler\"\n    },\n  },\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 216303,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 216301,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Function definition"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 216302,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 216300,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String literal to signify that this data source is a function"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 129,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216303,
								216301,
								216302,
								216300
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 124,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 216290,
					"name": "AppSyncApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216291,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216292,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216293,
											"name": "graphqlApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IGraphqlApi",
														"package": "@aws-cdk/aws-appsync-alpha",
														"name": "IGraphqlApi"
													},
													{
														"type": "reference",
														"id": 216345,
														"name": "AppSyncApiCdkGraphqlProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216293
											]
										}
									]
								}
							}
						},
						{
							"id": 216294,
							"name": "dataSources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define datasources. Can be a function, dynamodb table, rds cluster or http endpoint",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew AppSyncApi(this, \"GraphqlApi\", {\n  dataSources: {\n    notes: \"src/notes.main\",\n  },\n  resolvers: {\n    \"Query    listNotes\": \"notes\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 215665,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 216299,
												"name": "AppSyncApiLambdaDataSourceProps"
											},
											{
												"type": "reference",
												"id": 216304,
												"name": "AppSyncApiDynamoDbDataSourceProps"
											},
											{
												"type": "reference",
												"id": 216314,
												"name": "AppSyncApiRdsDataSourceProps"
											},
											{
												"type": "reference",
												"id": 216327,
												"name": "AppSyncApiHttpDataSourceProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 216296,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216297,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216298,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the AppSyncApi. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew AppSync(props.stack, \"AppSync\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 93,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216298
											]
										}
									]
								}
							}
						},
						{
							"id": 216295,
							"name": "resolvers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The resolvers for this API. Takes an object, with the key being the type name and field name as a string and the value is either a string with the name of existing data source.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew AppSyncApi(this, \"GraphqlApi\", {\n  resolvers: {\n    \"Query    listNotes\": \"src/list.main\",\n    \"Query    getNoteById\": \"src/get.main\",\n    \"Mutation createNote\": \"src/create.main\",\n    \"Mutation updateNote\": \"src/update.main\",\n    \"Mutation deleteNote\": \"src/delete.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 215665,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 216337,
												"name": "AppSyncApiResolverProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216291,
								216294,
								216296,
								216295
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 216314,
					"name": "AppSyncApiRdsDataSourceProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a lambda data source",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew AppSyncApi(this, \"AppSync\", {\n  dataSources: {\n    rds: {\n      type: \"rds\",\n      table: MyRDSCluster\n    },\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216318,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216319,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216320,
											"name": "dataSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 198,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216321,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216324,
															"name": "databaseName",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 201,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 216323,
															"name": "secretStore",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 200,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ISecret",
																"package": "aws-cdk-lib",
																"name": "ISecret"
															}
														},
														{
															"id": 216322,
															"name": "serverlessCluster",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/resources/src/AppSyncApi.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "IServerlessCluster",
																"package": "aws-cdk-lib",
																"name": "IServerlessCluster"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216324,
																216323,
																216322
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216320
											]
										}
									]
								}
							}
						},
						{
							"id": 216317,
							"name": "databaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the database to connect to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 196,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216326,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.description"
							}
						},
						{
							"id": 216325,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AppSyncApiBaseDataSourceProps.name"
							}
						},
						{
							"id": 216316,
							"name": "rds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Target RDS construct"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 192,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215065,
								"name": "RDS"
							}
						},
						{
							"id": 216315,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "String literal to signify that this data source is an RDS database"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "rds"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216318,
								216317,
								216326,
								216325,
								216316,
								216315
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 183,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AppSyncApiBaseDataSourceProps"
						}
					]
				},
				{
					"id": 216337,
					"name": "AppSyncApiResolverProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define full resolver config"
					},
					"children": [
						{
							"id": 216342,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 260,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216343,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216344,
											"name": "resolver",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/AppSyncApi.ts",
													"line": 261,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "ResolverProps",
														"package": "@aws-cdk/aws-appsync-alpha",
														"name": "ResolverProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "api"
															},
															{
																"type": "literal",
																"value": "fieldName"
															},
															{
																"type": "literal",
																"value": "typeName"
															},
															{
																"type": "literal",
																"value": "dataSource"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216344
											]
										}
									]
								}
							}
						},
						{
							"id": 216338,
							"name": "dataSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the data source"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 245,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216339,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Function to invoke for the resolver"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 249,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 216340,
							"name": "requestMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "VTL request mapping template\nDOCTODO: can probably use examples"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "MappingTemplate"
							}
						},
						{
							"id": 216341,
							"name": "responseMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "VTL response mapping template\nDOCTODO: can probably use examples"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/AppSyncApi.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "MappingTemplate"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216342,
								216338,
								216339,
								216340,
								216341
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/AppSyncApi.ts",
							"line": 241,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216351
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216345,
						216304,
						216327,
						216299,
						216290,
						216314,
						216337
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/AppSyncApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215142,
			"name": "Auth",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215205,
					"name": "Auth",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Auth` construct is a higher level CDK construct that makes it easy to configure a [Cognito User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html) and [Cognito Identity Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html). Also, allows setting up Auth0, Facebook, Google, Twitter, Apple, and Amazon as authentication providers."
					},
					"children": [
						{
							"id": 215209,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 121,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215210,
									"name": "new Auth",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215211,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215212,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215213,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215143,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215205,
										"name": "Auth"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215214,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 110,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215215,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215219,
											"name": "authRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 114,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 215218,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										},
										{
											"id": 215220,
											"name": "unauthRole",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 115,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Role",
												"package": "aws-cdk-lib",
												"name": "Role"
											}
										},
										{
											"id": 215216,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPool",
												"package": "aws-cdk-lib",
												"name": "IUserPool"
											}
										},
										{
											"id": 215217,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 112,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IUserPoolClient",
												"package": "aws-cdk-lib",
												"name": "IUserPoolClient"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215219,
												215218,
												215220,
												215216,
												215217
											]
										}
									]
								}
							}
						},
						{
							"id": 215222,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 118,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215223,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 215224,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 215225,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 215737,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 215278,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215226,
							"name": "permissionsAttachedForAllTriggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 215221,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 215143,
								"name": "AuthProps"
							}
						},
						{
							"id": 215227,
							"name": "cognitoIdentityPoolId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 317,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215228,
									"name": "cognitoIdentityPoolId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215266,
							"name": "addTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 411,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215267,
									"name": "addTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215268,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215269,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 215166,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 215270,
											"name": "triggerValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215666,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 215271,
											"name": "functionProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 215263,
							"name": "addTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215264,
									"name": "addTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215265,
											"name": "cognitoProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215156,
												"name": "AuthCognitoProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215229,
							"name": "attachPermissionsForAuthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 321,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215230,
									"name": "attachPermissionsForAuthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215231,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215238,
							"name": "attachPermissionsForTrigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 336,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215239,
									"name": "attachPermissionsForTrigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215240,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 215166,
													"name": "AuthUserPoolTriggers"
												}
											}
										},
										{
											"id": 215241,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215235,
							"name": "attachPermissionsForTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 329,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215236,
									"name": "attachPermissionsForTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215237,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215232,
							"name": "attachPermissionsForUnauthUsers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 325,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215233,
									"name": "attachPermissionsForUnauthUsers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215234,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215260,
							"name": "checkDeprecatedProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 368,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215261,
									"name": "checkDeprecatedProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215262,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215143,
												"name": "AuthProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215272,
							"name": "createAuthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215273,
									"name": "createAuthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215274,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 215275,
							"name": "createUnauthRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215276,
									"name": "createUnauthRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215277,
											"name": "identityPool",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "CfnIdentityPool",
												"package": "aws-cdk-lib",
												"name": "CfnIdentityPool"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 215245,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 354,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215246,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215247,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215249,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215250,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215251,
																	"name": "identityPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215253,
																	"name": "triggers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 215254,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 215256,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 215257,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 215258,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 215259,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													215258,
																													215259
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 215255,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							215256,
																							215255
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215252,
																	"name": "userPoolId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215251,
																		215253,
																		215252
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215248,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Auth"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215249,
														215248
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215242,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 350,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215243,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215244,
											"name": "triggerKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 215166,
													"name": "AuthUserPoolTriggers"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 215279,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215280,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215206,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215207,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215208,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215209
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215214,
								215222,
								215278,
								215226,
								215221
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215227
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215266,
								215263,
								215229,
								215238,
								215235,
								215232,
								215260,
								215272,
								215275,
								215245,
								215242,
								215279,
								215206
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 109,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215182,
					"name": "AuthAmazonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215183,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215183
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 76,
							"character": 17
						}
					]
				},
				{
					"id": 215184,
					"name": "AuthAppleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215185,
							"name": "servicesId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215185
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 80,
							"character": 17
						}
					]
				},
				{
					"id": 215179,
					"name": "AuthAuth0Props",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215181,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215180,
							"name": "domain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215181,
								215180
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 71,
							"character": 17
						}
					]
				},
				{
					"id": 215193,
					"name": "AuthCdkCfnIdentityPoolProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215195,
							"name": "allowClassicFlow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enables the Basic (Classic) authentication flow.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowClassicFlow"
							}
						},
						{
							"id": 215194,
							"name": "allowUnauthenticatedIdentities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 215196,
							"name": "cognitoEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The events to configure.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoEvents"
							}
						},
						{
							"id": 215197,
							"name": "cognitoIdentityProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Cognito user pools and their client IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"qualifiedName": "IResolvable",
													"package": "aws-cdk-lib",
													"name": "IResolvable"
												},
												{
													"type": "reference",
													"qualifiedName": "CfnIdentityPool.CognitoIdentityProviderProperty",
													"package": "aws-cdk-lib",
													"name": "CognitoIdentityProviderProperty"
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoIdentityProviders"
							}
						},
						{
							"id": 215198,
							"name": "cognitoStreams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Configuration options for configuring Amazon Cognito streams.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.CognitoStreamsProperty",
										"package": "aws-cdk-lib",
										"name": "CognitoStreamsProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cognitoStreams"
							}
						},
						{
							"id": 215199,
							"name": "developerProviderName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The \"domain\" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 100\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.developerProviderName"
							}
						},
						{
							"id": 215200,
							"name": "identityPoolName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The name of your Amazon Cognito identity pool.",
								"text": "*Minimum length* : 1\n\n*Maximum length* : 128\n\n*Pattern* : `[\\w\\s+=,.@-]+`\n",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.identityPoolName"
							}
						},
						{
							"id": 215201,
							"name": "openIdConnectProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the OpenID connect providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.openIdConnectProviderArns"
							}
						},
						{
							"id": 215202,
							"name": "pushSync",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The configuration options to be applied to the identity pool.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "IResolvable",
										"package": "aws-cdk-lib",
										"name": "IResolvable"
									},
									{
										"type": "reference",
										"qualifiedName": "CfnIdentityPool.PushSyncProperty",
										"package": "aws-cdk-lib",
										"name": "PushSyncProperty"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.pushSync"
							}
						},
						{
							"id": 215203,
							"name": "samlProviderArns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.samlProviderArns"
							}
						},
						{
							"id": 215204,
							"name": "supportedLoginProviders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that map provider names to provider app IDs.",
								"tags": [
									{
										"tag": "link",
										"text": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-cognito/lib/cognito.generated.d.ts",
									"line": 88,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.supportedLoginProviders"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215195,
								215194,
								215196,
								215197,
								215198,
								215199,
								215200,
								215201,
								215202,
								215203,
								215204
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 97,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "CfnIdentityPoolProps",
									"package": "aws-cdk-lib",
									"name": "cognito.CfnIdentityPoolProps"
								},
								{
									"type": "literal",
									"value": "allowUnauthenticatedIdentities"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 215156,
					"name": "AuthCognitoProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215157,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215158,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215159,
											"name": "userPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 45,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPool",
														"package": "aws-cdk-lib",
														"name": "IUserPool"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolProps",
														"package": "aws-cdk-lib",
														"name": "UserPoolProps"
													}
												]
											}
										},
										{
											"id": 215160,
											"name": "userPoolClient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 46,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IUserPoolClient",
														"package": "aws-cdk-lib",
														"name": "IUserPoolClient"
													},
													{
														"type": "reference",
														"qualifiedName": "UserPoolClientOptions",
														"package": "aws-cdk-lib",
														"name": "UserPoolClientOptions"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215159,
												215160
											]
										}
									]
								}
							}
						},
						{
							"id": 215161,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215162,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215163,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 49,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215163
											]
										}
									]
								}
							}
						},
						{
							"id": 215165,
							"name": "signInAliases",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SignInAliases",
								"package": "aws-cdk-lib",
								"name": "SignInAliases"
							}
						},
						{
							"id": 215164,
							"name": "triggers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215166,
								"name": "AuthUserPoolTriggers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215157,
								215161,
								215165,
								215164
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 215186,
					"name": "AuthFacebookProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215187,
							"name": "appId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215187
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 84,
							"character": 17
						}
					]
				},
				{
					"id": 215188,
					"name": "AuthGoogleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215189,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215189
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 88,
							"character": 17
						}
					]
				},
				{
					"id": 215143,
					"name": "AuthProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215146,
							"name": "amazon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215182,
								"name": "AuthAmazonProps"
							}
						},
						{
							"id": 215147,
							"name": "apple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215184,
								"name": "AuthAppleProps"
							}
						},
						{
							"id": 215145,
							"name": "auth0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215179,
								"name": "AuthAuth0Props"
							}
						},
						{
							"id": 215151,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215152,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215153,
											"name": "cfnIdentityPool",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Auth.ts",
													"line": 36,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215193,
												"name": "AuthCdkCfnIdentityPoolProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215153
											]
										}
									]
								}
							}
						},
						{
							"id": 215144,
							"name": "cognito",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 215156,
										"name": "AuthCognitoProps"
									}
								]
							}
						},
						{
							"id": 215154,
							"name": "cognitoUserPool",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPool",
								"package": "aws-cdk-lib",
								"name": "IUserPool"
							}
						},
						{
							"id": 215155,
							"name": "cognitoUserPoolClient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IUserPoolClient",
								"package": "aws-cdk-lib",
								"name": "IUserPoolClient"
							}
						},
						{
							"id": 215148,
							"name": "facebook",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215186,
								"name": "AuthFacebookProps"
							}
						},
						{
							"id": 215149,
							"name": "google",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215188,
								"name": "AuthGoogleProps"
							}
						},
						{
							"id": 215150,
							"name": "twitter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215190,
								"name": "AuthTwitterProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215146,
								215147,
								215145,
								215151,
								215144,
								215154,
								215155,
								215148,
								215149,
								215150
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 215190,
					"name": "AuthTwitterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215191,
							"name": "consumerKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215192,
							"name": "consumerSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 94,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215191,
								215192
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 92,
							"character": 17
						}
					]
				},
				{
					"id": 215166,
					"name": "AuthUserPoolTriggers",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215167,
							"name": "createAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215168,
							"name": "customEmailSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215169,
							"name": "customMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215170,
							"name": "customSmsSender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215171,
							"name": "defineAuthChallenge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215172,
							"name": "postAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215173,
							"name": "postConfirmation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215174,
							"name": "preAuthentication",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215175,
							"name": "preSignUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215176,
							"name": "preTokenGeneration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215177,
							"name": "userMigration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215178,
							"name": "verifyAuthChallengeResponse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Auth.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215167,
								215168,
								215169,
								215170,
								215171,
								215172,
								215173,
								215174,
								215175,
								215176,
								215177,
								215178
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Auth.ts",
							"line": 56,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215205
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215182,
						215184,
						215179,
						215193,
						215156,
						215186,
						215188,
						215143,
						215190,
						215166
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Auth.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215575,
			"name": "Bucket",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215599,
					"name": "Bucket",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Bucket` construct is a higher level CDK construct that makes it easy to create an S3 Bucket and to define its notifications. It also internally connects the notifications and bucket together.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Bucket } from \"@serverless-stack/resources\";\n\nnew Bucket(this, \"Bucket\");\n```\n\n### Removing the S3 Bucket\n\nOnly empty S3 buckets can be deleted. However, you can configure the bucket to automatically delete all objects upon removal.\n\n```js\nimport * as cdk from \"aws-cdk-lib\";\n\nnew Bucket(this, \"Bucket\", {\n  s3Bucket: {\n    autoDeleteObjects: true,\n    removalPolicy: cdk.RemovalPolicy.DESTROY,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215603,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 198,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215604,
									"name": "new Bucket",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215605,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215606,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215607,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215576,
												"name": "BucketProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215599,
										"name": "Bucket"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215608,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 188,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215609,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215610,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215610
											]
										}
									]
								}
							}
						},
						{
							"id": 215660,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215611,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 194,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 215737,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 215536,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 215423,
											"name": "Topic"
										}
									]
								}
							}
						},
						{
							"id": 215612,
							"name": "permissionsAttachedForAllNotifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 195,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 215613,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 196,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 215576,
								"name": "BucketProps"
							}
						},
						{
							"id": 215614,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215615,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215616,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215617,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215618,
							"name": "notificationFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 227,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215619,
									"name": "notificationFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created functions for the notifications."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 215737,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 215656,
							"name": "addFunctionNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 423,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215657,
									"name": "addFunctionNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215658,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215659,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215587,
														"name": "BucketFunctionNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215644,
							"name": "addNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 323,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215645,
									"name": "addNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215646,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215647,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 215423,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 215587,
														"name": "BucketFunctionNotificationProps"
													},
													{
														"type": "reference",
														"id": 215591,
														"name": "BucketQueueNotificationProps"
													},
													{
														"type": "reference",
														"id": 215595,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215620,
							"name": "addNotifications",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215621,
									"name": "addNotifications",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add notification subscriptions after the bucket has been created",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst bucket = new Bucket(this, \"Bucket\");\nbucket.addNotifications(this, [\"src/notification.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215622,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215623,
											"name": "notifications",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 215665,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 215536,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 215423,
															"name": "Topic"
														},
														{
															"type": "reference",
															"id": 215587,
															"name": "BucketFunctionNotificationProps"
														},
														{
															"type": "reference",
															"id": 215591,
															"name": "BucketQueueNotificationProps"
														},
														{
															"type": "reference",
															"id": 215595,
															"name": "BucketTopicNotificationProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215648,
							"name": "addQueueNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 353,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215649,
									"name": "addQueueNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215650,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215651,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 215591,
														"name": "BucketQueueNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215652,
							"name": "addTopicNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 388,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215653,
									"name": "addTopicNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215654,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215655,
											"name": "notification",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215423,
														"name": "Topic"
													},
													{
														"type": "reference",
														"id": 215595,
														"name": "BucketTopicNotificationProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215624,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215625,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to all bucket notifications",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215626,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215627,
							"name": "attachPermissionsToNotification",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 288,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215628,
									"name": "attachPermissionsToNotification",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to a specific bucket notification",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nconst bucket = new Bucket(this, \"Bucket\", {\n  notifications: [\"src/function.handler\"],\n});\n\nbucket.attachPermissions(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215629,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 215630,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215642,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 311,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215643,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215631,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 301,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215632,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215633,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215635,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215636,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215637,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215638,
																	"name": "notifications",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 215639,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {},
																						"children": [
																							{
																								"id": 215640,
																								"name": "node",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "fn.node.addr"
																							},
																							{
																								"id": 215641,
																								"name": "stack",
																								"kind": 1024,
																								"kindString": "Property",
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								},
																								"defaultValue": "..."
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"kind": 1024,
																								"children": [
																									215640,
																									215641
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215637,
																		215638
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215634,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Bucket"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215635,
														215634
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215661,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215662,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215600,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215601,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215602,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215603
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215608,
								215660,
								215611,
								215612,
								215613
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215614,
								215616,
								215618
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215656,
								215644,
								215620,
								215648,
								215652,
								215624,
								215627,
								215642,
								215631,
								215661,
								215600
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 187,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215584,
					"name": "BucketFilter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215585,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key starts with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215586,
							"name": "suffix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Filter what the key ends with"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 93,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215585,
								215586
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 85,
							"character": 17
						}
					]
				},
				{
					"id": 215587,
					"name": "BucketFunctionNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [{\n    function: \"src/notification.main\",\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215589,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 215590,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 215584,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 215588,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215589,
								215590,
								215588
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 108,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 215576,
					"name": "BucketProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215581,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215582,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215583,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Allows you to override default settings this construct uses internally to ceate the bucket",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  cdk: {\n    bucket: {\n      bucketName: \"my-bucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 70,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Bucket",
														"package": "aws-cdk-lib",
														"name": "Bucket"
													},
													{
														"type": "reference",
														"qualifiedName": "BucketProps",
														"package": "aws-cdk-lib",
														"name": "BucketProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215583
											]
										}
									]
								}
							}
						},
						{
							"id": 215577,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215578,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215579,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Bucket.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215579
											]
										}
									]
								}
							}
						},
						{
							"id": 215580,
							"name": "notifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create notifications for various bucket events",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Bucket(this, \"Bucket\", {\n  notifications: [\"src/notification.main\"],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 215665,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 215536,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 215423,
											"name": "Topic"
										},
										{
											"type": "reference",
											"id": 215587,
											"name": "BucketFunctionNotificationProps"
										},
										{
											"type": "reference",
											"id": 215591,
											"name": "BucketQueueNotificationProps"
										},
										{
											"type": "reference",
											"id": 215595,
											"name": "BucketTopicNotificationProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215581,
								215577,
								215580
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 215591,
					"name": "BucketQueueNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Queue(props.stack, \"Queue\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215593,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 215594,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 215584,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 215592,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215536,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215593,
								215594,
								215592
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 128,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				},
				{
					"id": 215595,
					"name": "BucketTopicNotificationProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a topic listener for the bucket",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Bucket(props.stack, \"Bucket\", {\n  notifications: [{\n    queue: new Topic(props.stack, \"Topic\"),\n  }],\n}\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215597,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The S3 event types that will trigger the notification."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "object_created"
										},
										{
											"type": "literal",
											"value": "object_created_put"
										},
										{
											"type": "literal",
											"value": "object_created_post"
										},
										{
											"type": "literal",
											"value": "object_created_copy"
										},
										{
											"type": "literal",
											"value": "object_created_complete_multipart_upload"
										},
										{
											"type": "literal",
											"value": "object_removed"
										},
										{
											"type": "literal",
											"value": "object_removed_delete"
										},
										{
											"type": "literal",
											"value": "object_removed_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "object_restore_post"
										},
										{
											"type": "literal",
											"value": "object_restore_completed"
										},
										{
											"type": "literal",
											"value": "reduced_redundancy_lost_object"
										},
										{
											"type": "literal",
											"value": "replication_operation_failed_replication"
										},
										{
											"type": "literal",
											"value": "replication_operation_missed_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_replicated_after_threshold"
										},
										{
											"type": "literal",
											"value": "replication_operation_not_tracked"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete"
										},
										{
											"type": "literal",
											"value": "lifecycle_expiration_delete_marker_created"
										},
										{
											"type": "literal",
											"value": "lifecycle_transition"
										},
										{
											"type": "literal",
											"value": "intelligent_tiering"
										},
										{
											"type": "literal",
											"value": "object_tagging"
										},
										{
											"type": "literal",
											"value": "object_tagging_put"
										},
										{
											"type": "literal",
											"value": "object_tagging_delete"
										},
										{
											"type": "literal",
											"value": "object_acl_put"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.events"
							}
						},
						{
							"id": 215598,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "S3 object key filter rules to determine which objects trigger this event."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 215584,
									"name": "BucketFilter"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BucketBaseNotificationProps.filters"
							}
						},
						{
							"id": 215596,
							"name": "topic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The topic to send notifications to"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Bucket.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215423,
								"name": "Topic"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215597,
								215598,
								215596
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Bucket.ts",
							"line": 148,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BucketBaseNotificationProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215599
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215584,
						215587,
						215576,
						215591,
						215595
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Bucket.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 214989,
			"name": "Cron",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215002,
					"name": "Cron",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Cron` construct is a higher level CDK construct that makes it easy to create a cron job. You can create a cron job by handler function and specifying the schedule it needs to run on. Internally this construct uses a [EventBridge Rule](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_events.Rule.html)."
					},
					"children": [
						{
							"id": 215006,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 135,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215007,
									"name": "new Cron",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215008,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215009,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215010,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214990,
												"name": "CronProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215002,
										"name": "Cron"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215011,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 123,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215012,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215013,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK EventBridge Rule instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 127,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215013
											]
										}
									]
								}
							}
						},
						{
							"id": 215014,
							"name": "jobFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created Function instance that'll be run on schedule."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 215035,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215015,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 133,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 214990,
								"name": "CronProps"
							}
						},
						{
							"id": 215016,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 151,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215017,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of [permissions](../util/Permissions.md) to the `jobFunction`. This allows the function to access other AWS resources.",
										"text": "Internally calls [`Function.attachPermissions`](Function.md#attachpermissions).\n\n"
									},
									"parameters": [
										{
											"id": 215018,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215031,
							"name": "createEventsRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 167,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215032,
									"name": "createEventsRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215033,
							"name": "createRuleTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 197,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215034,
									"name": "createRuleTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 215019,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 155,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215020,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215021,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215023,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215024,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215027,
																	"name": "job",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 215028,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 215029,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 215030,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								215029,
																								215030
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215026,
																	"name": "ruleName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215025,
																	"name": "schedule",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "cfnRule.scheduleExpression"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215027,
																		215026,
																		215025
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215022,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Cron"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215023,
														215022
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215036,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215037,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215003,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215004,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215005,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215006
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215011,
								215014,
								215035,
								215015
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215016,
								215031,
								215033,
								215019,
								215036,
								215003
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 122,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 214997,
					"name": "CronJobProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 214999,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215000,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215001,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 111,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215001
											]
										}
									]
								}
							}
						},
						{
							"id": 214998,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function that will be executed when the job runs.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\n  new Cron(this, \"Cron\", {\n    job: {\n      function: \"src/lambda.main\",\n    },\n  });\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214999,
								214998
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 93,
							"character": 17
						}
					]
				},
				{
					"id": 214990,
					"name": "CronProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 214991,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 214992,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 214994,
											"name": "cronOptions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created cron expression."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 23,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "CronOptions",
												"package": "aws-cdk-lib",
												"name": "CronOptions"
											}
										},
										{
											"id": 214993,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the events rule."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Cron.ts",
													"line": 19,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "RuleProps",
												"package": "aws-cdk-lib",
												"name": "RuleProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												214994,
												214993
											]
										}
									]
								}
							}
						},
						{
							"id": 214995,
							"name": "job",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The definition of the function to be executed",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Cron(this, \"Cron\", {\n  function : \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 215665,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 214997,
										"name": "CronJobProps"
									}
								]
							}
						},
						{
							"id": 214996,
							"name": "schedule",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The schedule for the cron job. The string format takes a [rate expression](https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents-expressions.html).",
								"text": "```\n\"rate(_Value Unit_)\"\n\n// For example, every 5 minutes\n\"rate(5 minutes)\"\n```\n\n```\n\"cron(Minutes Hours Day-of-month Month Day-of-week Year)\"\n\n// For example, 10:15 AM (UTC) every day\n\"cron(15 10 * * ? *)\"\n```\n\n```txt\n// Repeat every 5 minutes\n\n\"5 minutes\"\n\n// The equivalent rate expression\n\"rate(5 minutes)\"\n```\n\n```txt\n// 10:15 AM (UTC) every day\n\n// As cdk.aws-events.CronOptions\n{ minute: \"15\", hour: \"10\" }\n\n// The equivalent cron expression\n\"cron(15 10 * * ? *)\"\n```\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Cron } from \"@serverless-stack/resources\";\n\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"rate(1 minute)\",\n});\n```\n\n```js\nnew Cron(this, \"Cron\", {\n  job: \"src/lambda.main\",\n  schedule: \"cron(15 10 * * ? *)\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Cron.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" second"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" seconds"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minute"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" minutes"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hour"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" hours"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" day"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "number"
												},
												" days"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "rate(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									},
									{
										"type": "template-literal",
										"head": "cron(",
										"tail": [
											[
												{
													"type": "intrinsic",
													"name": "string"
												},
												")"
											]
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214991,
								214995,
								214996
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Cron.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215002
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						214997,
						214990
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Cron.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215927,
			"name": "EventBus",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215959,
					"name": "EventBus",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `EventBus` construct is a higher level CDK construct that makes it easy to create an [EventBridge Event Bus](https://aws.amazon.com/eventbridge/). You can create a bus that has a list of rules and targets. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of targets; Function targets (with a Lambda function) or Queue targets (with an SQS queue). See the [examples](#examples) for more details.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Using the minimal config\n\n```js\nimport { EventBus } from \"@serverless-stack/resources\";\n\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n```\n\nNote that, `rule1` here is simply a key to identify the rule.\n"
							}
						]
					},
					"children": [
						{
							"id": 215963,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 248,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215964,
									"name": "new EventBus",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215965,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215966,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215967,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215928,
												"name": "EventBusProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215959,
										"name": "EventBus"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215968,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 238,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215969,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215970,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `EventBus` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IEventBus",
												"package": "aws-cdk-lib",
												"name": "IEventBus"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215970
											]
										}
									]
								}
							}
						},
						{
							"id": 216032,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215975,
							"name": "permissionsAttachedForAllTargets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 245,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 215976,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 246,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 215928,
								"name": "EventBusProps"
							}
						},
						{
							"id": 215971,
							"name": "targetsData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 244,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215972,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 215973,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 215974,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "array",
											"elementType": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215737,
														"name": "Fn"
													},
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													}
												]
											}
										}
									}
								}
							}
						},
						{
							"id": 215977,
							"name": "eventBusArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 263,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215978,
									"name": "eventBusArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215979,
							"name": "eventBusName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 270,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215980,
									"name": "eventBusName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `EventBus` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216026,
							"name": "addFunctionTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 466,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216027,
									"name": "addFunctionTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216028,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216029,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216030,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 216031,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215949,
														"name": "EventBusFunctionTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216020,
							"name": "addQueueTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 440,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216021,
									"name": "addQueueTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216022,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216023,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216024,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 216025,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 215954,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216009,
							"name": "addRule",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 385,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216010,
									"name": "addRule",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216011,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216012,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216013,
											"name": "rule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215936,
												"name": "EventBusRuleProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215981,
							"name": "addRules",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 287,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215982,
									"name": "addRules",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add rules after the EventBus has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nbus.addRules(this, {\n  rule2: {\n    eventPattern: { source: [\"myevent\"] },\n    targets: [\"src/target3.main\", \"src/target4.main\"],\n  },\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215983,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215984,
											"name": "rules",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 215936,
														"name": "EventBusRuleProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216014,
							"name": "addTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 421,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216015,
									"name": "addTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216016,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216017,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216018,
											"name": "eventsRule",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Rule",
												"package": "aws-cdk-lib",
												"name": "Rule"
											}
										},
										{
											"id": 216019,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 215949,
														"name": "EventBusFunctionTargetProps"
													},
													{
														"type": "reference",
														"id": 215954,
														"name": "EventBusQueueTargetProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215985,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 304,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215986,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to all event targets in this EventBus.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {10}\nbus.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215987,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215988,
							"name": "attachPermissionsToTarget",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215989,
									"name": "attachPermissionsToTarget",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add permissions to a specific event bus rule target",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {10}\nconst bus = new EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      eventPattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\", \"src/target2.main\"],\n    },\n  },\n});\n\nbus.attachPermissionsToTarget(\"rule1\", 0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215990,
											"name": "ruleKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215991,
											"name": "targetIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 215992,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216007,
							"name": "createEventBus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 365,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216008,
									"name": "createEventBus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215993,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 352,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215994,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215995,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215997,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215998,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215999,
																	"name": "eventBusName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216000,
																	"name": "rules",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 216001,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 216002,
																						"name": "key",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					},
																					{
																						"id": 216003,
																						"name": "targets",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "undefined"
																									},
																									{
																										"type": "reflection",
																										"declaration": {
																											"id": 216004,
																											"name": "__type",
																											"kind": 65536,
																											"kindString": "Type literal",
																											"flags": {},
																											"children": [
																												{
																													"id": 216005,
																													"name": "node",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "fn.node.addr"
																												},
																												{
																													"id": 216006,
																													"name": "stack",
																													"kind": 1024,
																													"kindString": "Property",
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													},
																													"defaultValue": "..."
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"kind": 1024,
																													"children": [
																														216005,
																														216006
																													]
																												}
																											]
																										}
																									}
																								]
																							}
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							216002,
																							216003
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215999,
																		216000
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215996,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "EventBus"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215997,
														215996
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216033,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216034,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215960,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215961,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215962,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215963
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215968,
								216032,
								215975,
								215976,
								215971
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215977,
								215979
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216026,
								216020,
								216009,
								215981,
								216014,
								215985,
								215988,
								216007,
								215993,
								216033,
								215960
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 237,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215949,
					"name": "EventBusFunctionTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus function target"
					},
					"children": [
						{
							"id": 215951,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 181,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215952,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215953,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 182,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaFunctionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaFunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215953
											]
										}
									]
								}
							}
						},
						{
							"id": 215950,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function to trigger",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        { function: \"src/function.handler\" },\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 180,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215951,
								215950
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 163,
							"character": 17
						}
					]
				},
				{
					"id": 215928,
					"name": "EventBusProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215933,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215934,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215935,
											"name": "eventBus",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created EventBus",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  cdk: {\n    eventBus: {\n      eventBusName: \"MyEventBus\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IEventBus",
														"package": "aws-cdk-lib",
														"name": "IEventBus"
													},
													{
														"type": "reference",
														"qualifiedName": "EventBusProps",
														"package": "aws-cdk-lib",
														"name": "EventBusProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215935
											]
										}
									]
								}
							}
						},
						{
							"id": 215929,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215930,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215931,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the EventBus. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215931
											]
										}
									]
								}
							}
						},
						{
							"id": 215932,
							"name": "rules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The rules for the eventbus",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {5}\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n      targets: [\"src/target1.main\"],\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 215936,
										"name": "EventBusRuleProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215933,
								215929,
								215932
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 19,
							"character": 17
						}
					]
				},
				{
					"id": 215954,
					"name": "EventBusQueueTargetProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215956,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215957,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215958,
											"name": "target",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 205,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsQueueProps",
												"package": "aws-cdk-lib",
												"name": "SqsQueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215958
											]
										}
									]
								}
							}
						},
						{
							"id": 215955,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue to trigger",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        { queue: new sst.Queue(props.stack, \"Queue\") },\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215536,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215956,
								215955
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 186,
							"character": 17
						}
					]
				},
				{
					"id": 215936,
					"name": "EventBusRuleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure an EventBus rule"
					},
					"children": [
						{
							"id": 215946,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 145,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215947,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215948,
											"name": "rule",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Rule` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js {4}\nnew EventBus(this, \"Bus\", {\n  DOCTODO\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 156,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "RuleProps",
														"package": "aws-cdk-lib",
														"name": "RuleProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "eventBus"
															},
															{
																"type": "literal",
																"value": "targets"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215948
											]
										}
									]
								}
							}
						},
						{
							"id": 215937,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215938,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215940,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Fields to match on the detail field",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detail: { FOO: 1 }  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 105,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 215941,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 215942,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 215943,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											}
										},
										{
											"id": 215944,
											"name": "detailType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of detailTypes to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { detailTypes: [\"foo\"]  },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 120,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 215939,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of sources to filter on",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew EventBus(this, \"Bus\", {\n  rules: {\n    rule1: {\n      pattern: { source: [\"myevent\"] },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/EventBus.ts",
													"line": 90,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215940,
												215944,
												215939
											]
										}
									]
								}
							}
						},
						{
							"id": 215945,
							"name": "targets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure targets for this rule. Can be a function or queue",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew EventBus(props.stack, \"Bus\", {\n  rules: {\n    rule1: {\n      targets: [\n        \"src/function.handler\",\n        new Queue(props.stack, \"MyQueue\"),\n      ]\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/EventBus.ts",
									"line": 139,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 215665,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 215536,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 215949,
											"name": "EventBusFunctionTargetProps"
										},
										{
											"type": "reference",
											"id": 215954,
											"name": "EventBusQueueTargetProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215946,
								215937,
								215945
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/EventBus.ts",
							"line": 74,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215959
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215949,
						215928,
						215954,
						215936
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/EventBus.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215663,
			"name": "Function",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215737,
					"name": "Function",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "A construct for a Lambda Function that allows you to [develop your it locally](live-lambda-development.md). Supports JS, TypeScript, Python, Golang, and C#. It also applies a couple of defaults:",
						"text": "- Sets the default memory setting to 1024MB.\n- Sets the default Lambda function timeout to 10 seconds.\n- [Enables AWS X-Ray](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-tracing.html) by default so you can trace your serverless applications.\n- `AWS_NODEJS_CONNECTION_REUSE_ENABLED` is turned on. Meaning that the Lambda function will automatically reuse TCP connections when working with the AWS SDK. [Read more about this here](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/node-reusing-connections.html).\n- Sets the `IS_LOCAL` environment variable for the Lambda function when it is invoked locally through the `sst start` command.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n### Creating a Function\n\n```js\nimport { Function } from \"@serverless-stack/resources\";\n\nnew Function(this, \"MySnsLambda\", {\n  handler: \"src/sns/index.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215815,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 444,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215816,
									"name": "new Function",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215817,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215818,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215819,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									},
									"overwrites": {
										"type": "reference",
										"name": "lambda.Function.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "lambda.Function.constructor"
							}
						},
						{
							"id": 215859,
							"name": "_connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Actual connections object for this Lambda",
								"text": "May be unset, in which case this Lambda is not configured use in a VPC.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 215,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Connections",
								"package": "aws-cdk-lib",
								"name": "Connections"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._connections"
							}
						},
						{
							"id": 215860,
							"name": "_invocationGrants",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Mapping of invocation principals to grants. Used to de-dupe `grantInvoke()` calls.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 221,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._invocationGrants"
							}
						},
						{
							"id": 215820,
							"name": "_isLiveDevEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 441,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 215858,
							"name": "_skipPermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether the user decides to skip adding permissions.\nThe only use case is for cross-account, imported lambdas\nwhere the user commits to modifying the permisssions\non the imported lambda outside CDK.",
								"tags": [
									{
										"tag": "internal",
										"text": "\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 208,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._skipPermissions"
							}
						},
						{
							"id": 215842,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The architecture of this Lambda Function (this is an optional attribute and defaults to X86_64)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 434,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.architecture"
							}
						},
						{
							"id": 215845,
							"name": "canCreatePermissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 440,
									"character": 23
								}
							],
							"type": {
								"type": "literal",
								"value": true
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.canCreatePermissions"
							}
						},
						{
							"id": 215840,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as queue) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 426,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterQueue"
							}
						},
						{
							"id": 215841,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The DLQ (as topic) associated with this Lambda Function (this is an optional attribute)."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 430,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.deadLetterTopic"
							}
						},
						{
							"id": 215908,
							"name": "env",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 108,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ResourceEnvironment",
								"package": "aws-cdk-lib",
								"name": "ResourceEnvironment"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.env"
							}
						},
						{
							"id": 215836,
							"name": "functionArn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "ARN of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 410,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionArn"
							}
						},
						{
							"id": 215835,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Name of this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 406,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.functionName"
							}
						},
						{
							"id": 215839,
							"name": "grantPrincipal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The principal this Lambda Function is running as"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 422,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IPrincipal",
								"package": "aws-cdk-lib",
								"name": "IPrincipal"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantPrincipal"
							}
						},
						{
							"id": 215821,
							"name": "localId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 442,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215924,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.node"
							}
						},
						{
							"id": 215844,
							"name": "permissionsNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 439,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.permissionsNode"
							}
						},
						{
							"id": 215909,
							"name": "physicalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Returns a string-encoded token that resolves to the physical name that\nshould be passed to the CloudFormation resource.",
								"text": "This value will resolve to one of the following:\n- a concrete value (e.g. `\"my-awesome-bucket\"`)\n- `undefined`, when a name should be generated by CloudFormation\n- a concrete name generated automatically during synthesis, in\n  cross-environment scenarios.\n\n"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 120,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.physicalName"
							}
						},
						{
							"id": 215837,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Execution role associated with this function"
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 414,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.role"
							}
						},
						{
							"id": 215838,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The runtime configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 418,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Runtime",
								"package": "aws-cdk-lib",
								"name": "Runtime"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.runtime"
							}
						},
						{
							"id": 215907,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 107,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Stack",
								"package": "aws-cdk-lib",
								"name": "Stack"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.stack"
							}
						},
						{
							"id": 215843,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The timeout configured for this lambda."
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 438,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.timeout"
							}
						},
						{
							"id": 215764,
							"name": "_VER_PROPS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 335,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215765,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 215766,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 215767,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._VER_PROPS"
							}
						},
						{
							"id": 215868,
							"name": "connections",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 237,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 215869,
									"name": "connections",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Access the Connections object",
										"text": "Will fail if not a VPC-enabled Lambda Function\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Connections",
										"package": "aws-cdk-lib",
										"name": "Connections"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.connections"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.connections"
							}
						},
						{
							"id": 215833,
							"name": "currentVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 333,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 215834,
									"name": "currentVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a `lambda.Version` which represents the current version of this\nLambda function. A new version will be created every time the function's\nconfiguration changes.",
										"text": "You can specify options for this version using the `currentVersionOptions`\nprop when initializing the `lambda.Function`.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Version",
										"package": "aws-cdk-lib",
										"name": "Version"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.currentVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.currentVersion"
							}
						},
						{
							"id": 215872,
							"name": "isBoundToVpc",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 244,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 215873,
									"name": "isBoundToVpc",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Whether or not this Lambda function was bound to a VPC",
										"text": "If this is is `false`, trying to access the `connections` object will fail.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isBoundToVpc"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isBoundToVpc"
							}
						},
						{
							"id": 215870,
							"name": "latestVersion",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 238,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 215871,
									"name": "latestVersion",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.latestVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.latestVersion"
							}
						},
						{
							"id": 215854,
							"name": "logGroup",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 477,
									"character": 8
								}
							],
							"getSignature": [
								{
									"id": 215855,
									"name": "logGroup",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The LogGroup where the Lambda function's logs are made available.",
										"text": "If either `logRetention` is set or this property is called, a CloudFormation custom resource is added to the stack that\npre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the correct log retention\nperiod (never expire, by default).\n\nFurther, if the log group already exists and the `logRetention` is not set, the custom resource will reset the log retention\nto never expire even if it was configured with a different value.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ILogGroup",
										"package": "aws-cdk-lib",
										"name": "ILogGroup"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.logGroup"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.logGroup"
							}
						},
						{
							"id": 215856,
							"name": "_checkEdgeCompatibility",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 479,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215857,
									"name": "_checkEdgeCompatibility",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "internal",
												"text": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._checkEdgeCompatibility"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._checkEdgeCompatibility"
							}
						},
						{
							"id": 215910,
							"name": "_enableCrossEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215911,
									"name": "_enableCrossEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Called when this resource is referenced across environments\n(account/region) to order to request that a physical name will be generated\nfor this resource during synthesis, so the resource can be referenced\nthrough it's absolute name/arn.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._enableCrossEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._enableCrossEnvironment"
							}
						},
						{
							"id": 215887,
							"name": "_functionNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 257,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 215888,
									"name": "_functionNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns the construct tree node that corresponds to the lambda function.\nFor use internally for constructs, when the tree is set up in non-standard ways. Ex: SingletonFunction.",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Node",
										"package": "constructs",
										"name": "Node"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._functionNode"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._functionNode"
							}
						},
						{
							"id": 215889,
							"name": "_isStackAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 272,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 215890,
									"name": "_isStackAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Given the function arn, check if the account id matches this account",
										"text": "Function ARNs look like this:\n\n  arn:aws:lambda:region:account-id:function:function-name\n\n..which means that in order to extract the `account-id` component from the ARN, we can\nsplit the ARN using \":\" and select the component in index 4.\n",
										"returns": "true if account id of function matches the account specified on the stack, false otherwise.\n",
										"tags": [
											{
												"tag": "internal",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function._isStackAccount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function._isStackAccount"
							}
						},
						{
							"id": 215846,
							"name": "addEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 458,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215847,
									"name": "addEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds an environment variable to this Lambda function.\nIf this is a ref to a Lambda function, this operation results in a no-op."
									},
									"parameters": [
										{
											"id": 215848,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable key."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215849,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The environment variable's value."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215850,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"shortText": "Environment variable options.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EnvironmentOptions",
												"package": "aws-cdk-lib",
												"name": "EnvironmentOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEnvironment"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEnvironment"
							}
						},
						{
							"id": 215881,
							"name": "addEventSource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215882,
									"name": "addEventSource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 215883,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IEventSource",
												"package": "aws-cdk-lib",
												"name": "IEventSource"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSource"
							}
						},
						{
							"id": 215874,
							"name": "addEventSourceMapping",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 245,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215875,
									"name": "addEventSourceMapping",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 215876,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215877,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventSourceMappingOptions",
												"package": "aws-cdk-lib",
												"name": "EventSourceMappingOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "EventSourceMapping",
										"package": "aws-cdk-lib",
										"name": "EventSourceMapping"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addEventSourceMapping"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addEventSourceMapping"
							}
						},
						{
							"id": 215851,
							"name": "addLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 466,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215852,
									"name": "addLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds one or more Lambda Layers to this Lambda function.",
										"tags": [
											{
												"tag": "throws",
												"text": "if there are already 5 layers on this function, or the layer is incompatible with this function's runtime.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215853,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"shortText": "the layers to be added.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addLayers"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addLayers"
							}
						},
						{
							"id": 215861,
							"name": "addPermission",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 227,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215862,
									"name": "addPermission",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a permission to the Lambda resource policy."
									},
									"parameters": [
										{
											"id": 215863,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The id for the permission construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215864,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The permission to grant to this Lambda function. @see Permission for details.\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Permission",
												"package": "aws-cdk-lib",
												"name": "Permission"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addPermission"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addPermission"
							}
						},
						{
							"id": 215865,
							"name": "addToRolePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215866,
									"name": "addToRolePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Adds a statement to the IAM role assumed by the instance."
									},
									"parameters": [
										{
											"id": 215867,
											"name": "statement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "PolicyStatement",
												"package": "aws-cdk-lib",
												"name": "PolicyStatement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.addToRolePolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.addToRolePolicy"
							}
						},
						{
							"id": 215912,
							"name": "applyRemovalPolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215913,
									"name": "applyRemovalPolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Apply the given removal policy to this resource",
										"text": "The Removal Policy controls what happens to this resource when it stops\nbeing managed by CloudFormation, either because you've removed it from the\nCDK application or because you've made a change that requires the resource\nto be replaced.\n\nThe resource can be deleted (`RemovalPolicy.DESTROY`), or left in your AWS\naccount for data recovery and cleanup later (`RemovalPolicy.RETAIN`).\n"
									},
									"parameters": [
										{
											"id": 215914,
											"name": "policy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RemovalPolicy",
												"package": "aws-cdk-lib",
												"name": "RemovalPolicy"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.applyRemovalPolicy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.applyRemovalPolicy"
							}
						},
						{
							"id": 215822,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 687,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215823,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {20}\nfn.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215824,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215884,
							"name": "configureAsyncInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215885,
									"name": "configureAsyncInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 215886,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "EventInvokeConfigOptions",
												"package": "aws-cdk-lib",
												"name": "EventInvokeConfigOptions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.configureAsyncInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.configureAsyncInvoke"
							}
						},
						{
							"id": 215915,
							"name": "generatePhysicalName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 145,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 215916,
									"name": "generatePhysicalName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.generatePhysicalName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.generatePhysicalName"
							}
						},
						{
							"id": 215825,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 693,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215826,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215827,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215829,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215830,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215832,
																	"name": "arn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215831,
																	"name": "localId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215832,
																		215831
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215828,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Function"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215829,
														215828
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215920,
							"name": "getResourceArnAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 175,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 215921,
									"name": "getResourceArnAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"ARN\" attribute (e.g. `bucket.bucketArn`).",
										"text": "Normally, this token will resolve to `arnAttr`, but if the resource is\nreferenced across environments, `arnComponents` will be used to synthesize\na concrete ARN with the resource's physical name. Make sure to reference\n`this.physicalName` in `arnComponents`.\n"
									},
									"parameters": [
										{
											"id": 215922,
											"name": "arnAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the ARN of the resource.\nCommonly it will be called \"Arn\" (e.g. `resource.attrArn`), but sometimes\nit's the CFN resource's `ref`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215923,
											"name": "arnComponents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The format of the ARN of this resource. You must\nreference `this.physicalName` somewhere within the ARN in order for\ncross-environment references to work.\n\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "ArnComponents",
												"package": "aws-cdk-lib",
												"name": "ArnComponents"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceArnAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceArnAttribute"
							}
						},
						{
							"id": 215917,
							"name": "getResourceNameAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 157,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 215918,
									"name": "getResourceNameAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an environment-sensitive token that should be used for the\nresource's \"name\" attribute (e.g. `bucket.bucketName`).",
										"text": "Normally, this token will resolve to `nameAttr`, but if the resource is\nreferenced across environments, it will be resolved to `this.physicalName`,\nwhich will be a concrete name.\n"
									},
									"parameters": [
										{
											"id": 215919,
											"name": "nameAttr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The CFN attribute which resolves to the resource's name.\nCommonly this is the resource's `ref`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.getResourceNameAttribute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.getResourceNameAttribute"
							}
						},
						{
							"id": 215878,
							"name": "grantInvoke",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function-base.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215879,
									"name": "grantInvoke",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Grant the given identity permissions to invoke this Lambda"
									},
									"parameters": [
										{
											"id": 215880,
											"name": "grantee",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IGrantable",
												"package": "aws-cdk-lib",
												"name": "IGrantable"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Grant",
										"package": "aws-cdk-lib",
										"name": "Grant"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.grantInvoke"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.grantInvoke"
							}
						},
						{
							"id": 215891,
							"name": "metric",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 215892,
									"name": "metric",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Function"
									},
									"parameters": [
										{
											"id": 215893,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215894,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metric"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metric"
							}
						},
						{
							"id": 215904,
							"name": "metricDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 215905,
									"name": "metricDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How long execution of this Lambda takes",
										"text": "Average over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 215906,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricDuration"
							}
						},
						{
							"id": 215901,
							"name": "metricErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 215902,
									"name": "metricErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How many invocations of this Lambda fail",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 215903,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricErrors"
							}
						},
						{
							"id": 215898,
							"name": "metricInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 215899,
									"name": "metricInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is invoked",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 215900,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricInvocations"
							}
						},
						{
							"id": 215895,
							"name": "metricThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 215896,
									"name": "metricThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "How often this Lambda is throttled",
										"text": "Sum over 5 minutes\n"
									},
									"parameters": [
										{
											"id": 215897,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricThrottles"
							}
						},
						{
							"id": 215925,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215926,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.toString"
							}
						},
						{
							"id": 215768,
							"name": "classifyVersionProperty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 345,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215769,
									"name": "classifyVersionProperty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Record whether specific properties in the `AWS::Lambda::Function` resource should\nalso be associated to the Version resource.\nSee 'currentVersion' section in the module README for more details."
									},
									"parameters": [
										{
											"id": 215770,
											"name": "propertyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The property to classify"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215771,
											"name": "locked",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "whether the property should be associated to the version or not.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.classifyVersionProperty"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.classifyVersionProperty"
							}
						},
						{
							"id": 215741,
							"name": "copyFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 707,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215742,
									"name": "copyFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215743,
											"name": "bundle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"id": 215717,
														"name": "FunctionBundleProp"
													}
												]
											}
										},
										{
											"id": 215744,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215745,
											"name": "buildPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215753,
							"name": "fromDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 784,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215754,
									"name": "fromDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215755,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215756,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215757,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215666,
												"name": "FunctionDefinition"
											}
										},
										{
											"id": 215758,
											"name": "inheritedProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										},
										{
											"id": 215759,
											"name": "inheritErrorMessage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 215777,
							"name": "fromFunctionArn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 353,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215778,
									"name": "fromFunctionArn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its ARN"
									},
									"parameters": [
										{
											"id": 215779,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215780,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215781,
											"name": "functionArn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionArn"
							}
						},
						{
							"id": 215782,
							"name": "fromFunctionAttributes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 362,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215783,
									"name": "fromFunctionAttributes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Creates a Lambda function object which represents a function not defined\nwithin this stack."
									},
									"parameters": [
										{
											"id": 215784,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The parent construct"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215785,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "The name of the lambda construct"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215786,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "the attributes of the function to import\n"
											},
											"type": {
												"type": "reference",
												"qualifiedName": "FunctionAttributes",
												"package": "aws-cdk-lib",
												"name": "FunctionAttributes"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionAttributes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionAttributes"
							}
						},
						{
							"id": 215772,
							"name": "fromFunctionName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 349,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215773,
									"name": "fromFunctionName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Import a lambda function into the CDK using its name"
									},
									"parameters": [
										{
											"id": 215774,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215775,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215776,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IFunction",
										"package": "aws-cdk-lib",
										"name": "IFunction"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.fromFunctionName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.fromFunctionName"
							}
						},
						{
							"id": 215746,
							"name": "handleImportedLayers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 732,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215747,
									"name": "handleImportedLayers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215748,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215749,
											"name": "layers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "ILayerVersion",
													"package": "aws-cdk-lib",
													"name": "ILayerVersion"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "ILayerVersion",
											"package": "aws-cdk-lib",
											"name": "ILayerVersion"
										}
									}
								}
							]
						},
						{
							"id": 215812,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215813,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215814,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isConstruct"
							}
						},
						{
							"id": 215750,
							"name": "isInlineDefinition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 778,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215751,
									"name": "isInlineDefinition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215752,
											"name": "definition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "definition",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"id": 215665,
											"name": "FunctionInlineDefinition"
										}
									}
								}
							]
						},
						{
							"id": 215809,
							"name": "isResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/core/lib/resource.d.ts",
									"line": 106,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215810,
									"name": "isResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Check whether the given construct is a Resource"
									},
									"parameters": [
										{
											"id": 215811,
											"name": "construct",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "IConstruct",
												"package": "constructs",
												"name": "IConstruct"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "construct",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "CfnResource",
											"package": "aws-cdk-lib",
											"name": "CfnResource"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.isResource"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.isResource"
							}
						},
						{
							"id": 215760,
							"name": "mergeProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 818,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215761,
									"name": "mergeProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215762,
											"name": "baseProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										},
										{
											"id": 215763,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215667,
										"name": "FunctionProps"
									}
								}
							]
						},
						{
							"id": 215787,
							"name": "metricAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 366,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215788,
									"name": "metricAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Return the given named metric for this Lambda"
									},
									"parameters": [
										{
											"id": 215789,
											"name": "metricName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215790,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAll"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAll"
							}
						},
						{
							"id": 215803,
							"name": "metricAllConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 396,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215804,
									"name": "metricAllConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215805,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllConcurrentExecutions"
							}
						},
						{
							"id": 215794,
							"name": "metricAllDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 378,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215795,
									"name": "metricAllDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the Duration executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "average over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215796,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllDuration"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllDuration"
							}
						},
						{
							"id": 215791,
							"name": "metricAllErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 372,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215792,
									"name": "metricAllErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of Errors executing all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215793,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllErrors"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllErrors"
							}
						},
						{
							"id": 215797,
							"name": "metricAllInvocations",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 384,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215798,
									"name": "metricAllInvocations",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215799,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllInvocations"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllInvocations"
							}
						},
						{
							"id": 215800,
							"name": "metricAllThrottles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 390,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215801,
									"name": "metricAllThrottles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of throttled invocations of all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "sum over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215802,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllThrottles"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllThrottles"
							}
						},
						{
							"id": 215806,
							"name": "metricAllUnreservedConcurrentExecutions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 402,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215807,
									"name": "metricAllUnreservedConcurrentExecutions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Metric for the number of unreserved concurrent executions across all Lambdas",
										"tags": [
											{
												"tag": "default",
												"text": "max over 5 minutes\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215808,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "MetricOptions",
												"package": "aws-cdk-lib",
												"name": "MetricOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Metric",
										"package": "aws-cdk-lib",
										"name": "Metric"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "lambda.Function.metricAllUnreservedConcurrentExecutions"
							}
						},
						{
							"id": 215738,
							"name": "normalizeSrcPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 703,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215739,
									"name": "normalizeSrcPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215740,
											"name": "srcPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215815
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215859,
								215860,
								215820,
								215858,
								215842,
								215845,
								215840,
								215841,
								215908,
								215836,
								215835,
								215839,
								215821,
								215924,
								215844,
								215909,
								215837,
								215838,
								215907,
								215843,
								215764
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215868,
								215833,
								215872,
								215870,
								215854
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215856,
								215910,
								215887,
								215889,
								215846,
								215881,
								215874,
								215851,
								215861,
								215865,
								215912,
								215822,
								215884,
								215915,
								215825,
								215920,
								215917,
								215878,
								215891,
								215904,
								215901,
								215898,
								215895,
								215925,
								215768,
								215741,
								215753,
								215777,
								215782,
								215772,
								215746,
								215812,
								215750,
								215809,
								215760,
								215787,
								215803,
								215794,
								215791,
								215797,
								215800,
								215806,
								215738
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 440,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Function",
							"package": "aws-cdk-lib",
							"name": "Function"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215734,
					"name": "FunctionBundleCopyFilesProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure additional files to copy into the function bundle",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215735,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Source path relative to sst.json"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 412,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215736,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Destination path relative to function root in bundle"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 416,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215735,
								215736
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 408,
							"character": 17
						}
					]
				},
				{
					"id": 215718,
					"name": "FunctionBundleNodejsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure NodeJS bundling options",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n   format: \"esm\",\n   minify: false\n  }\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215722,
							"name": "commandHooks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Hooks to run at various stages of bundling"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 308,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICommandHooks",
								"package": "aws-cdk-lib",
								"name": "ICommandHooks"
							}
						},
						{
							"id": 215730,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 215734,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 215723,
							"name": "esbuildConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override esbuild specific settings"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 312,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215724,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215725,
											"name": "define",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Replace global identifiers with constant expressions.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      define: DOCTODO\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 327,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										},
										{
											"id": 215726,
											"name": "keepNames",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When minifying preserve names of functions and variables",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      keepNames: true\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 342,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 215727,
											"name": "plugins",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Path to plugin file to load esbuild plugins",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    esbuild: {\n      plugins: \"path/to/plugins.js\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Function.ts",
													"line": 357,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215725,
												215726,
												215727
											]
										}
									]
								}
							}
						},
						{
							"id": 215720,
							"name": "externalModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will not be included in the bundle. Usually used to exclude dependencies that are provided in layers",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    external: [\"prisma\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 291,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 215729,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure bundle format",
								"tags": [
									{
										"tag": "default",
										"text": "\"cjs\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    format: \"esm\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 388,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cjs"
									},
									{
										"type": "literal",
										"value": "esm"
									}
								]
							}
						},
						{
							"id": 215719,
							"name": "loader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure additional esbuild loaders for other file extensions",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    loader: {\n     \".png\": \"file\"\n    }\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 278,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"qualifiedName": "Loader",
										"package": "esbuild",
										"name": "Loader"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 215728,
							"name": "minify",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable minification",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    minify: false\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 373,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 215721,
							"name": "nodeModules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Packages that will be excluded from the bundle and installed into node_modules instead. Useful for dependencies that cannot be bundled, like those with binary dependencies.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    nodeModules: [\"pg\"]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 304,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215722,
								215730,
								215723,
								215720,
								215729,
								215719,
								215728,
								215721
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 263,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 215731,
					"name": "FunctionBundlePythonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215733,
							"name": "copyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to configure additional files to copy into the function bundle",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 247,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 215734,
									"name": "FunctionBundleCopyFilesProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FunctionBundleBase.copyFiles"
							}
						},
						{
							"id": 215732,
							"name": "installCommands",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 393,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215733,
								215732
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 392,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FunctionBundleBase"
						}
					]
				},
				{
					"id": 215714,
					"name": "FunctionNameProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215716,
							"name": "functionProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function properties"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 219,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215667,
								"name": "FunctionProps"
							}
						},
						{
							"id": 215715,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The stack the function is being created in"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 215,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Stack"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215716,
								215715
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 211,
							"character": 17
						}
					]
				},
				{
					"id": 215667,
					"name": "FunctionProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215692,
							"name": "allowAllOutbound",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to allow the Lambda to send all network traffic",
								"text": "If set to false, you must individually add traffic rules to allow the\nLambda to connect to network targets.\n",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 147,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowAllOutbound"
							}
						},
						{
							"id": 215706,
							"name": "allowPublicSubnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda Functions in a public subnet can NOT access the internet.\nUse this property to acknowledge this limitation and still place the function in a public subnet.",
								"tags": [
									{
										"tag": "see",
										"text": "https://stackoverflow.com/questions/52992085/why-cant-an-aws-lambda-function-inside-a-public-subnet-in-a-vpc-connect-to-the/52994841#52994841\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 265,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.allowPublicSubnet"
							}
						},
						{
							"id": 215709,
							"name": "architecture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The system architectures compatible with this lambda function.",
								"tags": [
									{
										"tag": "default",
										"text": "Architecture.X86_64\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 282,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Architecture",
								"package": "aws-cdk-lib",
								"name": "Architecture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.architecture"
							}
						},
						{
							"id": 215679,
							"name": "bundle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure or disable bundling options",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  bundle: {\n    copyFiles: [{ from: \"src/index.js\" }]\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215717,
								"name": "FunctionBundleProp"
							}
						},
						{
							"id": 215708,
							"name": "codeSigningConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Code signing config associated with this function",
								"tags": [
									{
										"tag": "default",
										"text": "- Not Sign the Code\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 277,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ICodeSigningConfig",
								"package": "aws-cdk-lib",
								"name": "ICodeSigningConfig"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.codeSigningConfig"
							}
						},
						{
							"id": 215704,
							"name": "currentVersionOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Options for the `lambda.Version` resource automatically created by the\n`fn.currentVersion` method.",
								"tags": [
									{
										"tag": "default",
										"text": "- default options as described in `VersionOptions`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 251,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "VersionOptions",
								"package": "aws-cdk-lib",
								"name": "VersionOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.currentVersionOptions"
							}
						},
						{
							"id": 215694,
							"name": "deadLetterQueue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SQS queue to use if DLQ is enabled.\nIf SNS topic is desired, specify `deadLetterTopic` property instead.",
								"tags": [
									{
										"tag": "default",
										"text": "- SQS queue with 14 day retention period if `deadLetterQueueEnabled` is `true`\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 161,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IQueue",
								"package": "aws-cdk-lib",
								"name": "IQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueue"
							}
						},
						{
							"id": 215693,
							"name": "deadLetterQueueEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enabled DLQ. If `deadLetterQueue` is undefined,\nan SQS queue with default options will be defined for your Function.",
								"tags": [
									{
										"tag": "default",
										"text": "- false unless `deadLetterQueue` is set, which implies DLQ is enabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 154,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterQueueEnabled"
							}
						},
						{
							"id": 215695,
							"name": "deadLetterTopic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The SNS topic to use as a DLQ.\nNote that if `deadLetterQueueEnabled` is set to `true`, an SQS queue will be created\nrather than an SNS topic. Using an SNS topic as a DLQ requires this property to be set explicitly.",
								"tags": [
									{
										"tag": "default",
										"text": "- no SNS topic\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 169,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ITopic",
								"package": "aws-cdk-lib",
								"name": "ITopic"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deadLetterTopic"
							}
						},
						{
							"id": 215685,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "A description of the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No description.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 51,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.description"
							}
						},
						{
							"id": 215678,
							"name": "enableLiveDev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable local development",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  enableLiveDev: false\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 173,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 215686,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code.",
								"tags": [
									{
										"tag": "default",
										"text": "- No environment variables.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215687,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 215688,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 215689,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environment"
							}
						},
						{
							"id": 215707,
							"name": "environmentEncryption",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The AWS KMS key that's used to encrypt your function's environment variables.",
								"tags": [
									{
										"tag": "default",
										"text": "- AWS Lambda creates and uses an AWS managed customer master key (CMK).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 271,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.environmentEncryption"
							}
						},
						{
							"id": 215700,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Event sources for this function.",
								"text": "You can also add event sources using `addEventSource`.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No event sources.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 223,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "IEventSource",
									"package": "aws-cdk-lib",
									"name": "IEventSource"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.events"
							}
						},
						{
							"id": 215705,
							"name": "filesystem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The filesystem configuration for the lambda function",
								"tags": [
									{
										"tag": "default",
										"text": "- will not mount any filesystem\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 257,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "FileSystem",
								"package": "aws-cdk-lib",
								"name": "FileSystem"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.filesystem"
							}
						},
						{
							"id": 215668,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Override the automatically generated name",
								"tags": [
									{
										"tag": "default",
										"text": "An automatically generated name\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  functionName: \"my-function\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 215669,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 215670,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 215671,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 215714,
																"name": "FunctionNameProps"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 215672,
							"name": "handler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the entry point and handler function. Of the format:\n`/path/to/file.function`.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  handler: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215690,
							"name": "initialPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Initial policy statements to add to the created Lambda Role.",
								"text": "You can call `addToRolePolicy` to the created lambda to add statements post creation.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- No policy statements are added to the created Lambda role.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 94,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "PolicyStatement",
									"package": "aws-cdk-lib",
									"name": "PolicyStatement"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.initialPolicy"
							}
						},
						{
							"id": 215698,
							"name": "insightsVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Specify the version of CloudWatch Lambda insights to use for monitoring",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights.html\n\nWhen used with `DockerImageFunction` or `DockerImageCode`, the Docker image should have\nthe Lambda insights agent installed."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-Getting-Started-docker.html\n"
									},
									{
										"tag": "default",
										"text": "- No Lambda Insights\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 200,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LambdaInsightsVersion",
								"package": "aws-cdk-lib",
								"name": "LambdaInsightsVersion"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.insightsVersion"
							}
						},
						{
							"id": 215681,
							"name": "layers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure layers for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  layers: [myLayer]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 208,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ILayerVersion",
									"package": "aws-cdk-lib",
									"name": "ILayerVersion"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.layers"
							}
						},
						{
							"id": 215701,
							"name": "logRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days log events are kept in CloudWatch Logs. When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
								"tags": [
									{
										"tag": "default",
										"text": "logs.RetentionDays.INFINITE\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 231,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RetentionDays",
								"package": "aws-cdk-lib",
								"name": "RetentionDays"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetention"
							}
						},
						{
							"id": 215703,
							"name": "logRetentionRetryOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "When log retention is specified, a custom resource attempts to create the CloudWatch log group.\nThese options control the retry policy when interacting with CloudWatch APIs.",
								"tags": [
									{
										"tag": "default",
										"text": "- Default AWS SDK retry options.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 245,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "LogRetentionRetryOptions",
								"package": "aws-cdk-lib",
								"name": "LogRetentionRetryOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRetryOptions"
							}
						},
						{
							"id": 215702,
							"name": "logRetentionRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The IAM role for the Lambda function associated with the custom resource\nthat sets the retention policy.",
								"tags": [
									{
										"tag": "default",
										"text": "- A new role is created.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 238,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.logRetentionRole"
							}
						},
						{
							"id": 215712,
							"name": "maxEventAge",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum age of a request that Lambda sends to a function for\nprocessing.",
								"text": "Minimum: 60 seconds\nMaximum: 6 hours\n",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.hours(6)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.maxEventAge"
							}
						},
						{
							"id": 215675,
							"name": "memorySize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The amount of memory in MB allocated.",
								"tags": [
									{
										"tag": "default",
										"text": "1024\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 2048,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.memorySize"
							}
						},
						{
							"id": 215710,
							"name": "onFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for failed invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onFailure"
							}
						},
						{
							"id": 215711,
							"name": "onSuccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The destination for successful invocations.",
								"tags": [
									{
										"tag": "default",
										"text": "- no destination\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IDestination",
								"package": "aws-cdk-lib",
								"name": "IDestination"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onSuccess"
							}
						},
						{
							"id": 215680,
							"name": "permissions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure permissions for the function",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  permissions: [\"ses\", Bucket]\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 197,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Permissions"
							}
						},
						{
							"id": 215696,
							"name": "profiling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Enable profiling.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- No profiling.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 182,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profiling"
							}
						},
						{
							"id": 215697,
							"name": "profilingGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Profiling Group.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/codeguru/latest/profiler-ug/setting-up-lambda.html\n"
									},
									{
										"tag": "default",
										"text": "- A new profiling group will be created if `profiling` is set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 189,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IProfilingGroup",
								"package": "aws-cdk-lib",
								"name": "IProfilingGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.profilingGroup"
							}
						},
						{
							"id": 215699,
							"name": "reservedConcurrentExecutions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum of concurrent executions you want to reserve for the function.",
								"tags": [
									{
										"tag": "default",
										"text": "- No specific limit - account limit."
									},
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 215,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.reservedConcurrentExecutions"
							}
						},
						{
							"id": 215713,
							"name": "retryAttempts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The maximum number of times to retry when the function returns an error.",
								"text": "Minimum: 0\nMaximum: 2\n",
								"tags": [
									{
										"tag": "default",
										"text": "2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/event-invoke-config.d.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.retryAttempts"
							}
						},
						{
							"id": 215691,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Lambda execution role.",
								"text": "This is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.\n\nThe default Role automatically has permissions granted for Lambda execution. If you\nprovide a Role, you must add the relevant AWS managed policies yourself.\n\nThe relevant managed policies are \"service-role/AWSLambdaBasicExecutionRole\" and\n\"service-role/AWSLambdaVPCAccessExecutionRole\".\n",
								"tags": [
									{
										"tag": "default",
										"text": "- A unique role will be generated for this lambda function.\nBoth supplied and generated roles can always be changed by calling `addToRolePolicy`.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 111,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IRole",
								"package": "aws-cdk-lib",
								"name": "IRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.role"
							}
						},
						{
							"id": 215674,
							"name": "runtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The runtime environment.",
								"tags": [
									{
										"tag": "default",
										"text": "\"nodejs12.x\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  runtime: \"nodejs14.x\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "nodejs14.x"
									},
									{
										"type": "literal",
										"value": "nodejs"
									},
									{
										"type": "literal",
										"value": "nodejs4.3"
									},
									{
										"type": "literal",
										"value": "nodejs6.10"
									},
									{
										"type": "literal",
										"value": "nodejs8.10"
									},
									{
										"type": "literal",
										"value": "nodejs10.x"
									},
									{
										"type": "literal",
										"value": "nodejs12.x"
									},
									{
										"type": "literal",
										"value": "python2.7"
									},
									{
										"type": "literal",
										"value": "python3.6"
									},
									{
										"type": "literal",
										"value": "python3.7"
									},
									{
										"type": "literal",
										"value": "python3.8"
									},
									{
										"type": "literal",
										"value": "python3.9"
									},
									{
										"type": "literal",
										"value": "dotnetcore1.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.0"
									},
									{
										"type": "literal",
										"value": "dotnetcore2.1"
									},
									{
										"type": "literal",
										"value": "dotnetcore3.1"
									},
									{
										"type": "literal",
										"value": "go1.x"
									},
									{
										"type": "reference",
										"qualifiedName": "Runtime",
										"package": "aws-cdk-lib",
										"name": "Runtime"
									}
								]
							}
						},
						{
							"id": 215684,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The list of security groups to associate with the Lambda's network interfaces.",
								"text": "Only used if 'vpc' is supplied.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- If the function is placed within a VPC and a security group is\nnot specified, either by this or securityGroup prop, a dedicated security\ngroup will be created for this function.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 138,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 215673,
							"name": "srcPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Root directory of the project, typically where package.json is located. Set if using a monorepo with multiple subpackages",
								"tags": [
									{
										"tag": "default",
										"text": "Defaults to the same directory as sst.json\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  srcPath: \"packages/backend\",\n  handler: \"function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215676,
							"name": "timeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The execution timeout in seconds.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  memorySize: 30,\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 146,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"qualifiedName": "Duration",
										"package": "aws-cdk-lib",
										"name": "Duration"
									}
								]
							}
						},
						{
							"id": 215677,
							"name": "tracing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable AWS X-Ray Tracing.",
								"tags": [
									{
										"tag": "default",
										"text": "\"active\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Function(props.stack, \"Function\", {\n  tracing: \"pass_through\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Function.ts",
									"line": 159,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Tracing",
								"package": "aws-cdk-lib",
								"name": "Tracing"
							},
							"overwrites": {
								"type": "reference",
								"name": "Omit.tracing"
							}
						},
						{
							"id": 215682,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "VPC network to place Lambda network interfaces",
								"text": "Specify this if the Lambda function needs to access resources in a VPC.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- Function is not placed within a VPC.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpc"
							}
						},
						{
							"id": 215683,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the network interfaces within the VPC.",
								"text": "Only used if 'vpc' is supplied. Note: internet access for Lambdas\nrequires a NAT gateway, so picking Public subnets is not allowed.\n",
								"tags": [
									{
										"tag": "default",
										"text": "- the Vpc default strategy if not specified\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-lambda/lib/function.d.ts",
									"line": 128,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215692,
								215706,
								215709,
								215679,
								215708,
								215704,
								215694,
								215693,
								215695,
								215685,
								215678,
								215686,
								215707,
								215700,
								215705,
								215668,
								215672,
								215690,
								215698,
								215681,
								215701,
								215703,
								215702,
								215712,
								215675,
								215710,
								215711,
								215680,
								215696,
								215697,
								215699,
								215713,
								215691,
								215674,
								215684,
								215673,
								215676,
								215677,
								215682,
								215683
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 49,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "FunctionOptions",
									"package": "aws-cdk-lib",
									"name": "lambda.FunctionOptions"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "functionName"
										},
										{
											"type": "literal",
											"value": "timeout"
										},
										{
											"type": "literal",
											"value": "runtime"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 215717,
					"name": "FunctionBundleProp",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 229,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 215718,
								"name": "FunctionBundleNodejsProps"
							},
							{
								"type": "reference",
								"id": 215731,
								"name": "FunctionBundlePythonProps"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 215666,
					"name": "FunctionDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 215737,
								"name": "Function"
							},
							{
								"type": "reference",
								"id": 215667,
								"name": "FunctionProps"
							}
						]
					}
				},
				{
					"id": 215665,
					"name": "FunctionInlineDefinition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						]
					}
				},
				{
					"id": 215664,
					"name": "HandlerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/Function.ts",
							"line": 45,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "FunctionHandlerProps"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215737
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215734,
						215718,
						215731,
						215714,
						215667
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						215717,
						215666,
						215665,
						215664
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Function.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 216459,
			"name": "GraphQLApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216482,
					"name": "GraphQLApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 216486,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 39,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216487,
									"name": "new GraphQLApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216488,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216489,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216490,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216460,
												"name": "GraphQLApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216482,
										"name": "GraphQLApi"
									},
									"overwrites": {
										"type": "reference",
										"id": 214885,
										"name": "Api.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 214884,
								"name": "Api.constructor"
							}
						},
						{
							"id": 216522,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 397,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216523,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216525,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If access logs are enabled, this is the internally created CDK LogGroup instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 405,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 216527,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK Certificate instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 413,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 216526,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If custom domain is enabled, this is the internally created CDK DomainName instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 409,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 216524,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK HttpApi instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 401,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "HttpApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "HttpApi"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216525,
												216527,
												216526,
												216524
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 214890,
								"name": "Api.cdk"
							}
						},
						{
							"id": 216491,
							"name": "codegen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 35,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216492,
							"name": "lambdaIntegration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "HttpRouteIntegration",
								"package": "@aws-cdk/aws-apigatewayv2-alpha",
								"name": "HttpRouteIntegration"
							}
						},
						{
							"id": 216550,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 214985,
								"name": "Api.node"
							}
						},
						{
							"id": 216493,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 37,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216530,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 451,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216531,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If custom domain is enabled, this is the custom domain URL of the Api.",
										"text": ":::note\nIf you are setting the base mapping for the custom domain, you need to include the trailing slash while using the custom domain URL. For example, if the [`domainName`](#domainname) is set to `api.domain.com` and the [`path`](#path) is `v1`, the custom domain URL of the API will be `https://api.domain.com/v1/`.\n:::\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214906,
								"name": "Api.customDomainUrl"
							}
						},
						{
							"id": 216534,
							"name": "httpApiArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 465,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216535,
									"name": "httpApiArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the underlying HttpApi"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.httpApiArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214910,
								"name": "Api.httpApiArn"
							}
						},
						{
							"id": 216532,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 458,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216533,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The routes for the Api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.routes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214908,
								"name": "Api.routes"
							}
						},
						{
							"id": 216494,
							"name": "serverFunction",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 85,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216495,
									"name": "serverFunction",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 216528,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 440,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216529,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The AWS generated URL of the Api."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Api.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214904,
								"name": "Api.url"
							}
						},
						{
							"id": 216536,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 482,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216537,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds routes to the Api after it has been created.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes(this, {\n  \"GET    /notes/{id}\": \"src/get.main\",\n  \"PUT    /notes/{id}\": \"src/update.main\",\n  \"DELETE /notes/{id}\": \"src/delete.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216538,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216539,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 214820,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "ApiRouteProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 214913,
										"name": "Api.addRoutes"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214912,
								"name": "Api.addRoutes"
							}
						},
						{
							"id": 216543,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 519,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216544,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216545,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 214920,
										"name": "Api.attachPermissions"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214919,
								"name": "Api.attachPermissions"
							}
						},
						{
							"id": 216546,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 541,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216547,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\napi.attachPermissionsToRoute(\"GET /notes\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216548,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216549,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 214923,
										"name": "Api.attachPermissionsToRoute"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214922,
								"name": "Api.attachPermissionsToRoute"
							}
						},
						{
							"id": 216496,
							"name": "createFunctionIntegration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 106,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216497,
									"name": "createFunctionIntegration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216498,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216499,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216500,
											"name": "routeProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 214822,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "ApiFunctionRouteProps"
											}
										},
										{
											"id": 216501,
											"name": "postfixName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "HttpRouteIntegration",
										"package": "@aws-cdk/aws-apigatewayv2-alpha",
										"name": "HttpRouteIntegration"
									},
									"overwrites": {
										"type": "reference",
										"id": 214966,
										"name": "Api.createFunctionIntegration"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 214965,
								"name": "Api.createFunctionIntegration"
							}
						},
						{
							"id": 216502,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 124,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216503,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216504,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216505,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216506,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216510,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216507,
																	"name": "graphql",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "literal",
																		"value": true
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216509,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216511,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 216512,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 216514,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 216515,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 216516,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 216517,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													216516,
																													216517
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 216513,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "key"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							216514,
																							216513
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216508,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216510,
																		216507,
																		216509,
																		216511,
																		216508
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216518,
													"name": "local",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216519,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216520,
																	"name": "codegen",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216520
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216521,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Api"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216505,
														216518,
														216521
													]
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"id": 214927,
										"name": "Api.getConstructMetadata"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 214926,
								"name": "Api.getConstructMetadata"
							}
						},
						{
							"id": 216540,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 505,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216541,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `GET /notes`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst api = new Api(this, \"Api\", {\n  routes: {\n    \"GET    /notes\": \"src/list.main\",\n  },\n});\n\nconst listFunction = api.getFunction(\"GET /notes\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216542,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 214917,
										"name": "Api.getFunction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214916,
								"name": "Api.getFunction"
							}
						},
						{
							"id": 216551,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216552,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 214987,
										"name": "Api.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214986,
								"name": "Api.toString"
							}
						},
						{
							"id": 216483,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216484,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216485,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 214882,
										"name": "Api.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 214881,
								"name": "Api.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216486
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216522,
								216491,
								216492,
								216550,
								216493
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216530,
								216534,
								216532,
								216494,
								216528
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216536,
								216543,
								216546,
								216496,
								216502,
								216540,
								216551,
								216483
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/GraphQLApi.ts",
							"line": 34,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 214880,
							"name": "Api"
						}
					]
				},
				{
					"id": 216460,
					"name": "GraphQLApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216469,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: true\n});\n```"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  accessLog: {\n    retention: \"ONE_WEEK\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.accessLog"
							}
						},
						{
							"id": 216471,
							"name": "authorizers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "DOCTODO: This one is a bit weird because of the generic param but think examples will suffice"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 148,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.authorizers"
							}
						},
						{
							"id": 216464,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216465,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216466,
											"name": "httpApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Import the underlying HTTP API or override the default configuration",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api(this, \"Api\", {\n  cdk: {\n    httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n      httpApiId,\n    }),\n  }\n});\n```\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nimport { HttpApi } from \"@aws-cdk/aws-apigatewayv2-alpha\";\n\nnew Api({\n  httpApi: HttpApi.fromHttpApiAttributes(this, \"MyHttpApi\", {\n    httpApiId,\n  }),\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IHttpApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IHttpApi"
													},
													{
														"type": "reference",
														"qualifiedName": "HttpApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "HttpApiProps"
													}
												]
											}
										},
										{
											"id": 216467,
											"name": "httpStages",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO: What does this do + example"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 71,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"qualifiedName": "HttpStageProps",
															"package": "@aws-cdk/aws-apigatewayv2-alpha",
															"name": "HttpStageProps"
														},
														{
															"type": "literal",
															"value": "httpApi"
														}
													],
													"qualifiedName": "Omit",
													"package": "typescript",
													"name": "Omit"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216466,
												216467
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cdk"
							}
						},
						{
							"id": 216461,
							"name": "codegen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to graphql-codegen configuration file",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew GraphQLApi(props.stack, \"api\", {\n  codegen: \"./graphql/codegen.yml\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216468,
							"name": "cors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "CORS support applied to all endpoints in this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Api(this, \"Api\", {\n  cors: {\n    allowMethods: [\"GET\"],\n  },\n});\n```\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 102,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "CorsProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.cors"
							}
						},
						{
							"id": 216470,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew Api(this, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.customDomain"
							}
						},
						{
							"id": 216472,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Api.ts",
									"line": 150,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216473,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216476,
											"name": "authorizationScopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO:"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 178,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 216475,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "DOCTODO"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 171,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "none"
													},
													{
														"type": "literal",
														"value": "iam"
													}
												]
											}
										},
										{
											"id": 216474,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 167,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										},
										{
											"id": 216477,
											"name": "payloadFormatVersion",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The [payload format version](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) for all the endpoints in the API.",
												"tags": [
													{
														"tag": "default",
														"text": "\"2.0\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 183,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "1.0"
													},
													{
														"type": "literal",
														"value": "2.0"
													}
												]
											}
										},
										{
											"id": 216478,
											"name": "throttle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Api.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216479,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216480,
															"name": "burst",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [burst rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      burst: 100\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 199,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 216481,
															"name": "rate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The [steady-state rate](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-throttling.html) of the number of concurrent request for all the routes in the API.",
																"tags": [
																	{
																		"tag": "example",
																		"text": "\n```js\nnew Api(this, \"Api\", {\n  defaults: {\n    throttle: {\n      rate: 10\n    }\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/Api.ts",
																	"line": 214,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216480,
																216481
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216476,
												216475,
												216474,
												216477,
												216478
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.defaults"
							}
						},
						{
							"id": 216463,
							"name": "rootPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216462,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to function that will be invoked to resolve GraphQL queries.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew GraphQLApi(props.stack, \"api\", {\n  codegen: \"./graphql/codegen.yml\"\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/GraphQLApi.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216469,
								216471,
								216464,
								216461,
								216468,
								216470,
								216472,
								216463,
								216462
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/GraphQLApi.ts",
							"line": 8,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 214798,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "never"
										}
									],
									"name": "ApiProps"
								},
								{
									"type": "literal",
									"value": "routes"
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216482
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216460
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/GraphQLApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216616,
			"name": "KinesisStream",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216630,
					"name": "KinesisStream",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `KinesisStream` construct is a higher level CDK construct that makes it easy to create a [Kinesis Data Stream](https://aws.amazon.com/kinesis/data-streams/). You can create a stream and add a list of consumers to it.\nThis construct makes it easy to define a stream and its consumers. It also internally connects the consumers and the stream together."
					},
					"children": [
						{
							"id": 216634,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 142,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216635,
									"name": "new KinesisStream",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216636,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216637,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216638,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 216617,
												"name": "KinesisStreamProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216630,
										"name": "KinesisStream"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216639,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 132,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216640,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216641,
											"name": "stream",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Return internally created Kinesis Stream"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IStream",
												"package": "aws-cdk-lib",
												"name": "IStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216641
											]
										}
									]
								}
							}
						},
						{
							"id": 216642,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 138,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216643,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216644,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216645,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 215737,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 216690,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 216646,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 139,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 216647,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 140,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 216617,
								"name": "KinesisStreamProps"
							}
						},
						{
							"id": 216648,
							"name": "streamArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 163,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216649,
									"name": "streamArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created Kinesis Stream"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216650,
							"name": "streamName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216651,
									"name": "streamName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created Kinesis Stream"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216685,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 275,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216686,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216687,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216688,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216689,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 216625,
														"name": "KinesisStreamConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 216652,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 184,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216653,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add consumers to a stream after creating it",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.addConsumers({\n  consumer1: \"src/function.handler\"\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216654,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216655,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216656,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 216657,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 216658,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 215665,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 216625,
																	"name": "KinesisStreamConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216659,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 206,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216660,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the consumers. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nstream.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216661,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216662,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 221,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216663,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific consumer. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216664,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216665,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216683,
							"name": "createStream",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 259,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216684,
									"name": "createStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216669,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 246,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216670,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216671,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216673,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216674,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216676,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 216677,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 216679,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 216680,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 216681,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 216682,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													216681,
																													216682
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 216678,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							216679,
																							216678
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216675,
																	"name": "streamName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216676,
																		216675
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216672,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "KinesisStream"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216673,
														216672
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216666,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 242,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216667,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the function for a specific consumer",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nstream.getFunction(\"consumer1\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216668,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 216691,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216692,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 216631,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216632,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216633,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216634
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216639,
								216642,
								216690,
								216646,
								216647
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216648,
								216650
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216685,
								216652,
								216659,
								216662,
								216683,
								216669,
								216666,
								216691,
								216631
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 131,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216625,
					"name": "KinesisStreamConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the function consumer for the stream"
					},
					"children": [
						{
							"id": 216627,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216628,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216629,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the interally created event source",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    fun: {\n      cdk: {\n        eventSource: {\n          enabled: false\n        }\n      }\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 119,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "KinesisEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "KinesisEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216629
											]
										}
									]
								}
							}
						},
						{
							"id": 216626,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The function definition",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    consumer1: {\n      function: {\n        handler: \"src/consumer1.handler\",\n        timeout: 30\n      }\n    }\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216627,
								216626
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 81,
							"character": 17
						}
					]
				},
				{
					"id": 216617,
					"name": "KinesisStreamProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216622,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216623,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216624,
											"name": "stream",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created Kinesis Stream",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  cdk: {\n    stream: {\n      streamName: \"my-stream\",\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IStream",
														"package": "aws-cdk-lib",
														"name": "IStream"
													},
													{
														"type": "reference",
														"qualifiedName": "StreamProps",
														"package": "aws-cdk-lib",
														"name": "StreamProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216624
											]
										}
									]
								}
							}
						},
						{
							"id": 216621,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Define the function consumers for this stream",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew KinesisStream(this, \"Stream\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: {\n      function: {\n        handler: \"src/consumer2.handler\",\n        timeout: 30\n      }\n    }\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 215665,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 216625,
												"name": "KinesisStreamConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 216618,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/KinesisStream.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216619,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216620,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew KinesisStream(props.stack, \"Stream\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/KinesisStream.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216620
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216622,
								216621,
								216618
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/KinesisStream.ts",
							"line": 19,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216630
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216625,
						216617
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/KinesisStream.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216139,
			"name": "NextjsSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216166,
					"name": "NextjsSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `NextjsSite` construct is a higher level CDK construct that makes it easy to create a Next.js app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.",
						"text": "It also allows you to [automatically set the environment variables](#configuring-environment-variables) in your Next.js app directly from the outputs in your SST app.\n\n## Next.js Features\nThe `NextjsSite` construct uses the [`@sls-next/lambda-at-edge`](https://github.com/serverless-nextjs/serverless-next.js/tree/master/packages/libs/lambda-at-edge) package from the [`serverless-next.js`](https://github.com/serverless-nextjs/serverless-next.js) project to build and package your Next.js app so that it can be deployed to Lambda@Edge and CloudFront.\n\n:::note\nTo use the `NextjsSite` construct, you have to install `@sls-next/lambda-at-edge` as a dependency in your `package.json`.\n\n```bash\nnpm install --save @sls-next/lambda-at-edge\n```\n:::\n\nMost of the Next.js 11 features are supported, including:\n\n- [Static Site Generation (SSG)](https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation): Static pages are served out through the CloudFront CDN.\n- [Server Side Rendering (SSR)](https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering): Server side rendering is performed at CloudFront edge locations using Lambda@Edge.\n- [API Routes](https://nextjs.org/docs/api-routes/introduction): API requests are served from CloudFront edge locations using Lambda@Edge.\n- [Incremental Static Regeneration (ISR)](https://nextjs.org/docs/basic-features/data-fetching#incremental-static-regeneration): Regeneration is performed using Lambda functions, and the generated pages will be served out through the CloudFront CDN.\n- [Image Optimization](https://nextjs.org/docs/basic-features/image-optimization): Images are resized and optimized at CloudFront edge locations using Lambda@Edge.\n\nNext.js 12 features like middleware and AVIF image are not yet supported. You can [read more about the features supported by `serverless-next.js`](https://github.com/serverless-nextjs/serverless-next.js#features). And you can [follow the progress on Next.js 12 support here](https://github.com/serverless-nextjs/serverless-next.js/issues/2016).\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Creating a Next.js app\n\nDeploys a Next.js app in the `path/to/site` directory.\n\n```js\nnew NextjsSite(this, \"NextSite\", {\n  path: \"path/to/site\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216173,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 465,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216174,
									"name": "new NextjsSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216175,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216176,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216177,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216140,
												"name": "NextjsSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216166,
										"name": "NextjsSite"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216193,
							"name": "apiFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 461,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 216188,
							"name": "assets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 456,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Asset",
									"package": "aws-cdk-lib",
									"name": "Asset"
								}
							}
						},
						{
							"id": 216189,
							"name": "awsCliLayer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 457,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AwsCliLayer",
								"package": "aws-cdk-lib",
								"name": "AwsCliLayer"
							}
						},
						{
							"id": 216187,
							"name": "buildOutDir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 455,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 216178,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 431,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216179,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216180,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 435,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 216184,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The AWS Certificate Manager certificate for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 451,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 216182,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 443,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 216183,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 447,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										},
										{
											"id": 216181,
											"name": "regenerationQueue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 439,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Queue",
												"package": "aws-cdk-lib",
												"name": "Queue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216180,
												216184,
												216182,
												216183,
												216181
											]
										}
									]
								}
							}
						},
						{
							"id": 216191,
							"name": "edgeLambdaRole",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 459,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Role",
								"package": "aws-cdk-lib",
								"name": "Role"
							}
						},
						{
							"id": 216194,
							"name": "imageFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 462,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 216186,
							"name": "isPlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 454,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 216192,
							"name": "mainFunctionVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 460,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVersion",
								"package": "aws-cdk-lib",
								"name": "IVersion"
							}
						},
						{
							"id": 216286,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 216185,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 453,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 216140,
								"name": "NextjsSiteProps"
							}
						},
						{
							"id": 216195,
							"name": "regenerationFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 463,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Function",
								"package": "aws-cdk-lib",
								"name": "Function"
							}
						},
						{
							"id": 216190,
							"name": "routesManifest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 458,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "RoutesManifest",
										"package": "@sls-next/core",
										"name": "RoutesManifest"
									}
								]
							}
						},
						{
							"id": 216168,
							"name": "imageCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for images."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 404,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 216169,
							"name": "lambdaCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for Lambda@Edge."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 419,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 216167,
							"name": "staticCachePolicyProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The default CloudFront cache policy properties for static pages."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 389,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "CachePolicyProps",
								"package": "aws-cdk-lib",
								"name": "CachePolicyProps"
							},
							"defaultValue": "..."
						},
						{
							"id": 216200,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 564,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216201,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216202,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 571,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216203,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216198,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 548,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216199,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 216206,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 585,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216207,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216204,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 578,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216205,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216196,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 541,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216197,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216208,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 602,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216209,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to allow the Next.js API routes and Server Side rendering `getServerSideProps` to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n### Attaching permissions\n\n```js {5}\nconst site = new NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n});\n\nsite.attachPermissions([\"sns\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216210,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216251,
							"name": "buildApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 937,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216252,
									"name": "buildApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216271,
							"name": "createCertificate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1396,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216272,
									"name": "createCertificate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										]
									}
								}
							]
						},
						{
							"id": 216257,
							"name": "createCloudFrontDistribution",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1094,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216258,
									"name": "createCloudFrontDistribution",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Distribution",
										"package": "aws-cdk-lib",
										"name": "Distribution"
									}
								}
							]
						},
						{
							"id": 216261,
							"name": "createCloudFrontImageCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1261,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216262,
									"name": "createCloudFrontImageCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 216265,
							"name": "createCloudFrontInvalidation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1277,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216266,
									"name": "createCloudFrontInvalidation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 216263,
							"name": "createCloudFrontLambdaCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1269,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216264,
									"name": "createCloudFrontLambdaCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 216259,
							"name": "createCloudFrontStaticCachePolicy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1253,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216260,
									"name": "createCloudFrontStaticCachePolicy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CachePolicy",
										"package": "aws-cdk-lib",
										"name": "CachePolicy"
									}
								}
							]
						},
						{
							"id": 216225,
							"name": "createEdgeFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 675,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216226,
									"name": "createEdgeFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216227,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216228,
											"name": "handlerPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 216235,
							"name": "createEdgeFunctionInNonUE1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 737,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216236,
									"name": "createEdgeFunctionInNonUE1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216237,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216238,
											"name": "assetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216239,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										},
										{
											"id": 216240,
											"name": "hasRealCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 216229,
							"name": "createEdgeFunctionInUE1",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 702,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216230,
									"name": "createEdgeFunctionInUE1",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216231,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216232,
											"name": "assetPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216233,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										},
										{
											"id": 216234,
											"name": "hasRealCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVersion",
										"package": "aws-cdk-lib",
										"name": "IVersion"
									}
								}
							]
						},
						{
							"id": 216241,
							"name": "createEdgeFunctionRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 794,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216242,
									"name": "createEdgeFunctionRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Role",
										"package": "aws-cdk-lib",
										"name": "Role"
									}
								}
							]
						},
						{
							"id": 216247,
							"name": "createLambdaCodeReplacer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 885,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216248,
									"name": "createLambdaCodeReplacer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216249,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216250,
											"name": "asset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 216245,
							"name": "createRegenerationFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 837,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216246,
									"name": "createRegenerationFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 216243,
							"name": "createRegenerationQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 823,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216244,
									"name": "createRegenerationQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Queue",
										"package": "aws-cdk-lib",
										"name": "Queue"
									}
								}
							]
						},
						{
							"id": 216273,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1433,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216274,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216253,
							"name": "createS3Bucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 993,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216254,
									"name": "createS3Bucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Bucket",
										"package": "aws-cdk-lib",
										"name": "Bucket"
									}
								}
							]
						},
						{
							"id": 216255,
							"name": "createS3Deployment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1004,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216256,
									"name": "createS3Deployment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 216211,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 606,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216212,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216213,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216215,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216216,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216218,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216217,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216218,
																		216217
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216214,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "NextSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216215,
														216214
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216282,
							"name": "getLambdaContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1515,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216283,
									"name": "getLambdaContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 216280,
							"name": "getS3ContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1487,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216281,
									"name": "getS3ContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 216269,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1360,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216270,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									}
								}
							]
						},
						{
							"id": 216275,
							"name": "pathPattern",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1474,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216276,
									"name": "pathPattern",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216277,
											"name": "pattern",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216278,
							"name": "readRoutesManifest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1481,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216279,
									"name": "readRoutesManifest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RoutesManifest",
										"package": "@sls-next/core",
										"name": "RoutesManifest"
									}
								}
							]
						},
						{
							"id": 216284,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1559,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216285,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216287,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216288,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 216267,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 1330,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216268,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216219,
							"name": "zipAppAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 616,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216220,
									"name": "zipAppAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216221,
											"name": "fileSizeLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 216222,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 216223,
							"name": "zipAppStubAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 667,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216224,
									"name": "zipAppStubAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 216170,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216171,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216172,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216173
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216193,
								216188,
								216189,
								216187,
								216178,
								216191,
								216194,
								216186,
								216192,
								216286,
								216185,
								216195,
								216190,
								216168,
								216169,
								216167
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216200,
								216202,
								216198,
								216206,
								216204,
								216196
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216208,
								216251,
								216271,
								216257,
								216261,
								216265,
								216263,
								216259,
								216225,
								216235,
								216229,
								216241,
								216247,
								216245,
								216243,
								216273,
								216253,
								216255,
								216211,
								216282,
								216280,
								216269,
								216275,
								216278,
								216284,
								216287,
								216267,
								216219,
								216223,
								216170
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/NextjsSite.ts",
							"line": 385,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216140,
					"name": "NextjsSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216141,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216142,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216143,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in bucket information to override the default settings this construct uses to create the CDK Bucket internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 51,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 216145,
											"name": "cachePolicies",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default CloudFront cache policies created internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n### Reusng CloudFront cache policies\n\nCloudFront has a limit of 20 cache policies per AWS account. This is a hard limit, and cannot be increased. Each `NextjsSite` creates 3 cache policies. If you plan to deploy multiple Next.js sites, you can have the constructs share the same cache policies by reusing them across sites.\n\n```js\nimport * as cloudfront from \"aws-cdk-lib/aws-cloudfront\";\n\nconst cachePolicies = {\n  staticCachePolicy: new cloudfront.CachePolicy(this, \"StaticCache\", NextjsSite.staticCachePolicyProps),\n  imageCachePolicy: new cloudfront.CachePolicy(this, \"ImageCache\", NextjsSite.imageCachePolicyProps),\n  lambdaCachePolicy: new cloudfront.CachePolicy(this, \"LambdaCache\", NextjsSite.lambdaCachePolicyProps),\n};\n\nnew NextjsSite(this, \"Site1\", {\n  path: \"path/to/site1\",\n  cfCachePolicies: cachePolicies,\n});\n\nnew NextjsSite(this, \"Site2\", {\n  path: \"path/to/site2\",\n  cfCachePolicies: cachePolicies,\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 83,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216146,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216148,
															"name": "imageCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 85,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														},
														{
															"id": 216149,
															"name": "lambdaCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 86,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														},
														{
															"id": 216147,
															"name": "staticCachePolicy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 84,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"qualifiedName": "ICachePolicy",
																"package": "aws-cdk-lib",
																"name": "ICachePolicy"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216148,
																216149,
																216147
															]
														}
													]
												}
											}
										},
										{
											"id": 216144,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a value to override the default settings this construct uses to create the CDK `Distribution` internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 55,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										},
										{
											"id": 216150,
											"name": "regenerationQueue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses to create the CDK `Queue` internally."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "QueueProps",
												"package": "aws-cdk-lib",
												"name": "QueueProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216143,
												216145,
												216144,
												216150
											]
										}
									]
								}
							}
						},
						{
							"id": 216152,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n### Configuring custom domains\n\nYou can configure the website with a custom domain hosted either on [Route 53](https://aws.amazon.com/route53/) or [externally](#configuring-externally-hosted-domain).\n\n#### Using the basic config (Route 53 domains)\n\n```js {3}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: \"domain.com\",\n});\n```\n\n#### Redirect www to non-www (Route 53 domains)\n\n```js {3-6}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    domainAlias: \"www.domain.com\",\n  },\n});\n```\n\n#### Configuring domains across stages (Route 53 domains)\n\n```js {7-10}\nexport default class MyStack extends Stack {\n  constructor(scope, id, props) {\n    super(scope, id, props);\n\n    new NextjsSite(this, \"Site\", {\n      path: \"path/to/site\",\n      customDomain: {\n        domainName:\n          scope.stage === \"prod\" ? \"domain.com\" : `${scope.stage}.domain.com`,\n        domainAlias: scope.stage === \"prod\" ? \"www.domain.com\" : undefined,\n      },\n    });\n  }\n}\n```\n\n#### Using the full config (Route 53 domains)\n\n```js {3-7}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    domainAlias: \"www.domain.com\",\n    hostedZone: \"domain.com\",\n  },\n});\n```\n\n#### Importing an existing certificate (Route 53 domains)\n\n```js {7}\nimport { Certificate } from \"aws-cdk-lib/aws-certificatemanager\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    certificate: Certificate.fromCertificateArn(this, \"MyCert\", certArn),\n  },\n});\n```\n\nNote that, the certificate needs be created in the `us-east-1`(N. Virginia) region as required by AWS CloudFront.\n\n#### Specifying a hosted zone (Route 53 domains)\n\nIf you have multiple hosted zones for a given domain, you can choose the one you want to use to configure the domain.\n\n```js {7-10}\nimport { HostedZone } from \"aws-cdk-lib/aws-route53\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    domainName: \"domain.com\",\n    hostedZone: HostedZone.fromHostedZoneAttributes(this, \"MyZone\", {\n      hostedZoneId,\n      zoneName,\n    }),\n  },\n});\n```\n\n#### Configuring externally hosted domain\n\n```js {5-8}\nimport { Certificate } from \"aws-cdk-lib/aws-certificatemanager\";\n\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  customDomain: {\n    isExternalDomain: true,\n    domainName: \"domain.com\",\n    certificate: Certificate.fromCertificateArn(this, \"MyCert\", certArn),\n  },\n});\n```\n\nNote that the certificate needs be created in the `us-east-1`(N. Virginia) region as required by AWS CloudFront, and validated. After the `Distribution` has been created, create a CNAME DNS record for your domain name with the `Distribution's` URL as the value. Here are more details on [configuring SSL Certificate on externally hosted domains](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html).\n\nAlso note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "BaseSiteDomainProps"
									}
								]
							}
						},
						{
							"id": 216157,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 306,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216158,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216159,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda Functions created by this construct.",
												"tags": [
													{
														"tag": "example",
														"text": "\n### Configuring the Lambda Functions\n\nConfigure the internally created CDK [`Lambda Function`](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_lambda.Function.html) instance.\n\n```js {4-8}\nnew NextjsSite(this, \"Site\", {\n  path: \"path/to/site\",\n  defaults: {\n    function: {\n      timeout: 20,\n      memorySize: 2048,\n      permissions: [\"sns\"],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/NextjsSite.ts",
													"line": 328,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216160,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216162,
															"name": "memorySize",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 330,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 216163,
															"name": "permissions",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 331,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"name": "Permissions"
															}
														},
														{
															"id": 216161,
															"name": "timeout",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/NextjsSite.ts",
																	"line": 329,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216162,
																216163,
																216161
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216159
											]
										}
									]
								}
							}
						},
						{
							"id": 216164,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 337,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 216153,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name.",
								"tags": [
									{
										"tag": "example",
										"text": "\n### Configuring environment variables\n\nThe `NextjsSite` construct allows you to set the environment variables in your Next.js app based on outputs from other constructs in your SST app. So you don't have to hard code the config from your backend. Let's look at how.\n\nNext.js supports [setting build time environment variables](https://nextjs.org/docs/basic-features/environment-variables). In your JS files this looks like:\n\n\n```js title=\"pages/index.js\"\nconsole.log(process.env.API_URL);\nconsole.log(process.env.USER_POOL_CLIENT);\n```\n\nYou can pass these in directly from the construct.\n\n```js {3-6}\nnew NextjsSite(this, \"NextSite\", {\n  path: \"path/to/site\",\n  environment: {\n    API_URL: api.url,\n    USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n\nWhere `api.url` or `auth.cognitoUserPoolClient.userPoolClientId` are coming from other constructs in your SST app.\n\n#### While deploying\n\nOn `sst deploy`, the environment variables will first be replaced by placeholder values, `{{ API_URL }}` and `{{ USER_POOL_CLIENT }}`, when building the Next.js app. And after the referenced resources have been created, the Api and User Pool in this case, the placeholders in the HTML and JS files will then be replaced with the actual values.\n\n:::caution\nSince the actual values are determined at deploy time, you should not rely on the values at build time. For example, you cannot fetch from `process.env.API_URL` inside `getStaticProps()` at build time.\n\nThere are a couple of work arounds:\n- Hardcode the API URL\n- Read the API URL dynamically at build time (ie. from an SSM value)\n- Use [fallback pages](https://nextjs.org/docs/basic-features/data-fetching#fallback-pages) to generate the page on the fly\n:::\n\n#### While developing\n\nTo use these values while developing, run `sst start` to start the [Live Lambda Development](../live-lambda-development.md) environment.\n\n``` bash\nnpx sst start\n```\n\nThen in your Next.js app to reference these variables, add the [`sst-env`](../packages/static-site-env.md) package.\n\n```bash\nnpm install --save-dev @serverless-stack/static-site-env\n```\n\nAnd tweak the Next.js `dev` script to:\n\n```json title=\"package.json\" {2}\n\"scripts\": {\n  \"dev\": \"sst-env -- next dev\",\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n},\n```\n\nNow you can start your Next.js app as usual and it'll have the environment variables from your SST app.\n\n``` bash\nnpm run dev\n```\n\nThere are a couple of things happening behind the scenes here:\n\n1. The `sst start` command generates a file with the values specified by the `NextjsSite` construct's `environment` prop.\n2. The `sst-env` CLI will traverse up the directories to look for the root of your SST app.\n3. It'll then find the file that's generated in step 1.\n4. It'll load these as environment variables before running the start command.\n\n:::note\n`sst-env` only works if the Next.js app is located inside the SST app or inside one of its subdirectories. For example:\n\n```\n/\n  sst.json\n  nextjs-app/\n```\n:::\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 305,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216154,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216155,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216156,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 216151,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 96,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216165,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/NextjsSite.ts",
									"line": 341,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216141,
								216152,
								216157,
								216164,
								216153,
								216151,
								216165
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/NextjsSite.ts",
							"line": 46,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216166
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216140
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/NextjsSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215525,
			"name": "Queue",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215536,
					"name": "Queue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Queue` construct is a higher level CDK construct that makes it easy to create a [SQS Queues](https://aws.amazon.com/sqs/). You can create a queue by specifying a consumer function. And then publish to the queue from any part of your serverless app.",
						"text": "This construct makes it easier to define a queue and a consumer. It also internally connects the consumer and queue together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Queue } from \"@serverless-stack/resources\";\n\nnew Queue(this, \"Queue\", {\n  consumer: \"src/queueConsumer.main\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215540,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215541,
									"name": "new Queue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215542,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215543,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215544,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215526,
												"name": "QueueProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215536,
										"name": "Queue"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215545,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 109,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215546,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215547,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Queue` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IQueue",
												"package": "aws-cdk-lib",
												"name": "IQueue"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215547
											]
										}
									]
								}
							}
						},
						{
							"id": 215548,
							"name": "consumerFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internally created consumer `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 215572,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215549,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 119,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 215550,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 120,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 215526,
								"name": "QueueProps"
							}
						},
						{
							"id": 215551,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 145,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215552,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a consumer after creating the queue. Note only one consumer can be added to a queue",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {3}\nconst queue = new Queue(props.stack, \"Queue\");\nqueue.addConsumer(props.stack, \"src/function.handler\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215553,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215554,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215531,
														"name": "QueueConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215555,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 194,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215556,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches additional permissions to the consumer function",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst queue = new Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n});\nqueue.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215557,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215570,
							"name": "createQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 213,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215571,
									"name": "createQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215558,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 202,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215559,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215560,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215562,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215563,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215566,
																	"name": "consumer",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 215567,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 215568,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 215569,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								215568,
																								215569
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215564,
																	"name": "name",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215565,
																	"name": "url",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215566,
																		215564,
																		215565
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215561,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Queue"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215562,
														215561
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215573,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215574,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215537,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215538,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215539,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215540
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215545,
								215548,
								215572,
								215549,
								215550
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215551,
								215555,
								215570,
								215558,
								215573,
								215537
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 108,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215531,
					"name": "QueueConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define the consumer for the queue and invocation details"
					},
					"children": [
						{
							"id": 215533,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215534,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215535,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the consumer.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: {\n    function: \"test/lambda.handler\",\n    cdk: {\n      eventSource: {\n        batchSize: 5,\n      },\n    },\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 84,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "SqsEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215535
											]
										}
									]
								}
							}
						},
						{
							"id": 215532,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: {\n    function: {\n      handler: \"src/function.handler\",\n      timeout: 10,\n    },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215533,
								215532
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 49,
							"character": 17
						}
					]
				},
				{
					"id": 215526,
					"name": "QueueProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215527,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215528,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215529,
											"name": "queue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the queue.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Queue(this, \"Queue\", {\n  consumer: \"src/function.handler\",\n  cdk: {\n    queue: {\n      fifo: true,\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Queue.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IQueue",
														"package": "aws-cdk-lib",
														"name": "IQueue"
													},
													{
														"type": "reference",
														"qualifiedName": "QueueProps",
														"package": "aws-cdk-lib",
														"name": "QueueProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215529
											]
										}
									]
								}
							}
						},
						{
							"id": 215530,
							"name": "consumer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to create the consumer for the queue.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Queue(props.stack, \"Queue\", {\n  consumer: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Queue.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 215665,
										"name": "FunctionInlineDefinition"
									},
									{
										"type": "reference",
										"id": 215531,
										"name": "QueueConsumerProps"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215527,
								215530
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Queue.ts",
							"line": 14,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215536
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215531,
						215526
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Queue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215038,
			"name": "RDS",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215065,
					"name": "RDS",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `RDS` construct is a higher level CDK construct that makes it easy to create an [RDS Serverless Cluster](https://aws.amazon.com/rds/). It uses the following defaults:",
						"text": "- Defaults to using the [Serverless v1 On-Demand autoscaling configuration](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) to make it serverless.\n- Provides a built-in interface for running schema migrations using [Kysely](https://koskimas.github.io/kysely/#migrations).\n- Enables [Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) to allow your Lambda functions to access the database cluster without needing to deploy the functions in a VPC (virtual private cloud).\n- Enables [Backup Snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/BackupRestoreAurora.html) to make sure that you don't lose your data.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { RDS } from \"@serverless-stack/resources\";\n\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"my_database\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 215069,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 149,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215070,
									"name": "new RDS",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215071,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215072,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215073,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215039,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215065,
										"name": "RDS"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215074,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 136,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215075,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215076,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 140,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ServerlessCluster",
												"package": "aws-cdk-lib",
												"name": "ServerlessCluster"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215076
											]
										}
									]
								}
							}
						},
						{
							"id": 215077,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 142,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215079,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 147,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215078,
							"name": "migratorFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 146,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 215139,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215080,
							"name": "clusterArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 199,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215081,
									"name": "clusterArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `ServerlessCluster` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215084,
							"name": "clusterEndpoint",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 213,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215085,
									"name": "clusterEndpoint",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Endpoint",
										"package": "aws-cdk-lib",
										"name": "Endpoint"
									}
								}
							]
						},
						{
							"id": 215082,
							"name": "clusterIdentifier",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 206,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215083,
									"name": "clusterIdentifier",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215086,
							"name": "secretArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 220,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215087,
									"name": "secretArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK ServerlessCluster instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215133,
							"name": "createMigrationCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 400,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215134,
									"name": "createMigrationCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215135,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215128,
							"name": "createMigrationsFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 347,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215129,
									"name": "createMigrationsFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215130,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215131,
											"name": "defaultDatabaseName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215132,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 215136,
							"name": "generateMigrationsHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 438,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215137,
									"name": "generateMigrationsHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215138,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215088,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 224,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215089,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215090,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215092,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215093,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215096,
																	"name": "clusterArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215097,
																	"name": "clusterIdentifier",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215098,
																	"name": "defaultDatabaseName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215094,
																	"name": "engine",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215099,
																	"name": "migrator",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 215100,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 215101,
																							"name": "node",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "fn.node.addr"
																						},
																						{
																							"id": 215102,
																							"name": "stack",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"kind": 1024,
																							"children": [
																								215101,
																								215102
																							]
																						}
																					]
																				}
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215095,
																	"name": "secretArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215096,
																		215097,
																		215098,
																		215094,
																		215099,
																		215095
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215091,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "RDS"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215092,
														215091
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215112,
							"name": "getEngine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 290,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215113,
									"name": "getEngine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215114,
											"name": "engine",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215051,
												"name": "RDSEngineType"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IClusterEngine",
										"package": "aws-cdk-lib",
										"name": "IClusterEngine"
									}
								}
							]
						},
						{
							"id": 215115,
							"name": "getScaling",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 310,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215116,
									"name": "getScaling",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215117,
											"name": "scaling",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 215118,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 215119,
															"name": "autoPause",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The time before the cluster is paused.",
																"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
																"tags": [
																	{
																		"tag": "default",
																		"text": "true\n"
																	},
																	{
																		"tag": "example",
																		"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 67,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 215121,
															"name": "maxCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The maximum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_16\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 81,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														},
														{
															"id": 215120,
															"name": "minCapacity",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "The minimum capacity for the cluster.",
																"tags": [
																	{
																		"tag": "default",
																		"text": "\"ACU_2\"\n"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "packages/resources/src/RDS.ts",
																	"line": 74,
																	"character": 4
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "ACU_1"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_2"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_4"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_8"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_16"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_32"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_64"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_128"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_192"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_256"
																	},
																	{
																		"type": "literal",
																		"value": "ACU_384"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																215119,
																215121,
																215120
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "ServerlessScalingOptions",
										"package": "aws-cdk-lib",
										"name": "ServerlessScalingOptions"
									}
								}
							]
						},
						{
							"id": 215122,
							"name": "getVpc",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 325,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215123,
									"name": "getVpc",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215124,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215052,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "IVpc",
										"package": "aws-cdk-lib",
										"name": "IVpc"
									}
								}
							]
						},
						{
							"id": 215125,
							"name": "getVpcSubnets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 335,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215126,
									"name": "getVpcSubnets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215127,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215052,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "SubnetSelection",
												"package": "aws-cdk-lib",
												"name": "SubnetSelection"
											}
										]
									}
								}
							]
						},
						{
							"id": 215140,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215141,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215109,
							"name": "validateMigrationsFileExists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 283,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215110,
									"name": "validateMigrationsFileExists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215111,
											"name": "migrations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215103,
							"name": "validateRDSServerlessClusterProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 239,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215104,
									"name": "validateRDSServerlessClusterProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215105,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215052,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215106,
							"name": "validateRequiredProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 271,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215107,
									"name": "validateRequiredProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215108,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215039,
												"name": "RDSProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215066,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215067,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215068,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215069
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215074,
								215077,
								215079,
								215078,
								215139
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215080,
								215084,
								215082,
								215086
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215133,
								215128,
								215136,
								215088,
								215112,
								215115,
								215122,
								215125,
								215140,
								215109,
								215103,
								215106,
								215066
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 135,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215052,
					"name": "RDSCdkServerlessClusterProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215057,
							"name": "backupRetention",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The number of days during which automatic DB snapshots are retained.\nAutomatic backup retention cannot be disabled on serverless clusters.\nMust be a value from 1 day to 35 days.",
								"tags": [
									{
										"tag": "default",
										"text": "Duration.days(1)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 64,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Duration",
								"package": "aws-cdk-lib",
								"name": "Duration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.backupRetention"
							}
						},
						{
							"id": 215056,
							"name": "clusterIdentifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "An optional identifier for the cluster",
								"tags": [
									{
										"tag": "default",
										"text": "- A name is automatically generated.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.clusterIdentifier"
							}
						},
						{
							"id": 215054,
							"name": "credentials",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Credentials for the administrative user",
								"tags": [
									{
										"tag": "default",
										"text": "- A username of 'admin' and SecretsManager-generated password\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Credentials",
								"package": "aws-cdk-lib",
								"name": "Credentials"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.credentials"
							}
						},
						{
							"id": 215058,
							"name": "deletionProtection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Indicates whether the DB cluster should have deletion protection enabled.",
								"tags": [
									{
										"tag": "default",
										"text": "- true if removalPolicy is RETAIN, false otherwise\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 76,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.deletionProtection"
							}
						},
						{
							"id": 215059,
							"name": "enableDataApi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether to enable the Data API.",
								"tags": [
									{
										"tag": "see",
										"text": "https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\n"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 84,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.enableDataApi"
							}
						},
						{
							"id": 215063,
							"name": "parameterGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Additional parameters to pass to the database engine",
								"tags": [
									{
										"tag": "default",
										"text": "- no parameter group.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IParameterGroup",
								"package": "aws-cdk-lib",
								"name": "IParameterGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.parameterGroup"
							}
						},
						{
							"id": 215061,
							"name": "removalPolicy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The removal policy to apply when the cluster and its instances are removed\nfrom the stack or replaced during an update.",
								"tags": [
									{
										"tag": "default",
										"text": "- RemovalPolicy.SNAPSHOT (remove the cluster and instances, but retain a snapshot of the data)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 112,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RemovalPolicy",
								"package": "aws-cdk-lib",
								"name": "RemovalPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.removalPolicy"
							}
						},
						{
							"id": 215062,
							"name": "securityGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Security group.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new security group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no VPC security groups will be associated with the DB cluster.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 119,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "ISecurityGroup",
									"package": "aws-cdk-lib",
									"name": "ISecurityGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.securityGroups"
							}
						},
						{
							"id": 215055,
							"name": "storageEncryptionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The KMS key for storage encryption.",
								"tags": [
									{
										"tag": "default",
										"text": "- the default master key will be used for storage encryption\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 306,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IKey",
								"package": "aws-cdk-lib",
								"name": "IKey"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.storageEncryptionKey"
							}
						},
						{
							"id": 215064,
							"name": "subnetGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Existing subnet group for the cluster.",
								"tags": [
									{
										"tag": "default",
										"text": "- a new subnet group is created if `vpc` was provided.\n  If the `vpc` property was not provided, no subnet group will be associated with the DB cluster\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 132,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "ISubnetGroup",
								"package": "aws-cdk-lib",
								"name": "ISubnetGroup"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.subnetGroup"
							}
						},
						{
							"id": 215053,
							"name": "vpc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "IVpc",
								"package": "aws-cdk-lib",
								"name": "IVpc"
							}
						},
						{
							"id": 215060,
							"name": "vpcSubnets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Where to place the instances within the VPC.\nIf provided, the `vpc` property must also be specified.",
								"tags": [
									{
										"tag": "default",
										"text": "- the VPC default strategy if not specified.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/aws-cdk-lib/aws-rds/lib/serverless-cluster.d.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "SubnetSelection",
								"package": "aws-cdk-lib",
								"name": "SubnetSelection"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.vpcSubnets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215057,
								215056,
								215054,
								215058,
								215059,
								215063,
								215061,
								215062,
								215055,
								215064,
								215053,
								215060
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 102,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "ServerlessClusterProps",
									"package": "aws-cdk-lib",
									"name": "rds.ServerlessClusterProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "vpc"
										},
										{
											"type": "literal",
											"value": "engine"
										},
										{
											"type": "literal",
											"value": "defaultDatabaseName"
										},
										{
											"type": "literal",
											"value": "scaling"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 215039,
					"name": "RDSProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215040,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215041,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215042,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internallly created RDS cluster.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  cdk: {\n    cluster: {\n      clusterIdentifier: \"my-cluster\",\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 34,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215052,
												"name": "RDSCdkServerlessClusterProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215042
											]
										}
									]
								}
							}
						},
						{
							"id": 215044,
							"name": "defaultDatabaseName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Name of a database which is automatically created inside the cluster."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215043,
							"name": "engine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Database engine of the cluster. Cannot be changed once set."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215051,
								"name": "RDSEngineType"
							}
						},
						{
							"id": 215050,
							"name": "migrations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Path to the directory that contains the migration scripts. The `RDS` construct uses [Kysely](https://koskimas.github.io/kysely/) to run and manage schema migrations. The `migrations` prop should point to the folder where your migration files are.",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew RDS(this, \"Database\", {\n  engine: \"postgresql10.14\",\n  defaultDatabaseName: \"acme\",\n  migrations: \"path/to/migration/scripts\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215045,
							"name": "scaling",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/RDS.ts",
									"line": 47,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215046,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215047,
											"name": "autoPause",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The time before the cluster is paused.",
												"text": "Pass in true to pause after 5 minutes of inactive. And pass in false to\ndisable pausing.\n\nOr pass in the number of minutes to wait before the cluster is paused.\n",
												"tags": [
													{
														"tag": "default",
														"text": "true\n"
													},
													{
														"tag": "example",
														"text": "\n```js\nnew RDS(this, \"Database\", {\n  scaling: {\n    autoPause: props.app.local,\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 67,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 215049,
											"name": "maxCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The maximum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_16\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 81,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										},
										{
											"id": 215048,
											"name": "minCapacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The minimum capacity for the cluster.",
												"tags": [
													{
														"tag": "default",
														"text": "\"ACU_2\"\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/RDS.ts",
													"line": 74,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ACU_1"
													},
													{
														"type": "literal",
														"value": "ACU_2"
													},
													{
														"type": "literal",
														"value": "ACU_4"
													},
													{
														"type": "literal",
														"value": "ACU_8"
													},
													{
														"type": "literal",
														"value": "ACU_16"
													},
													{
														"type": "literal",
														"value": "ACU_32"
													},
													{
														"type": "literal",
														"value": "ACU_64"
													},
													{
														"type": "literal",
														"value": "ACU_128"
													},
													{
														"type": "literal",
														"value": "ACU_192"
													},
													{
														"type": "literal",
														"value": "ACU_256"
													},
													{
														"type": "literal",
														"value": "ACU_384"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215047,
												215049,
												215048
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215040,
								215044,
								215043,
								215050,
								215045
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 215051,
					"name": "RDSEngineType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/resources/src/RDS.ts",
							"line": 100,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "mysql5.6"
							},
							{
								"type": "literal",
								"value": "mysql5.7"
							},
							{
								"type": "literal",
								"value": "postgresql10.14"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215065
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215052,
						215039
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						215051
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/RDS.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216807,
			"name": "ReactStaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216808,
					"name": "ReactStaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ReactStaticSite` construct is designed to make it easy to work with React apps created using [Create React App](https://create-react-app.dev/) or similar projects.",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal Config\n```js\nnew ReactStaticSite(this, \"ReactSite\", {\n  path: \"path/to/src\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216812,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ReactStaticSite.ts",
									"line": 24,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216813,
									"name": "new ReactStaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216814,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216815,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216816,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216852,
												"name": "ReactStaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216808,
										"name": "ReactStaticSite"
									},
									"overwrites": {
										"type": "reference",
										"id": 216072,
										"name": "StaticSite.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 216071,
								"name": "StaticSite.constructor"
							}
						},
						{
							"id": 216817,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216818,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216819,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 216822,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 216820,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 216821,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216819,
												216822,
												216820,
												216821
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216076,
								"name": "StaticSite.cdk"
							}
						},
						{
							"id": 216849,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216136,
								"name": "StaticSite.node"
							}
						},
						{
							"id": 216827,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216828,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216091,
								"name": "StaticSite.bucketArn"
							}
						},
						{
							"id": 216829,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216830,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216093,
								"name": "StaticSite.bucketName"
							}
						},
						{
							"id": 216825,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216826,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216089,
								"name": "StaticSite.customDomainUrl"
							}
						},
						{
							"id": 216833,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216834,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionDomain"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216097,
								"name": "StaticSite.distributionDomain"
							}
						},
						{
							"id": 216831,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216832,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216095,
								"name": "StaticSite.distributionId"
							}
						},
						{
							"id": 216823,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216824,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216087,
								"name": "StaticSite.url"
							}
						},
						{
							"id": 216847,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216848,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216131,
										"name": "StaticSite.createRoute53Records"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216130,
								"name": "StaticSite.createRoute53Records"
							}
						},
						{
							"id": 216835,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216836,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216837,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216839,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216840,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216842,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216841,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216842,
																		216841
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216838,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216839,
														216838
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216100,
										"name": "StaticSite.getConstructMetadata"
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216099,
								"name": "StaticSite.getConstructMetadata"
							},
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216845,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216846,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216127,
										"name": "StaticSite.lookupHostedZone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216126,
								"name": "StaticSite.lookupHostedZone"
							}
						},
						{
							"id": 216850,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216851,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216138,
										"name": "StaticSite.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216137,
								"name": "StaticSite.toString"
							}
						},
						{
							"id": 216843,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216844,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216125,
										"name": "StaticSite.validateCustomDomainSettings"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216124,
								"name": "StaticSite.validateCustomDomainSettings"
							}
						},
						{
							"id": 216809,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216810,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216811,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216069,
										"name": "StaticSite.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216068,
								"name": "StaticSite.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216812
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216817,
								216849
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216827,
								216829,
								216825,
								216833,
								216831,
								216823
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216847,
								216835,
								216845,
								216850,
								216843,
								216809
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ReactStaticSite.ts",
							"line": 23,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 216067,
							"name": "StaticSite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216852,
					"name": "ReactStaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216860,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216044,
								"name": "StaticSiteProps.buildCommand"
							}
						},
						{
							"id": 216861,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216045,
								"name": "StaticSiteProps.buildOutput"
							}
						},
						{
							"id": 216853,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216854,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216855,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 216856,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216855,
												216856
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216037,
								"name": "StaticSiteProps.cdk"
							}
						},
						{
							"id": 216864,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 216053,
										"name": "StaticSiteDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216048,
								"name": "StaticSiteProps.customDomain"
							}
						},
						{
							"id": 216867,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216051,
								"name": "StaticSiteProps.disablePlaceholder"
							}
						},
						{
							"id": 216865,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216049,
								"name": "StaticSiteProps.environment"
							}
						},
						{
							"id": 216859,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216043,
								"name": "StaticSiteProps.errorPage"
							}
						},
						{
							"id": 216862,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 216063,
									"name": "StaticSiteFileOptions"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216046,
								"name": "StaticSiteProps.fileOptions"
							}
						},
						{
							"id": 216858,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216042,
								"name": "StaticSiteProps.indexPage"
							}
						},
						{
							"id": 216857,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216041,
								"name": "StaticSiteProps.path"
							}
						},
						{
							"id": 216866,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216050,
								"name": "StaticSiteProps.purgeFiles"
							}
						},
						{
							"id": 216863,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216047,
								"name": "StaticSiteProps.replaceValues"
							}
						},
						{
							"id": 216868,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216052,
								"name": "StaticSiteProps.waitForInvalidation"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216860,
								216861,
								216853,
								216864,
								216867,
								216865,
								216859,
								216862,
								216858,
								216857,
								216866,
								216863,
								216868
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ReactStaticSite.ts",
							"line": 64,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 216036,
							"name": "StaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216808
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216852
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ReactStaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215485,
			"name": "Script",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215494,
					"name": "Script",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Script` construct is a higher level CDK construct that makes it easy to run a script in a Lambda function during the deployment process. It provides a simple way to build and bundle the script function; and allows you to pass parameter values based on outputs from other constructs in your SST app. So you don't have to hard code values in your script. You can configure a script to run before or after any of the stacks or resources are deployed in your app.",
						"text": "Since the script is running inside a Lambda function, it can interact with resources like the RDS databases, that are inside a VPC; and make AWS API calls to services that the IAM credentials in your local environment or CI might not have permissions to.\n\nA few things to note:\n- It does not run locally. It runs inside a Lambda function.\n- It gets run on every deployment.\n- It can run for a maximum of 15 minutes.\n- [Live Lambda Dev](../live-lambda-development.md) is not enabled for these functions.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Minimal config\n\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/function.create\",\n  onUpdate: \"src/function.update\",\n  onDelete: \"src/function.delete\",\n});\n```\n\n"
							}
						]
					},
					"children": [
						{
							"id": 215498,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 122,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215499,
									"name": "new Script",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215500,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215501,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215502,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215486,
												"name": "ScriptProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215494,
										"name": "Script"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215503,
							"name": "createFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onCreate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 215505,
							"name": "deleteFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onDelete `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 119,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 215522,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215506,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 120,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"id": 215486,
								"name": "ScriptProps"
							}
						},
						{
							"id": 215504,
							"name": "updateFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The internally created onUpdate `Function` instance."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 215507,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 153,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215508,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grants additional permissions to the script",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nscript.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215509,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215520,
							"name": "checkDeprecatedFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 254,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215521,
									"name": "checkDeprecatedFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215516,
							"name": "createCustomResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 231,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215517,
									"name": "createCustomResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215518,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "App"
											}
										},
										{
											"id": 215519,
											"name": "crFunction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Function",
												"package": "aws-cdk-lib",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215514,
							"name": "createCustomResourceFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 216,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215515,
									"name": "createCustomResourceFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "aws-cdk-lib",
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 215510,
							"name": "createUserFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 159,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 215511,
									"name": "createUserFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215512,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215513,
											"name": "fnDef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215666,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 215523,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215524,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215495,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215496,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215497,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215498
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215503,
								215505,
								215522,
								215506,
								215504
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215507,
								215520,
								215516,
								215514,
								215510,
								215523,
								215495
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 107,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					]
				},
				{
					"id": 215486,
					"name": "ScriptProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215488,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215489,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215490,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Script.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215490
											]
										}
									]
								}
							}
						},
						{
							"id": 215491,
							"name": "onCreate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs when the Script is created.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onCreate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215493,
							"name": "onDelete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Create the function that runs when the Script is deleted from the stack.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onDelete: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215492,
							"name": "onUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Creates the function that runs on every deploy after the Script is created",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Script(props.stack, \"Api\", {\n  onUpdate: \"src/function.handler\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						},
						{
							"id": 215487,
							"name": "params",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object of input parameters to be passed to the script. Made available in the `event` object of the function.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nimport { Script } from \"@serverless-stack/resources\";\n\nnew Script(this, \"Script\", {\n  onCreate: \"src/script.create\",\n  params: {\n    hello: \"world\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Script.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215488,
								215491,
								215493,
								215492,
								215487
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Script.ts",
							"line": 9,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215494
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215486
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Script.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216035,
			"name": "StaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216067,
					"name": "StaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `StaticSite` construct is a higher level CDK construct that makes it easy to create a static website. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL. In addition:",
						"text": "- Visitors to the `http://` url will be redirected to the `https://` URL.\n- If a [domain alias](#domainalias) is configured, visitors to the alias domain will be redirected to the main one. So if `www.example.com` is the domain alias for `example.com`, visitors to `www.example.com` will be redirected to `example.com`.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\nThe `StaticSite` construct is designed to make it easy to get started with, while allowing for a way to fully configure it as well. Let's look at how, through a couple of examples.\n\n### Creating a plain HTML site\n\nDeploys a plain HTML website in the `path/to/src` directory.\n\n```js\nimport { StaticSite } from \"@serverless-stack/resources\";\n\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n\n### Creating a React site\n\n```js\nimport { StaticSiteErrorOptions } from \"@serverless-stack/resources\";\n\nnew StaticSite(this, \"ReactSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"build\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\nIf you are using [Create React App](https://create-react-app.dev), we created the [`ReactStaticSite`](ReactStaticSite.md) construct to make it even easier to deploy React apps.\n\n### Creating a Vue.js site\n\n```js\nnew StaticSite(this, \"VueJSSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\n### Creating a Gatsby site\n\n```js\nnew StaticSite(this, \"GatsbySite\", {\n  path: \"path/to/src\",\n  errorPage: \"404.html\",\n  buildOutput: \"public\",\n  buildCommand: \"npm run build\",\n});\n```\n\n### Creating a Jekyll site\n\n```js\nnew StaticSite(this, \"JekyllSite\", {\n  path: \"path/to/src\",\n  errorPage: \"404.html\",\n  buildOutput: \"_site\",\n  buildCommand: \"bundle exec jekyll build\",\n});\n```\n\n### Creating an Angular site\n\n```js\nnew StaticSite(this, \"AngularSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"ng build --output-path dist\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n});\n```\n\n### Creating a Svelte site\n\n```js\nnew StaticSite(this, \"SvelteSite\", {\n  path: \"path/to/src\",\n  buildOutput: \"dist\",\n  buildCommand: \"npm run build\",\n  errorPage: StaticSiteErrorOptions.REDIRECT_TO_INDEX_PAGE,\n  environment: {\n    // Pass in the API endpoint to our app\n    VITE_APP_API_URL: api.url,\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216071,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 393,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216072,
									"name": "new StaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216073,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216074,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216075,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216036,
												"name": "StaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216067,
										"name": "StaticSite"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216084,
							"name": "assets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 389,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Asset",
									"package": "aws-cdk-lib",
									"name": "Asset"
								}
							}
						},
						{
							"id": 216086,
							"name": "awsCliLayer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 391,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AwsCliLayer",
								"package": "aws-cdk-lib",
								"name": "AwsCliLayer"
							}
						},
						{
							"id": 216076,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216077,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216078,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 216081,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 216079,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 216080,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216078,
												216081,
												216079,
												216080
											]
										}
									]
								}
							}
						},
						{
							"id": 216085,
							"name": "filenamesAsset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 390,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Asset",
								"package": "aws-cdk-lib",
								"name": "Asset"
							}
						},
						{
							"id": 216083,
							"name": "isPlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 388,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 216136,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 216082,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 387,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 216036,
								"name": "StaticSiteProps"
							}
						},
						{
							"id": 216091,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216092,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216093,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216094,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216089,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216090,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 216097,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216098,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216095,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216096,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216087,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216088,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216107,
							"name": "buildApp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 503,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216108,
									"name": "buildApp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216109,
							"name": "bundleAssets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 539,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216110,
									"name": "bundleAssets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216111,
											"name": "fileSizeLimit",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 216112,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Asset",
											"package": "aws-cdk-lib",
											"name": "Asset"
										}
									}
								}
							]
						},
						{
							"id": 216113,
							"name": "bundleFilenamesAsset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 601,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216114,
									"name": "bundleFilenamesAsset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216115,
											"name": "buildDir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "Asset",
												"package": "aws-cdk-lib",
												"name": "Asset"
											}
										]
									}
								}
							]
						},
						{
							"id": 216128,
							"name": "createCertificate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 907,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216129,
									"name": "createCertificate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										]
									}
								}
							]
						},
						{
							"id": 216120,
							"name": "createCfDistribution",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 722,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216121,
									"name": "createCfDistribution",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Distribution",
										"package": "aws-cdk-lib",
										"name": "Distribution"
									}
								}
							]
						},
						{
							"id": 216122,
							"name": "createCloudFrontInvalidation",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 791,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216123,
									"name": "createCloudFrontInvalidation",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 216130,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216131,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216116,
							"name": "createS3Bucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216117,
									"name": "createS3Bucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Bucket",
										"package": "aws-cdk-lib",
										"name": "Bucket"
									}
								}
							]
						},
						{
							"id": 216118,
							"name": "createS3Deployment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 649,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216119,
									"name": "createS3Deployment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "CustomResource",
										"package": "aws-cdk-lib",
										"name": "CustomResource"
									}
								}
							]
						},
						{
							"id": 216099,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216100,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216101,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216103,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216104,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216106,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216105,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216106,
																		216105
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216102,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216103,
														216102
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216132,
							"name": "getS3ContentReplaceValues",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 985,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216133,
									"name": "getS3ContentReplaceValues",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "BaseSiteReplaceProps"
										}
									}
								}
							]
						},
						{
							"id": 216126,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216127,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									}
								}
							]
						},
						{
							"id": 216134,
							"name": "registerSiteEnvironment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 1009,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216135,
									"name": "registerSiteEnvironment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216137,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216138,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 216124,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216125,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216068,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216069,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216070,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216071
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216084,
								216086,
								216076,
								216085,
								216083,
								216136,
								216082
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216091,
								216093,
								216089,
								216097,
								216095,
								216087
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216107,
								216109,
								216113,
								216128,
								216120,
								216122,
								216130,
								216116,
								216118,
								216099,
								216132,
								216126,
								216134,
								216137,
								216124,
								216068
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 368,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 216572,
							"name": "ViteStaticSite"
						},
						{
							"type": "reference",
							"id": 216808,
							"name": "ReactStaticSite"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216053,
					"name": "StaticSiteDomainProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to configure StaticSite domain properties"
					},
					"children": [
						{
							"id": 216057,
							"name": "alternateNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Additional domain names for the site. Note the certificate must cover these domains"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.alternateNames"
							}
						},
						{
							"id": 216059,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216060,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216062,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/BaseSite.ts",
													"line": 30,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 216061,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/BaseSite.ts",
													"line": 29,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216062,
												216061
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.cdk"
							}
						},
						{
							"id": 216055,
							"name": "domainAlias",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The domain alias of the site."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.domainAlias"
							}
						},
						{
							"id": 216054,
							"name": "domainName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The domain name of the site."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.domainName"
							}
						},
						{
							"id": 216056,
							"name": "hostedZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The hosted zone to use for the domain."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.hostedZone"
							}
						},
						{
							"id": 216058,
							"name": "isExternalDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Is hosted outside of AWS"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/BaseSite.ts",
									"line": 27,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseSiteDomainProps.isExternalDomain"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216057,
								216059,
								216055,
								216054,
								216056,
								216058
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 260,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseSiteDomainProps"
						}
					]
				},
				{
					"id": 216063,
					"name": "StaticSiteFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216066,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 265,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216064,
							"name": "exclude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 263,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 216065,
							"name": "include",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 264,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216066,
								216064,
								216065
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 262,
							"character": 17
						}
					]
				},
				{
					"id": 216036,
					"name": "StaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216044,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216045,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216037,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216038,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216039,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 216040,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216039,
												216040
											]
										}
									]
								}
							}
						},
						{
							"id": 216048,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 216053,
										"name": "StaticSiteDomainProps"
									}
								]
							}
						},
						{
							"id": 216051,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 216049,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 216043,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216046,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 216063,
									"name": "StaticSiteFileOptions"
								}
							}
						},
						{
							"id": 216042,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216041,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216050,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 216047,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							}
						},
						{
							"id": 216052,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216044,
								216045,
								216037,
								216048,
								216051,
								216049,
								216043,
								216046,
								216042,
								216041,
								216050,
								216047,
								216052
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/StaticSite.ts",
							"line": 40,
							"character": 17
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 216554,
							"name": "ViteStaticSiteProps"
						},
						{
							"type": "reference",
							"id": 216852,
							"name": "ReactStaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216067
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216053,
						216063,
						216036
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/StaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215281,
			"name": "Table",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215315,
					"name": "Table",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Table` construct is a higher level CDK construct that makes it easy to create a [DynamoDB](https://aws.amazon.com/dynamodb/) table. It uses the following defaults:",
						"text": "- Defaults to using the [On-Demand capacity](https://aws.amazon.com/dynamodb/pricing/on-demand/) to make it perfectly serverless.\n- Enables [Point-in-Time Recovery](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html) to make sure that you don't lose your data.\n- Provides a nicer interface for defining indexes.\n"
					},
					"children": [
						{
							"id": 215319,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 237,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215320,
									"name": "new Table",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215321,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215322,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215323,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215282,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215315,
										"name": "Table"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215324,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 224,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215325,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215326,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Table` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITable",
												"package": "aws-cdk-lib",
												"name": "ITable"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215326
											]
										}
									]
								}
							}
						},
						{
							"id": 215327,
							"name": "dynamodbTableType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 230,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "CREATED"
									},
									{
										"type": "literal",
										"value": "IMPORTED"
									}
								]
							}
						},
						{
							"id": 215335,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 235,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 215328,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215329,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 215330,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 215331,
												"name": "consumerName",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 215737,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 215401,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215332,
							"name": "permissionsAttachedForAllConsumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 232,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 215333,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 233,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 215282,
								"name": "TableProps"
							}
						},
						{
							"id": 215334,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 234,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "StreamViewType",
								"package": "aws-cdk-lib",
								"name": "StreamViewType"
							}
						},
						{
							"id": 215342,
							"name": "tableArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 364,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215343,
									"name": "tableArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215344,
							"name": "tableName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 371,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215345,
									"name": "tableName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Table` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215379,
							"name": "addConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 528,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215380,
									"name": "addConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215381,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215382,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215383,
											"name": "consumer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215299,
														"name": "TableConsumerProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 215346,
							"name": "addConsumers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 386,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215347,
									"name": "addConsumers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Define additional consumers for table events",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addConsumers(this, {\n  consumer1: \"src/consumer1.main\",\n  consumer2: \"src/consumer2.main\",\n});\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215348,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215349,
											"name": "consumers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 215350,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 215351,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 215352,
																"name": "consumerName",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"id": 215665,
																	"name": "FunctionInlineDefinition"
																},
																{
																	"type": "reference",
																	"id": 215299,
																	"name": "TableConsumerProps"
																}
															]
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215336,
							"name": "addGlobalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215337,
									"name": "addGlobalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional global secondary indexes where the `key` is the name of the global secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addGlobalIndexes({\n  gsi1: {\n    partitionKey: \"pk\",\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215338,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 215304,
														"name": "TableGlobalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215339,
							"name": "addLocalIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 331,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215340,
									"name": "addLocalIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add additional local secondary indexes where the `key` is the name of the local secondary index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.addLocalIndexes({\n  lsi1: {\n    sortKey: \"sk\",\n  }\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215341,
											"name": "secondaryIndexes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"id": 215310,
														"name": "TableLocalIndexProps"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215353,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 405,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215354,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to all consumers of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215355,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215356,
							"name": "attachPermissionsToConsumer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 419,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215357,
									"name": "attachPermissionsToConsumer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Grant permissions to a specific consumer of this table.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215358,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215359,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215384,
							"name": "buildAttribute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 588,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215385,
									"name": "buildAttribute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215386,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 215387,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 215388,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 215389,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "TableFieldType"
														}
													}
												}
											}
										},
										{
											"id": 215390,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"qualifiedName": "Attribute",
										"package": "aws-cdk-lib",
										"name": "Attribute"
									}
								}
							]
						},
						{
							"id": 215394,
							"name": "buildKinesisStreamSpec",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 614,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215395,
									"name": "buildKinesisStreamSpec",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215396,
											"name": "kinesisStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 216630,
												"name": "KinesisStream"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215391,
							"name": "buildStreamConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 600,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215392,
									"name": "buildStreamConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215393,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "literal",
														"value": "new_image"
													},
													{
														"type": "literal",
														"value": "old_image"
													},
													{
														"type": "literal",
														"value": "new_and_old_images"
													},
													{
														"type": "literal",
														"value": "keys_only"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "StreamViewType",
												"package": "aws-cdk-lib",
												"name": "StreamViewType"
											}
										]
									}
								}
							]
						},
						{
							"id": 215377,
							"name": "createTable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 460,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215378,
									"name": "createTable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215363,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 447,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215364,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215365,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215367,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215368,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215370,
																	"name": "consumers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 215371,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 215373,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 215374,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 215375,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 215376,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													215375,
																													215376
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 215372,
																						"name": "name",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							215373,
																							215372
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215369,
																	"name": "tableName",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215370,
																		215369
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215366,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Table"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215367,
														215366
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215360,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 443,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215361,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given consumer.",
										"text": "```js\n const table = new Table(this, \"Table\", {\n   consumers: {\n     consumer1: \"./src/function.handler\",\n   }\n })\ntable.attachPermissionsToConsumer(\"consumer1\", [\"s3\"]);\n```\n"
									},
									"parameters": [
										{
											"id": 215362,
											"name": "consumerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 215402,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215403,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215397,
							"name": "validateFieldsAndIndexes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 626,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215398,
									"name": "validateFieldsAndIndexes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215399,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215400,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215282,
												"name": "TableProps"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215316,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215317,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215318,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215319
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215324,
								215327,
								215335,
								215328,
								215401,
								215332,
								215333,
								215334
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215342,
								215344
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215379,
								215346,
								215336,
								215339,
								215353,
								215356,
								215384,
								215394,
								215391,
								215377,
								215363,
								215360,
								215402,
								215397,
								215316
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 223,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215299,
					"name": "TableConsumerProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215301,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 171,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215302,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215303,
											"name": "eventSource",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created event source"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 175,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DynamoEventSourceProps",
												"package": "aws-cdk-lib",
												"name": "DynamoEventSourceProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215303
											]
										}
									]
								}
							}
						},
						{
							"id": 215300,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the consumer function for the table."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 170,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215301,
								215300
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 166,
							"character": 17
						}
					]
				},
				{
					"id": 215304,
					"name": "TableGlobalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215307,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 188,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215308,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215309,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created global secondary index"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "GlobalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "GlobalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "partitionKey"
															},
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215309
											]
										}
									]
								}
							}
						},
						{
							"id": 215305,
							"name": "partitionKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as a partition key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 183,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215306,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 187,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215307,
								215305,
								215306
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 179,
							"character": 17
						}
					]
				},
				{
					"id": 215310,
					"name": "TableLocalIndexProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215312,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 204,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215313,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215314,
											"name": "index",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created local secondary indexes"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 208,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "LocalSecondaryIndexProps",
														"package": "aws-cdk-lib",
														"name": "LocalSecondaryIndexProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sortKey"
															},
															{
																"type": "literal",
																"value": "indexName"
															}
														]
													}
												],
												"qualifiedName": "Omit",
												"package": "typescript",
												"name": "Omit"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215314
											]
										}
									]
								}
							}
						},
						{
							"id": 215311,
							"name": "sortKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The field that's to be used as the sort key for the index."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 203,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215312,
								215311
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 199,
							"character": 17
						}
					]
				},
				{
					"id": 215282,
					"name": "TableProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215296,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 156,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215297,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215298,
											"name": "table",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the settings of the internally created cdk table"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITable",
														"package": "aws-cdk-lib",
														"name": "ITable"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "TableProps",
																"package": "aws-cdk-lib",
																"name": "TableProps"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "partitionKey"
																	},
																	{
																		"type": "literal",
																		"value": "sortKey"
																	}
																]
															}
														],
														"qualifiedName": "Omit",
														"package": "typescript",
														"name": "Omit"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215298
											]
										}
									]
								}
							}
						},
						{
							"id": 215295,
							"name": "consumers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure DynamoDB streams and consumers",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nconst table = new Table(this, \"Table\", {\n  consumers: {\n    consumer1: \"src/consumer1.main\",\n    consumer2: \"src/consumer2.main\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 155,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 215665,
												"name": "FunctionInlineDefinition"
											},
											{
												"type": "reference",
												"id": 215299,
												"name": "TableConsumerProps"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 215292,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215293,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215294,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Table. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(this, \"Table\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { topicName: topic.topicName },\n      permissions: [topic],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 139,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215294
											]
										}
									]
								}
							}
						},
						{
							"id": 215283,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object defining the fields of the table. Key is the name of the field and the value is the type.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "binary"
											}
										]
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 215288,
							"name": "globalIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's global secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    gsi1pk: \"string\",\n    gsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"GSI1\": { partitionKey: \"gsi1pk\", sortKey: \"gsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 89,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 215304,
										"name": "TableGlobalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 215290,
							"name": "kinesisStream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 216630,
								"name": "KinesisStream"
							}
						},
						{
							"id": 215289,
							"name": "localIndexes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the table's local secondary indexes",
								"tags": [
									{
										"tag": "example",
										"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n    lsi1sk: \"string\",\n  },\n  globalIndexes: {\n    \"lsi1\": { sortKey: \"lsi1sk\" },\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 215310,
										"name": "TableLocalIndexProps"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 215284,
							"name": "primaryIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215285,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215286,
											"name": "partitionKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Define the Partition Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215287,
											"name": "sortKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the Sort Key for the table's primary index",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Table(props.stack, \"Table\", {\n  fields: {\n    pk: \"string\",\n    sk: \"string\",\n  },\n  primaryIndex: { partitionKey: \"pk\", sortKey: \"sk\" },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Table.ts",
													"line": 68,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215286,
												215287
											]
										}
									]
								}
							}
						},
						{
							"id": 215291,
							"name": "stream",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Configure the information that will be written to the Stream.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js {8}\nnew Table(props.stack, \"Table\", {\n  stream: \"new_image\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Table.ts",
									"line": 120,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "new_image"
									},
									{
										"type": "literal",
										"value": "old_image"
									},
									{
										"type": "literal",
										"value": "new_and_old_images"
									},
									{
										"type": "literal",
										"value": "keys_only"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215296,
								215295,
								215292,
								215283,
								215288,
								215290,
								215289,
								215284,
								215291
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Table.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215315
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215299,
						215304,
						215310,
						215282
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Table.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215404,
			"name": "Topic",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 215423,
					"name": "Topic",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `Topic` construct is a higher level CDK construct that makes it easy to create a serverless pub/sub service. You can create a topic that has a list of subscribers. And you can publish messages to it from any part of your serverless app.",
						"text": "You can have two types of subscribers; Function subscribers (subscribe with a Lambda function) or Queue subscribers (subscribe with a SQS queue).\n\nThis construct makes it easier to define a topic and its subscribers. It also internally connects the subscribers and topic together.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n### Using the minimal config\n\n```js\nimport { Topic } from \"@serverless-stack/resources\";\n\nnew Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215427,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 155,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 215428,
									"name": "new Topic",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215429,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215430,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 215431,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 215405,
												"name": "TopicProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215423,
										"name": "Topic"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 215432,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 145,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215433,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215434,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Topic` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 149,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ITopic",
												"package": "aws-cdk-lib",
												"name": "ITopic"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215434
											]
										}
									]
								}
							}
						},
						{
							"id": 215482,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 215436,
							"name": "permissionsAttachedForAllSubscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 152,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 215437,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 153,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 215405,
								"name": "TopicProps"
							}
						},
						{
							"id": 215435,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 151,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 215737,
											"name": "Function"
										},
										{
											"type": "reference",
											"id": 215536,
											"name": "Queue"
										}
									]
								}
							}
						},
						{
							"id": 215442,
							"name": "subscriberFunctions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 184,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215443,
									"name": "subscriberFunctions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "A list of the internally created function instances for the subscribers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 215737,
											"name": "Function"
										}
									}
								}
							]
						},
						{
							"id": 215444,
							"name": "subscriptions",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 193,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215445,
									"name": "subscriptions",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of subscriptions for this topic"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "Subscription",
											"package": "aws-cdk-lib",
											"name": "Subscription"
										}
									}
								}
							]
						},
						{
							"id": 215438,
							"name": "topicArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 170,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215439,
									"name": "topicArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215440,
							"name": "topicName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 177,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 215441,
									"name": "topicName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Topic` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 215478,
							"name": "addFunctionSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215479,
									"name": "addFunctionSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215480,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215481,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215413,
														"name": "TopicFunctionSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215474,
							"name": "addQueueSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 328,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215475,
									"name": "addQueueSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215476,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215477,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 215418,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215470,
							"name": "addSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 306,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215471,
									"name": "addSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215472,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215473,
											"name": "subscriber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"id": 215665,
														"name": "FunctionInlineDefinition"
													},
													{
														"type": "reference",
														"id": 215413,
														"name": "TopicFunctionSubscriberProps"
													},
													{
														"type": "reference",
														"id": 215536,
														"name": "Queue"
													},
													{
														"type": "reference",
														"id": 215418,
														"name": "TopicQueueSubscriberProps"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215446,
							"name": "addSubscribers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 226,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215447,
									"name": "addSubscribers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add subscribers to the topic.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.addSubscribers(this, [\"src/subscriber3.main\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215448,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 215449,
											"name": "subscribers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"id": 215665,
															"name": "FunctionInlineDefinition"
														},
														{
															"type": "reference",
															"id": 215413,
															"name": "TopicFunctionSubscriberProps"
														},
														{
															"type": "reference",
															"id": 215536,
															"name": "Queue"
														},
														{
															"type": "reference",
															"id": 215418,
															"name": "TopicQueueSubscriberProps"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215450,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 250,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215451,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the subscriber functions. This allows the subscribers to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\ntopic.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215452,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215453,
							"name": "attachPermissionsToSubscriber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 268,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215454,
									"name": "attachPermissionsToSubscriber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the list of permissions to a given subscriber by index",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js {5}\nconst topic = new Topic(this, \"Topic\", {\n  subscribers: [\"src/subscriber1.main\", \"src/subscriber2.main\"],\n});\n\ntopic.attachPermissionsToSubscriber(0, [\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215455,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 215456,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215468,
							"name": "createTopic",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 291,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 215469,
									"name": "createTopic",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 215457,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 281,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 215458,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215459,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 215461,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 215462,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 215464,
																	"name": "subscribers",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 215465,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 215466,
																						"name": "node",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "fn.node.addr"
																					},
																					{
																						"id": 215467,
																						"name": "stack",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "..."
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							215466,
																							215467
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 215463,
																	"name": "topicArn",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		215464,
																		215463
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 215460,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "Topic"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														215461,
														215460
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 215483,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 215484,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 215424,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 215425,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 215426,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								215427
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215432,
								215482,
								215436,
								215437,
								215435
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								215442,
								215444,
								215438,
								215440
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								215478,
								215474,
								215470,
								215446,
								215450,
								215453,
								215468,
								215457,
								215483,
								215424
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 144,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 215413,
					"name": "TopicFunctionSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a function subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    function: \"src/function.handler\",\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215415,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215416,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215417,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 91,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LambdaSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "LambdaSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215417
											]
										}
									]
								}
							}
						},
						{
							"id": 215414,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used to create the subscriber function for the topic"
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215666,
								"name": "FunctionDefinition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215415,
								215414
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 215405,
					"name": "TopicProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 215410,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215411,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215412,
											"name": "topic",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the default settings this construct uses internally to create the topic."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 66,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "ITopic",
														"package": "aws-cdk-lib",
														"name": "ITopic"
													},
													{
														"type": "reference",
														"qualifiedName": "TopicProps",
														"package": "aws-cdk-lib",
														"name": "TopicProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215412
											]
										}
									]
								}
							}
						},
						{
							"id": 215406,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215407,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215408,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the consumers in the Topic. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n\n```js\nnew Topic(props.stack, \"Topic\", {\n  defaults: {\n    function: {\n      timeout: 20,\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 41,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215408
											]
										}
									]
								}
							}
						},
						{
							"id": 215409,
							"name": "subscribers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of subscribers to create for this topic",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew Topic(this, \"Topic\", {\n  subscribers: [\n    \"src/function1.handler\",\n    \"src/function2.handler\"\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 215665,
											"name": "FunctionInlineDefinition"
										},
										{
											"type": "reference",
											"id": 215413,
											"name": "TopicFunctionSubscriberProps"
										},
										{
											"type": "reference",
											"id": 215536,
											"name": "Queue"
										},
										{
											"type": "reference",
											"id": 215418,
											"name": "TopicQueueSubscriberProps"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215410,
								215406,
								215409
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 215418,
					"name": "TopicQueueSubscriberProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to define a queue subscriber for a topic",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nnew Topic(props.stack, \"Topic\", {\n  subscribers: [{\n    queue: new Queue(this, \"Queue\", {\n      consumer: \"src/function.handler\",\n    })\n  }]\n})\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 215420,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 215421,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 215422,
											"name": "subscription",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This allows you to override the default settings this construct uses internally to create the subscriber."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/Topic.ts",
													"line": 118,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "SqsSubscriptionProps",
												"package": "aws-cdk-lib",
												"name": "SqsSubscriptionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												215422
											]
										}
									]
								}
							}
						},
						{
							"id": 215419,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The queue that'll be added as a subscriber to the topic."
							},
							"sources": [
								{
									"fileName": "packages/resources/src/Topic.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215536,
								"name": "Queue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								215420,
								215419
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/Topic.ts",
							"line": 109,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						215423
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						215413,
						215405,
						215418
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/Topic.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216553,
			"name": "ViteStaticSite",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216572,
					"name": "ViteStaticSite",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `ViteStaticSite` construct is a higher level CDK construct that makes it easy to create a Vite single page app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.",
						"text": "It's designed to work with static sites built with [Vite](https://vitejs.dev/). It allows you to [automatically set environment variables](#configuring-environment-variables) in your Vite app directly from the outputs of your SST app. And it can also create a `.d.ts` type definition file for the environment variables.\n\nThe `ViteStaticSite` construct internally extends the [`StaticSite`](StaticSite.md) construct with the following pre-configured defaults.\n\n- [`indexPage`](StaticSite.md#indexpage) is set to `index.html`.\n- [`errorPage`](StaticSite.md#errorpage) is set to `redirect_to_index_page`. So error pages are redirected to the index page.\n- [`buildCommand`](StaticSite.md#buildcommand) is `npm run build`.\n- [`buildOutput`](StaticSite.md#buildoutput) is the `dist` folder in your Vite app.\n- [`fileOptions`](StaticSite.md#fileoptions) sets the cache control to `max-age=0,no-cache,no-store,must-revalidate` for HTML files; and `max-age=31536000,public,immutable` for JS/CSS files.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n\n```js\nnew ViteStaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216576,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/ViteStaticSite.ts",
									"line": 52,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216577,
									"name": "new ViteStaticSite",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216578,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216579,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216580,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 216554,
												"name": "ViteStaticSiteProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216572,
										"name": "ViteStaticSite"
									},
									"overwrites": {
										"type": "reference",
										"id": 216072,
										"name": "StaticSite.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 216071,
								"name": "StaticSite.constructor"
							}
						},
						{
							"id": 216581,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 369,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216582,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216583,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Bucket` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 373,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Bucket",
												"package": "aws-cdk-lib",
												"name": "Bucket"
											}
										},
										{
											"id": 216586,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 385,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "ICertificate",
												"package": "aws-cdk-lib",
												"name": "ICertificate"
											}
										},
										{
											"id": 216584,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created CDK `Distribution` instance."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 377,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Distribution",
												"package": "aws-cdk-lib",
												"name": "Distribution"
											}
										},
										{
											"id": 216585,
											"name": "hostedZone",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The Route 53 hosted zone for the custom domain."
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 381,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216583,
												216586,
												216584,
												216585
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216076,
								"name": "StaticSite.cdk"
							}
						},
						{
							"id": 216613,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216136,
								"name": "StaticSite.node"
							}
						},
						{
							"id": 216591,
							"name": "bucketArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 468,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216592,
									"name": "bucketArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ARN of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketArn"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216091,
								"name": "StaticSite.bucketArn"
							}
						},
						{
							"id": 216593,
							"name": "bucketName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 475,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216594,
									"name": "bucketName",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The name of the internally created CDK `Bucket` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.bucketName"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216093,
								"name": "StaticSite.bucketName"
							}
						},
						{
							"id": 216589,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 452,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216590,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If the custom domain is enabled, this is the URL of the website with the custom domain."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.customDomainUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216089,
								"name": "StaticSite.customDomainUrl"
							}
						},
						{
							"id": 216597,
							"name": "distributionDomain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 489,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216598,
									"name": "distributionDomain",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The domain name of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionDomain"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216097,
								"name": "StaticSite.distributionDomain"
							}
						},
						{
							"id": 216595,
							"name": "distributionId",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 482,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216596,
									"name": "distributionId",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The ID of the internally created CDK `Distribution` instance."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.distributionId"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216095,
								"name": "StaticSite.distributionId"
							}
						},
						{
							"id": 216587,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 445,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216588,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "The CloudFront URL of the website."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "StaticSite.url"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216087,
								"name": "StaticSite.url"
							}
						},
						{
							"id": 216611,
							"name": "createRoute53Records",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 944,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216612,
									"name": "createRoute53Records",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216131,
										"name": "StaticSite.createRoute53Records"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216130,
								"name": "StaticSite.createRoute53Records"
							}
						},
						{
							"id": 216599,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 493,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216600,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216601,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216603,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216604,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216606,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216605,
																	"name": "distributionId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216606,
																		216605
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216602,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "StaticSite"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216603,
														216602
													]
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216100,
										"name": "StaticSite.getConstructMetadata"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216099,
								"name": "StaticSite.getConstructMetadata"
							}
						},
						{
							"id": 216609,
							"name": "lookupHostedZone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 871,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216610,
									"name": "lookupHostedZone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"qualifiedName": "IHostedZone",
												"package": "aws-cdk-lib",
												"name": "IHostedZone"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216127,
										"name": "StaticSite.lookupHostedZone"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216126,
								"name": "StaticSite.lookupHostedZone"
							}
						},
						{
							"id": 216614,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216615,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216138,
										"name": "StaticSite.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216137,
								"name": "StaticSite.toString"
							}
						},
						{
							"id": 216607,
							"name": "validateCustomDomainSettings",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 841,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 216608,
									"name": "validateCustomDomainSettings",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216125,
										"name": "StaticSite.validateCustomDomainSettings"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216124,
								"name": "StaticSite.validateCustomDomainSettings"
							}
						},
						{
							"id": 216573,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216574,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216575,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 216069,
										"name": "StaticSite.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 216068,
								"name": "StaticSite.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216576
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216581,
								216613
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216591,
								216593,
								216589,
								216597,
								216595,
								216587
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216611,
								216599,
								216609,
								216614,
								216607,
								216573
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ViteStaticSite.ts",
							"line": 51,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 216067,
							"name": "StaticSite"
						}
					]
				},
				{
					"id": 216554,
					"name": "ViteStaticSiteProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216563,
							"name": "buildCommand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The command for building the website",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildCommand: \"npm run build\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216044,
								"name": "StaticSiteProps.buildCommand"
							}
						},
						{
							"id": 216564,
							"name": "buildOutput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The directory with the content that will be uploaded to the S3 bucket. If a `buildCommand` is provided, this is usually where the build output is generated. The path is relative to the [`path`](#path) where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216045,
								"name": "StaticSiteProps.buildOutput"
							}
						},
						{
							"id": 216556,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216557,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216558,
											"name": "bucket",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Pass in a bucket configuration to override the default settings this construct uses to create the CDK `Bucket` internally.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    bucket: {\n      bucketName: \"mybucket\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "BucketProps",
												"package": "aws-cdk-lib",
												"name": "BucketProps"
											}
										},
										{
											"id": 216559,
											"name": "distribution",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Configure the internally created CDK `Distribution` instance.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  cdk: {\n    distribution: {\n      comment: \"Distribution for my React website\",\n    },\n  }\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/StaticSite.ts",
													"line": 73,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"name": "BaseSiteCdkDistributionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216558,
												216559
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216037,
								"name": "StaticSiteProps.cdk"
							}
						},
						{
							"id": 216567,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The customDomain for this website. SST supports domains that are hosted either on [Route 53](https://aws.amazon.com/route53/) or externally.",
								"text": "Note that you can also migrate externally hosted domains to Route 53 by [following this guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html).\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: \"domain.com\",\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n  customDomain: {\n    domainName: \"api.domain.com\",\n    hostedZone: \"domain.com\"\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 200,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 216053,
										"name": "StaticSiteDomainProps"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216048,
								"name": "StaticSiteProps.customDomain"
							}
						},
						{
							"id": 216570,
							"name": "disablePlaceholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When running `sst start`, a placeholder site is deployed. This is to ensure that the site content remains unchanged, and subsequent `sst start` can start up quickly.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n disablePlaceholder: true\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 240,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216051,
								"name": "StaticSiteProps.disablePlaceholder"
							}
						},
						{
							"id": 216568,
							"name": "environment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "An object with the key being the environment variable name. Note, this requires your build tool to support build time environment variables.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  environment: {\n    REACT_APP_API_URL: api.url,\n    REACT_APP_USER_POOL_CLIENT: auth.cognitoUserPoolClient.userPoolClientId,\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 214,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216049,
								"name": "StaticSiteProps.environment"
							}
						},
						{
							"id": 216562,
							"name": "errorPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The error page behavior for this website. Takes either an HTML page.\n```\n404.html\n```\nOr the constant `\"redirect_to_index_page\"` to redirect to the index page.",
								"text": "Note that, if the error pages are redirected to the index page, the HTTP status code is set to 200. This is necessary for single page apps, that handle 404 pages on the client side.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  errorPage: \"redirect_to_index_page\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216043,
								"name": "StaticSiteProps.errorPage"
							}
						},
						{
							"id": 216565,
							"name": "fileOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of file options to configure cache control for different files. Behind the scenes, the `StaticSite` construct uses a combination of the `s3 cp` and `s3 sync` commands to upload the website content to the S3 bucket. An `s3 cp` command is run for each file option block, and the options are passed in as the command options.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  buildOutput: \"dist\",\n  fileOptions: {\n    exclude: \"*\",\n    include: \"*.js\",\n    cacheControl: \"max-age=31536000,public,immutable\",\n  }\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 153,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 216063,
									"name": "StaticSiteFileOptions"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216046,
								"name": "StaticSiteProps.fileOptions"
							}
						},
						{
							"id": 216561,
							"name": "indexPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the index page (e.g. \"index.html\") of the website.",
								"tags": [
									{
										"tag": "default",
										"text": "\"index.html\"\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  indexPage: \"other-index.html\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 98,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216042,
								"name": "StaticSiteProps.indexPage"
							}
						},
						{
							"id": 216560,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path to the directory where the website source is located.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"Site\", {\n  path: \"path/to/src\",\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 85,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216041,
								"name": "StaticSiteProps.path"
							}
						},
						{
							"id": 216569,
							"name": "purgeFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST removes old files that no longer exist. Pass in `false` to keep the old files around.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n purge: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 227,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216050,
								"name": "StaticSiteProps.purgeFiles"
							}
						},
						{
							"id": 216566,
							"name": "replaceValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in a list of placeholder values to be replaced in the website content. For example, the follow configuration:",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n  replaceValues: [\n    {\n      files: \"*.js\",\n      search: \"{{ API_URL }}\",\n      replace: api.url,\n    },\n    {\n      files: \"*.js\",\n      search: \"{{ COGNITO_USER_POOL_CLIENT_ID }}\",\n      replace: auth.cognitoUserPoolClient.userPoolClientId,\n    },\n  ],\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "BaseSiteReplaceProps"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216047,
								"name": "StaticSiteProps.replaceValues"
							}
						},
						{
							"id": 216555,
							"name": "typesPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The path where code-gen should place the type definition for environment variables",
								"tags": [
									{
										"tag": "default",
										"text": "\"src/sst-env.d.ts\""
									},
									{
										"tag": "example",
										"text": "\n```js\nnew ViteStaticSite(props.stack, \"Site\", {\n  typesFile: \"./other/path/sst-env.d.ts\",\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/ViteStaticSite.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216571,
							"name": "waitForInvalidation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "While deploying, SST waits for the CloudFront cache invalidation process to finish. This ensures that the new content will be served once the deploy command finishes. However, this process can sometimes take more than 5 mins. For non-prod environments it might make sense to pass in `false`. That'll skip waiting for the cache to invalidate and speed up the deploy process.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew StaticSite(this, \"ReactSite\", {\n waitForInvalidation: false\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/StaticSite.ts",
									"line": 254,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 216052,
								"name": "StaticSiteProps.waitForInvalidation"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216563,
								216564,
								216556,
								216567,
								216570,
								216568,
								216562,
								216565,
								216561,
								216560,
								216569,
								216566,
								216555,
								216571
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/ViteStaticSite.ts",
							"line": 11,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 216036,
							"name": "StaticSiteProps"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216572
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216554
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/ViteStaticSite.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 216693,
			"name": "WebSocketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 216718,
					"name": "WebSocketApi",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The `WebSocketApi` construct is a higher level CDK construct that makes it easy to create a WebSocket API. It provides a simple way to define your routes and allows you to configure the specific Lambda functions if necessary. It also allows you to configure authorization and custom domains. See the [examples](#examples) for more details.",
						"tags": [
							{
								"tag": "example",
								"text": "\n```js\nimport { WebSocketApi } from \"@serverless-stack/resources\";\n\nnew WebSocketApi(this, \"Api\", {\n  routes: {\n    $connect: \"src/connect.main\",\n    $default: \"src/default.main\",\n    $disconnect: \"src/disconnect.main\",\n    sendMessage: \"src/sendMessage.main\",\n  },\n});\n```\n"
							}
						]
					},
					"children": [
						{
							"id": 216722,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 207,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 216723,
									"name": "new WebSocketApi",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 216724,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216725,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216726,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 216694,
												"name": "WebSocketApiProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 216718,
										"name": "WebSocketApi"
									},
									"overwrites": {
										"type": "reference",
										"name": "Construct.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Construct.constructor"
							}
						},
						{
							"id": 216734,
							"name": "_customDomainUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 198,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216740,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 201,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "reference",
										"qualifiedName": "WebSocketLambdaAuthorizer",
										"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
										"name": "WebSocketLambdaAuthorizer"
									}
								]
							}
						},
						{
							"id": 216727,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 176,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216728,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216731,
											"name": "accessLogGroup",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created log group"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 188,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "LogGroup",
												"package": "aws-cdk-lib",
												"name": "LogGroup"
											}
										},
										{
											"id": 216733,
											"name": "certificate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created certificate"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 196,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "Certificate",
												"package": "aws-cdk-lib",
												"name": "Certificate"
											}
										},
										{
											"id": 216732,
											"name": "domainName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The internally created domain name"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 192,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "DomainName",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "DomainName"
											}
										},
										{
											"id": 216729,
											"name": "webSocketApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created websocket api"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 180,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketApi",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "WebSocketApi"
											}
										},
										{
											"id": 216730,
											"name": "webSocketStage",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The internally created websocket stage"
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 184,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketStage",
												"package": "@aws-cdk/aws-apigatewayv2-alpha",
												"name": "WebSocketStage"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216731,
												216733,
												216732,
												216729,
												216730
											]
										}
									]
								}
							}
						},
						{
							"id": 216735,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 199,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216736,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 216737,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 216738,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"id": 215737,
											"name": "Fn"
										}
									}
								}
							}
						},
						{
							"id": 216804,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The tree node.",
								"tags": [
									{
										"tag": "stability",
										"text": "stable\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 305,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Node",
								"package": "constructs",
								"name": "Node"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.node"
							}
						},
						{
							"id": 216739,
							"name": "permissionsAttachedForAllRoutes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 200,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Permissions"
								}
							}
						},
						{
							"id": 216741,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 205,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 216694,
								"name": "WebSocketApiProps"
							}
						},
						{
							"id": 216748,
							"name": "_connectionsArn",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 251,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216749,
									"name": "_connectionsArn",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216744,
							"name": "customDomainUrl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 240,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216745,
									"name": "customDomainUrl",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Custom domain url if it's configured"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 216746,
							"name": "routes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 247,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216747,
									"name": "routes",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of routes of the websocket api"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 216742,
							"name": "url",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 233,
									"character": 13
								}
							],
							"getSignature": [
								{
									"id": 216743,
									"name": "url",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Url of the websocket api"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216786,
							"name": "addAuthorizer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 443,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216787,
									"name": "addAuthorizer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216788,
							"name": "addRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 466,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216789,
									"name": "addRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216790,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216791,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216792,
											"name": "routeValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 215666,
												"name": "FunctionDefinition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 215737,
										"name": "Function"
									}
								}
							]
						},
						{
							"id": 216750,
							"name": "addRoutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 269,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216751,
									"name": "addRoutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add routes to an already created WebSocket API",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.addRoutes({\n  \"$connect\": \"src/connect.main\",\n})\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216752,
											"name": "scope",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "Construct",
												"package": "constructs",
												"name": "Construct"
											}
										},
										{
											"id": 216753,
											"name": "routes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 216754,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 216755,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 216756,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"id": 215666,
															"name": "FunctionDefinition"
														}
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216760,
							"name": "attachPermissions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 307,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216761,
									"name": "attachPermissions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to all the routes. This allows the functions to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n\n```js\napi.attachPermissions([\"s3\"]);\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216762,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216763,
							"name": "attachPermissionsToRoute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 323,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216764,
									"name": "attachPermissionsToRoute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches the given list of permissions to a specific route. This allows that function to access other AWS resources.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\napi.attachPermissionsToRoute(\"$connect\", [\"s3\"]);\n```\n\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216765,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216766,
											"name": "permissions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Permissions"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216793,
							"name": "buildRouteAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 533,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216794,
									"name": "buildRouteAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 216795,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216796,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"NONE\""
														},
														{
															"id": 216797,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216796,
																216797
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 216798,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 216799,
															"name": "authorizationType",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"CUSTOM\""
														},
														{
															"id": 216800,
															"name": "authorizer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"qualifiedName": "WebSocketLambdaAuthorizer",
																		"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
																		"name": "WebSocketLambdaAuthorizer"
																	}
																]
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																216799,
																216800
															]
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 216782,
							"name": "createWebSocketApi",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 351,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216783,
									"name": "createWebSocketApi",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216784,
							"name": "createWebSocketStage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 377,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216785,
									"name": "createWebSocketStage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 216767,
							"name": "getConstructMetadata",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 337,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216768,
									"name": "getConstructMetadata",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216769,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216771,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 216772,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 216774,
																	"name": "customDomainUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216773,
																	"name": "httpApiId",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 216775,
																	"name": "routes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 216776,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 216778,
																						"name": "fn",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "reflection",
																									"declaration": {
																										"id": 216779,
																										"name": "__type",
																										"kind": 65536,
																										"kindString": "Type literal",
																										"flags": {},
																										"children": [
																											{
																												"id": 216780,
																												"name": "node",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "fn.node.addr"
																											},
																											{
																												"id": 216781,
																												"name": "stack",
																												"kind": 1024,
																												"kindString": "Property",
																												"flags": {},
																												"type": {
																													"type": "intrinsic",
																													"name": "string"
																												},
																												"defaultValue": "..."
																											}
																										],
																										"groups": [
																											{
																												"title": "Properties",
																												"kind": 1024,
																												"children": [
																													216780,
																													216781
																												]
																											}
																										]
																									}
																								}
																							]
																						},
																						"defaultValue": "..."
																					},
																					{
																						"id": 216777,
																						"name": "route",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						},
																						"defaultValue": "routeKey"
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							216778,
																							216777
																						]
																					}
																				]
																			}
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		216774,
																		216773,
																		216775
																	]
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 216770,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": "WebSocketApi"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216771,
														216770
													]
												}
											]
										}
									},
									"implementationOf": {
										"type": "reference",
										"name": "SSTConstruct.getConstructMetadata"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "SSTConstruct.getConstructMetadata"
							}
						},
						{
							"id": 216757,
							"name": "getFunction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 294,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 216758,
									"name": "getFunction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the instance of the internally created Function, for a given route key where the `routeKey` is the key used to define a route. For example, `$connect`.",
										"tags": [
											{
												"tag": "example",
												"text": "\n```js\nconst fn = api.getFunction(\"$connect\");\n```\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216759,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 215737,
												"name": "Function"
											}
										]
									}
								}
							]
						},
						{
							"id": 216801,
							"name": "normalizeRouteKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 546,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 216802,
									"name": "normalizeRouteKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 216803,
											"name": "routeKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 216805,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 319,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 216806,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns a string representation of this construct.",
										"tags": [
											{
												"tag": "stability",
												"text": "stable\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.toString"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.toString"
							}
						},
						{
							"id": 216719,
							"name": "isConstruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/constructs/lib/construct.d.ts",
									"line": 299,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 216720,
									"name": "isConstruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "(deprecated) Checks if `x` is a construct.",
										"returns": "true if `x` is an object created from a class which extends `Construct`.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "use `x instanceof Construct` instead\n"
											}
										]
									},
									"parameters": [
										{
											"id": 216721,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"shortText": "Any object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "x",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"qualifiedName": "Construct",
											"package": "constructs",
											"name": "Construct"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Construct.isConstruct"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Construct.isConstruct"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								216722
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216734,
								216740,
								216727,
								216735,
								216804,
								216739,
								216741
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								216748,
								216744,
								216746,
								216742
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								216786,
								216788,
								216750,
								216760,
								216763,
								216793,
								216782,
								216784,
								216767,
								216757,
								216801,
								216805,
								216719
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 175,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Construct",
							"package": "constructs",
							"name": "Construct"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "SSTConstruct"
						}
					]
				},
				{
					"id": 216714,
					"name": "WebSocketApiCdkStageProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216716,
							"name": "autoDeploy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "Whether updates to an API automatically trigger a new deployment.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-apigatewayv2-alpha/lib/common/stage.d.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.autoDeploy"
							}
						},
						{
							"id": 216717,
							"name": "domainMapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The options for custom domain and api mapping",
								"tags": [
									{
										"tag": "default",
										"text": "- no custom domain and api mapping configuration\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@aws-cdk/aws-apigatewayv2-alpha/lib/common/stage.d.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "DomainMappingOptions",
								"package": "@aws-cdk/aws-apigatewayv2-alpha",
								"name": "DomainMappingOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.domainMapping"
							}
						},
						{
							"id": 216715,
							"name": "stageName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 151,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216716,
								216717,
								216715
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 149,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"qualifiedName": "WebSocketStageProps",
									"package": "@aws-cdk/aws-apigatewayv2-alpha",
									"name": "apig.WebSocketStageProps"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "webSocketApi"
										},
										{
											"type": "literal",
											"value": "stageName"
										}
									]
								}
							],
							"qualifiedName": "Omit",
							"package": "typescript",
							"name": "Omit"
						}
					]
				},
				{
					"id": 216706,
					"name": "WebSocketApiLambdaAuthorizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216711,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216712,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216713,
											"name": "authorizer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 145,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"qualifiedName": "WebSocketLambdaAuthorizer",
												"package": "@aws-cdk/aws-apigatewayv2-authorizers-alpha",
												"name": "WebSocketLambdaAuthorizer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216713
											]
										}
									]
								}
							}
						},
						{
							"id": 216710,
							"name": "function",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 143,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 215737,
								"name": "Function"
							}
						},
						{
							"id": 216709,
							"name": "identitySource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 142,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 216708,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 141,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 216707,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 140,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "lambda"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216711,
								216710,
								216709,
								216708,
								216707
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 139,
							"character": 17
						}
					]
				},
				{
					"id": 216694,
					"name": "WebSocketApiProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 216700,
							"name": "accessLog",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable CloudWatch access logs for this API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  accessLog: true\n});\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  accessLog: {\n    retention: \"one_week\",\n  },\n});\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "AccessLogProps"
									}
								]
							}
						},
						{
							"id": 216702,
							"name": "authorizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 115,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "iam"
									},
									{
										"type": "reference",
										"id": 216706,
										"name": "WebSocketApiLambdaAuthorizer"
									}
								]
							}
						},
						{
							"id": 216695,
							"name": "cdk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216696,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216697,
											"name": "webSocketApi",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created WebSocket API",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(props.stack, \"WebSocketApi\", {\n  cdk: {\n    webSocketApi: {\n      apiName: \"my-websocket-api\"\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 38,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IWebSocketApi",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IWebSocketApi"
													},
													{
														"type": "reference",
														"qualifiedName": "WebSocketApiProps",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "WebSocketApiProps"
													}
												]
											}
										},
										{
											"id": 216698,
											"name": "webSocketStage",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Override the internally created WebSocket Stage",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(props.stack, \"WebSocketApi\", {\n  cdk: {\n    webSocketStage: {\n      autoDeploy: false\n    }\n  }\n})\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "IWebSocketStage",
														"package": "@aws-cdk/aws-apigatewayv2-alpha",
														"name": "IWebSocketStage"
													},
													{
														"type": "reference",
														"id": 216714,
														"name": "WebSocketApiCdkStageProps"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216697,
												216698
											]
										}
									]
								}
							}
						},
						{
							"id": 216701,
							"name": "customDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a custom domain to use in addition to the automatically generated one. SST currently supports domains that are configured using [Route 53](https://aws.amazon.com/route53/)",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  customDomain: \"api.example.com\"\n})\n```\n"
									},
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  customDomain: {\n    domainName: \"api.example.com\",\n    hostedZone: \"domain.com\",\n    path: \"v1\"\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 112,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CustomDomainProps"
									}
								]
							}
						},
						{
							"id": 216703,
							"name": "defaults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 117,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 216704,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 216705,
											"name": "function",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The default function props to be applied to all the Lambda functions in the API. The `environment`, `permissions` and `layers` properties will be merged with per route definitions if they are defined.",
												"tags": [
													{
														"tag": "example",
														"text": "\n```js\nnew WebSocketApi(this, \"Api\", {\n  defaults: {\n    function: {\n      timeout: 20,\n      environment: { tableName: table.tableName },\n      permissions: [table],\n    }\n  },\n});\n```\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/resources/src/WebSocketApi.ts",
													"line": 134,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"id": 215667,
												"name": "FunctionProps"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												216705
											]
										}
									]
								}
							}
						},
						{
							"id": 216699,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The routes for the Websocket API",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nnew WebSocketApi(props.stack, \"Api\", {\n  routes: {\n    $connect    : \"src/connect.main\",\n    $default    : \"src/default.main\",\n    $disconnect : \"src/disconnect.main\",\n    sendMessage : \"src/sendMessage.main\",\n  }\n})\n```\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/resources/src/WebSocketApi.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 215666,
										"name": "FunctionDefinition"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216700,
								216702,
								216695,
								216701,
								216703,
								216699
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/resources/src/WebSocketApi.ts",
							"line": 22,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						216718
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						216714,
						216706,
						216694
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/resources/src/WebSocketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				214796,
				216869,
				216289,
				215142,
				215575,
				214989,
				215927,
				215663,
				216459,
				216616,
				216139,
				215525,
				215038,
				216807,
				215485,
				216035,
				215281,
				215404,
				216553,
				216693
			]
		}
	]
}